{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAA,IAAY,QAqBX;AArBD,WAAY,QAAQ;IAClB,6BAAiB;IACjB,yBAAa;IACb,iCAAqB;IACrB,2BAAe;IACf,6BAAiB;IACjB,2BAAe;IACf,6BAAiB;IACjB,iCAAqB;IACrB,6BAAiB;IACjB,+BAAmB;IACnB,yBAAa;IACb,uBAAW;IACX,uBAAW;IACX,6BAAiB;IACjB,2BAAe;IACf,yBAAa;IACb,2BAAe;IACf,2BAAe;IACf,yBAAa;IACb,6BAAiB;AACnB,CAAC,EArBW,QAAQ,KAAR,QAAQ,QAqBnB;AAEM,MAAM,UAAU,GAAG;IACxB,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC9B,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC/B,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC/B,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC7B,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAChC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC9B,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC/B,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC/B,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC9B,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IACjC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC/B,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAChC,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAChC,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAC7B,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAChC,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAChC,UAAU,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAClC,UAAU,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IAClC,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;CAClC,CAAC;AAKD,CAAC;AAKD,CAAC;AAGK,MAAM,OAAO;IAiDlB,2EAA2E;IAC3E;QACE,kEAAkE;QAClE,wBAAwB;QAExB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpB,IAAI,CAAC,KAAK,GAAG,SAAqB,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,MAAkB,CAAC;QAEhC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QAEnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,+CAA+C;IAC/C,aAAa,CAAC,UAAkB,EAAE,WAAmB;QACnD,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACxD,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAEzD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACrD,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;QACjG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAClD,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAc,CAAC;QAChE,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAc,CAAC,CAAC,CAAC,MAAkB,CAAC;QAEpH,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SACpD;QACD,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SACpD;QACD,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACnC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;SACzD;IACH,CAAC;IAED,MAAM,CAAC,YAAY,CAAC,SAAc;QAChC,wDAAwD;QACxD,IACE,SAAS,CAAC,IAAI,KAAK,SAAS;YAC5B,SAAS,CAAC,WAAW,KAAK,SAAS;YACnC,SAAS,CAAC,GAAG,KAAK,SAAS;YAC3B,SAAS,CAAC,EAAE,KAAK,SAAS;YAC1B,SAAS,CAAC,MAAM,KAAK,SAAS;YAC9B,SAAS,CAAC,OAAO,KAAK,SAAS;YAC/B,SAAS,CAAC,SAAS,KAAK,SAAS;YACjC,SAAS,CAAC,UAAU,KAAK,SAAS;YAClC,SAAS,CAAC,KAAK,KAAK,SAAS;YAC7B,SAAS,CAAC,UAAU,KAAK,SAAS;YAClC,SAAS,CAAC,KAAK,KAAK,SAAS;YAC7B,SAAS,CAAC,KAAK,KAAK,SAAS;YAC7B,SAAS,CAAC,SAAS,KAAK,SAAS;YACjC,SAAS,CAAC,SAAS,KAAK,SAAS;YACjC,SAAS,CAAC,OAAO,KAAK,SAAS;YAC/B,SAAS,CAAC,QAAQ,KAAK,SAAS;YAChC,SAAS,CAAC,UAAU,KAAK,SAAS;YAClC,SAAS,CAAC,KAAK,KAAK,SAAS;YAC7B,SAAS,CAAC,QAAQ,KAAK,SAAS;YAChC,SAAS,CAAC,aAAa,KAAK,SAAS;YACrC,SAAS,CAAC,YAAY,KAAK,SAAS;YACpC,SAAS,CAAC,GAAG,KAAK,SAAS;YAC3B,SAAS,CAAC,QAAQ,KAAK,SAAS;YAChC,SAAS,CAAC,aAAa,KAAK,SAAS;YACrC,SAAS,CAAC,cAAc,KAAK,SAAS;YACtC,SAAS,CAAC,kBAAkB,KAAK,SAAS;YAC1C,SAAS,CAAC,kBAAkB,KAAK,SAAS;YAC1C,SAAS,CAAC,kBAAkB,KAAK,SAAS;YAC1C,SAAS,CAAC,0BAA0B,KAAK,SAAS;YAClD,SAAS,CAAC,kBAAkB,KAAK,SAAS;YAC1C,SAAS,CAAC,cAAc,KAAK,SAAS;YACtC,SAAS,CAAC,KAAK,KAAK,SAAS;QAC7B,sCAAsC;QACtC,mCAAmC;UACnC;YACA,gCAAgC;YAChC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC5C;QACD,IAAI,GAAG,GAAG,IAAI,OAAO,EAAE,CAAC;QACxB,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC1B,GAAG,CAAC,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;QACxC,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;QACxB,GAAG,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;QACtB,GAAG,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAC9B,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;QAChC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QACpC,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;QACtC,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC5B,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;QAEtC,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC5B,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAE5B,yBAAyB;QACzB,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QACpC,GAAG,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;QACpC,GAAG,CAAC,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC;QAChC,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QAClC,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;QACtC,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAC5B,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QAElC,GAAG,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;QAC5C,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;QAE1C,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;QACxB,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QAElC,GAAG,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;QAC5C,GAAG,CAAC,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC;QAC9C,GAAG,CAAC,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC;QACtD,GAAG,CAAC,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC;QACtD,GAAG,CAAC,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC;QACtD,GAAG,CAAC,0BAA0B,GAAG,SAAS,CAAC,0BAA0B,CAAC;QACtE,GAAG,CAAC,kBAAkB,GAAG,SAAS,CAAC,kBAAkB,CAAC;QAEtD,GAAG,CAAC,cAAc,GAAG,SAAS,CAAC,cAAc,CAAC;QAE9C,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;QAE5B,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QAClC,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QAClC,GAAG,CAAC,aAAa,GAAG,SAAS,CAAC,aAAa,CAAC;QAE5C,OAAO,GAAG,CAAC;IACb,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACnC,OAAO;SACR;QACD,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QACtD,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3B,MAAM,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAC/D,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE;YAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,IAAE,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,IAAE,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE;YAC9C,QAAQ,IAAI,EAAE;gBACZ,KAAK,IAAI;oBACP,OAAO,IAAI,CAAC,EAAE,CAAC;gBACjB,KAAK,QAAQ;oBACX,OAAO,IAAI,CAAC,MAAM,CAAC;gBACrB,KAAK,SAAS;oBACZ,OAAO,IAAI,CAAC,OAAO,CAAC;gBACtB,KAAK,WAAW;oBACd,OAAO,IAAI,CAAC,SAAS,CAAC;gBACxB,KAAK,YAAY;oBACf,OAAO,IAAI,CAAC,UAAU,CAAC;gBACzB,KAAK,SAAS;oBACZ,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,OAAO;oBACV,OAAO,IAAI,CAAC,KAAK,CAAC;gBACpB,KAAK,YAAY;oBACf,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;gBACpB;oBACE,OAAO,CAAC,CAAC;aACZ;SACF;aAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,IAAI,KAAK,YAAY,EAAE;YAC3D,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;SACnB;aAAM;YACL,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAC9B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,+BAA+B;QAC7B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACpC,OAAO;gBACL,KAAK,EAAE,CAAC;gBACR,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,0BAA0B,IAAI,IAAI,CAAC,cAAc;oBAC9D,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACvB,CAAC,CAAC,KAAK;aACM,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0BAA0B;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,OAAO;gBACL,EAAE,EAAE,CAAC;gBACL,IAAI,EAAE,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc;oBAClE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAClB,CAAC,CAAC,KAAK;aACC,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC;IACnF,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;IAChF,CAAC;IAED;;;;MAIE;IACF,aAAa;QACX,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACpH,CAAC;IAED;;;;MAIE;IACF,WAAW;QACT,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACpH,CAAC;IAED,GAAG;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACtF,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;IACzF,CAAC;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE;YAC9C,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1F;QACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,sBAAsB;QACpB,IAAI,GAAG,GAAa,EAAE,CAAC;QACvB,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,cAAc,EAAE;YAClD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACzB;YACD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACzB;YACD,IAAI,IAAI,CAAC,aAAa,EAAE;gBACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC9B;SACF;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACxB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjB;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,aAAa,CAAC;IACrD,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC;IACpD,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,YAAY,CAAC;IACzE,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,kBAAkB,CAAC;IACxD,CAAC;CACF;;;;;;;;;;;;;;;;;AC3ZM,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;gHAAlB,kBAAkB;QCP/B,yEAA2B;QAEvB,oGACF;QAAA,4DAAK;QACL,gEAAI;QACJ,oEAAG;QACD,qPAEF;QAAA,4DAAI;QACJ,oEAAG;QACD,wjBAGF;QAAA,4DAAI;QACJ,gEAAI;QACJ,qEAAI;QACF,mEACF;QAAA,4DAAK;QACL,qEAAG;QACD,kIACA;QAAA,wEAAwH;QAAA,2FAA+B;QAAA,4DAAI;QAAA,4QAE7J;QAAA,4DAAI;QACJ,wEAAwB;QACtB,uOACF;QAAA,4DAAI;QACJ,qEAAG;QACD,6ZACF;QAAA,4DAAI;QACJ,qEAAG;QACD,yVAEF;QAAA,4DAAI;QACJ,qEAAG;QACD,kOACF;QAAA,4DAAI;QACJ,sEAAI;QAEA,iFACF;QAAA,4DAAK;QACL,sEAAI;QACF,6FACF;QAAA,4DAAK;QACL,sEAAI;QACF,2HACF;QAAA,4DAAK;QAEP,iEAAI;QACJ,sEAAI;QACF,qEACF;QAAA,4DAAK;QACL,sEAAI;QAEA,sHACF;QAAA,4DAAK;QACL,sEAAI;QACF,8HACF;QAAA,4DAAK;QACF,iEAAI;QACT,sEAAI;QACF,0EACF;QAAA,4DAAK;QACL,sEAAI;QAEA,0XACF;QAAA,4DAAK;QACL,sEAAI;QACF,yOACF;QAAA,4DAAK;QACL,sEAAI;QACF,6hBAEF;QAAA,4DAAK;QACL,sEAAI;QACF,8PACF;QAAA,4DAAK;QACL,sEAAI;QACF,2MACF;QAAA,4DAAK;;;;;;;;;;;;;;;;;;;;;AC7E8C;AACD;AACuB;AACP;;;AAGtE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,+DAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,sFAAoB,EAAC;IACnD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAkB,EAAC;IAC/C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAC;CACnD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;ACTjB,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,iBAAiB,CAAC;KAC3B;;wEAFY,YAAY;0GAAZ,YAAY;QCPzB,wEAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCiC;AAEQ;AACP;AACA;AACN;AAEkB;AACd;AACS;AACX;AAEC;AACT;AACa;AACN;AACuB;AACO;AACA;AAEvC;AACkF;AACnE;AAEiB;AAC0C;AAClB;AACN;AACjB;AACP;;AAuChE,MAAM,SAAS;;kEAAT,SAAS;uGAAT,SAAS,cAFN,wDAAY;4GADb,EAAE,YAhBJ;YACL,qEAAa;YACb,iEAAgB;YAChB,wDAAW;YACX,gEAAmB;YACnB,wDAAW;YACX,sEAAe;YACf,kEAAa;YACb,0FAAuB;YACvB,sEAAkB;YAClB,sEAAe;YACf,kFAAqB;YACrB,oEAAc;YACd,6EAAkB;YAClB,kEAAa;SAChB,EA/BG,sEAAkB;oIAmCb,SAAS,mBAhCd,wDAAY;QACZ,qEAAe;QACf,+DAAa;QACb,sFAAoB;QACpB,6FAAkB;QAClB,6FAAkB;QAClB,wIAA4B;QAC5B,gIAA0B;QAC1B,+GAAoB;QACpB,yGAAkB;QAClB,wFAAa;QACb,iFAAkB,aAGlB,qEAAa;QACb,iEAAgB;QAChB,wDAAW;QACX,gEAAmB;QACnB,wDAAW;QACX,sEAAe;QACf,kEAAa;QACb,0FAAuB;QACvB,sEAAkB;QAClB,sEAAe;QACf,kFAAqB;QACrB,oEAAc;QACd,6EAAkB;QAClB,kEAAa,aA9Bb,sEAAkB;;;;;;;;;;;;;;;;;;;;;AC1BnB,MAAM,eAAe;IAG1B,YAAY,UAA0B;QACpC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAED,QAAQ;IACR,CAAC;;8EARU,eAAe;6GAAf,eAAe;QCR5B,sEAAK;QACwB,6EAAkB;QAAA,4DAAK;QAChD,yEAAgB;QAC4E,+DAAI;QAAA,4DAAI;QAAA,+DAAI;QAAA,4DAAI;QACxG,uEAAiE;QAAA,oEAAmE;QAAA,mEAAO;QAAA,4DAAI;QAC/I,wEAA+D;QAAyC,gEAAI;QAAA,4DAAI;QAAA,iEAAK;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;ACS1H,MAAM,aAAa;IASxB,YAAY,GAAmB,EAAE,MAAc;QAN/C,oDAAoD;QACpD,sBAAiB,GAAG,KAAK,CAAC;QAMxB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,cAAc,CAAC,CAAQ;QACrB,MAAM,MAAM,GAAE,CAAC,CAAC,MAA0B,CAAC;QAC3C,MAAM,KAAK,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,CAAC;QAC5B,MAAM,IAAI,GAAa,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAEzC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,iBAAiB,GAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;SACxC;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACtC,CAAC;IAED,IAAI;QACF,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,GAAC,gCAAgC,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;IACvG,CAAC;IAED,wFAAwF;IACxF,kBAAkB;QAChB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;IAC5B,CAAC;;0EA1CU,aAAa;2GAAb,aAAa;;;;;;QCN1B,yEAA0B;QAClB,iEAAM;QAAA,4DAAK;QACf,sEAAK;QAEG,8IACJ;QAAA,4DAAI;QACJ,oEAAG;QACC,+RAEJ;QAAA,4DAAI;QACJ,oEAAG;QACC,iTACJ;QAAA,4DAAI;QAER,0EAAmB;QAE0B,uEAAW;QAAA,4DAAK;QACrD,4EAAiH;QAAhD,6IAAU,0BAAsB,IAAC;QAAlG,4DAAiH;QACjH,4EAAkD;QAAA,sFAA0B;QAAA,4DAAQ;QAEpF,4EAAkH;QAAjD,6IAAU,0BAAsB,IAAC;QAAlG,4DAAkH;QAClH,4EAAkD;QAAA,qFAAyB;QAAA,4DAAQ;QAEnF,6EAA4D;QAAhC,sIAAS,yBAAqB,IAAC;QAAC,oFAAwB;QAAA,4DAAS;QAC7F,wEAA4I;QAC5G,sGAA0C;QAAA,4DAAS;;;;;;;;;;;;;;;;;;AC1BxF,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;2GAAb,aAAa;QCP1B,oEAEM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEMF,4EAAsE;IAC1D,gSAAS,aAAM,IAAC;IAAsF,+DAAI;IAAA,4DAAS;;;;IAE/H,6EAA4F;IAAlB,sSAAS,eAAO,IAAC;IAAC,uDAA8C;IAAA,4DAAS;;;IAAvD,0DAA8C;IAA9C,iHAA8C;;;IAE1I,6EAA4H;IAExH,4EACA;IAAA,4DAAI;;;;IAHW,kFAAoC;;;IAsBvD,6EAAgE;;;IADpE,sEAAwC;IACpC,8IAAgE;IACpE,4DAAM;;;IADgB,0DAA0B;IAA1B,6FAA0B;;;IAEhD,sEAAqC;IACjC,0EAA6B;IACjC,4DAAM;;;IACN,sEAAmC;IAC/B,wEAAyB;IAC7B,4DAAM;;ADlCC,MAAM,kBAAkB;IAU7B,YAAY,GAAoB;QARzB,UAAK,GAAY,KAAK,CAAC;QACvB,UAAK,GAAY,IAAI,CAAC;QACtB,UAAK,GAAY,KAAK,CAAC;QACvB,gBAAW,GAAW,YAAY,CAAC;QAMxC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IAED,cAAc,CAAC,CAAQ;QACrB,MAAM,MAAM,GAAE,CAAC,CAAC,MAA0B,CAAC;QAC3C,MAAM,KAAK,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,CAAC;QAC5B,MAAM,IAAI,GAAa,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAEzC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACjC;IAEH,CAAC;IAED,2IAA2I;IAC3I,8BAA8B;IAC9B,IAAI;QACF,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAC5B;YACE,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO;SAC1B,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,GAAC,gCAAgC,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;IACvG,CAAC;IAED,KAAK;QACH,IAAG,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE;YAC3B,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;SACtB;IACH,CAAC;IAED,SAAS;QACP,IAAG,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE;YAC1B,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;SACvB;IACH,CAAC;IAED,UAAU;QACR,IAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE;YAC5B,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;SACtB;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;SACxB;IACH,CAAC;IAED,cAAc;QACZ,IAAG,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE;YAChC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;SAC5B;IACH,CAAC;IAED,QAAQ;IACR,CAAC;;oFApEU,kBAAkB;gHAAlB,kBAAkB;;;;;;QCP/B,yEAAgB;QACiD,uJAAqB,YAAY,IAAC;QAAC,uEAA0B;QAAA,kEAAO;QAAA,4DAAI;QAAA,kEAAO;QAAA,4DAAI;QAGhJ,uEAAM;QAAA,gFAAqB;QAAA,4DAAO;QAClC,8EAAiI;QAAlE,iJAAU,0BAAsB,IAAC;QAAhG,4DAAiI;QACjI,2EAA+C;QAAA,kEAAM;QAAA,4DAAQ;QAC7D,4GAEI;QACJ,sHAAmJ;QAEnJ,sHAIS;QACT,mFAAoF;QACzD,2IAAS,gBAAY,IAAC;QAAC,wDAA2D;QAAA,4DAAS;QAClH,8EAA4C;QAAtB,2IAAS,eAAW,IAAC;QAAC,wDAAuD;QAAA,4DAAS;QAC5G,8EAAiD;QAA3B,2IAAS,oBAAgB,IAAC;QAAC,wDAAuE;QAAA,4DAAS;QAazI,iHAEM;QACN,iHAEM;QACN,iHAEM;;QAxCa,0DAA6C;QAA7C,uGAA6C;QAMxC,2DAA0B;QAA1B,0FAA0B;QAGA,0DAA0B;QAA1B,0FAA0B;QAEf,0DAA0B;QAA1B,0FAA0B;QAMjC,0DAA2D;QAA3D,2HAA2D;QAC7D,0DAAuD;QAAvD,uHAAuD;QAClD,0DAAuE;QAAvE,uIAAuE;QAa1H,0DAAgC;QAAhC,kGAAgC;QAGhC,0DAA6B;QAA7B,+FAA6B;QAG7B,0DAA2B;QAA3B,6FAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCY;AAIJ;AACN;AAEU;;;;;;;;;;;;;ICAzB,iFAA+E;IAC3E,uDACJ;IAAA,4DAAa;;;IAFmD,2EAAc;IAC1E,0DACJ;IADI,oFACJ;;;IAUJ,qEAA0H;;;IAA3E,wNAA0E;;;IAIzH,qEAA8I;;;IAA3E,yNAA0E;;;IAFjJ,0EAA8C;IAC1C,qEAAkG;IAClG,8HAA8I;IAClJ,4DAAM;;;IAFqB,0DAA0E;IAA1E,wNAA0E;IAC1E,0DAA0C;IAA1C,0GAA0C;;;;IAErE,0EAAgD;IACc,2SAAS,gCAAwB,IAAC;IAAC,uDAA0D;IAAA,4DAAS;;;IAAvI,0DAAgC;IAAhC,gGAAgC;IAAoC,0DAA0D;IAA1D,6HAA0D;;;;IAS3J,0EAAgD;IACc,2SAAS,gCAAwB,IAAC;IAAC,uDAA6D;IAAA,4DAAS;;;IAA1I,0DAAgC;IAAhC,gGAAgC;IAAoC,0DAA6D;IAA7D,gIAA6D;;;IAO9J,0EAAqG;IAAC,uDAAkC;IAAA,4DAAM;;;;IAAxC,0DAAkC;IAAlC,uHAAkC;;;IAD5I,0EAAqD;IACjD,8HAA8I;IAClJ,4DAAM;;;IAD6C,0DAA0C;IAA1C,gHAA0C;;;;IAE7F,0EAAgD;IACiB,2SAAS,mCAA2B,IAAC;IAAC,uDAAyE;IAAA,4DAAS;;;IAAzJ,0DAAgC;IAAhC,gGAAgC;IAAuC,0DAAyE;IAAzE,4IAAyE;;;;IAM5K,+EAAsG;IAAjC,8WAAgC;IAAC,4DAAW;;;IAA5C,8FAAgC;;AD3CjH,oDAAc,CAAC,GAAG,mDAAa,CAAC,CAAC;AACjC,0DAAoB,GAAG,SAAS,CAAC;AAO1B,MAAM,0BAA0B;IAerC,YAAY,GAAmB;QAV/B,SAAI,GAAgB,IAAI,uDAAW,EAAE,CAAC;QAGtC,iBAAY,GAAG,KAAK,CAAC;QAQnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CACvD,yDAAS,CAAC,EAAE,CAAC,EACb,mDAAG,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CACjD;IACH,CAAC;IAED,UAAU,CAAC,WAAmB;QAC5B,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3H,CAAC;IAED,sBAAsB;QACpB,IAAG,IAAI,CAAC,WAAW,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;YACjE,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;SAClD;IACH,CAAC;IAED,sBAAsB;QACpB,IAAG,IAAI,CAAC,WAAW,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;YACnE,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClD,4EAA4E;YAC5E,6IAA6I;YAC7I,uBAAuB;SACxB;IACH,CAAC;IAED,yBAAyB;QACvB,IAAG,IAAI,CAAC,WAAW,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC;YAC3E,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;SAClD;IACH,CAAC;IAGD,QAAQ;IAER,CAAC;IACD,wDAAwD;IACxD,kDAAkD;IAElD,eAAe;QACb,IAAI,CAAC,KAAK,GAAG,IAAI,2CAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;YAClD,IAAI,EAAE,KAAK;YACX,IAAI,EAAE;gBACJ,MAAM,EAAE,CAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,OAAO,CAAC;gBACzE,QAAQ,EAAE,CAAC;wBACT,IAAI,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;wBAC5E,eAAe,EAAE;4BACf,yBAAyB;4BACzB,yBAAyB;4BACzB,yBAAyB;4BACzB,yBAAyB;4BACzB,wBAAwB;4BACxB,YAAY;4BACZ,0BAA0B;yBAC3B;wBACD,WAAW,EAAE;4BACX,mBAAmB;4BACnB,mBAAmB;4BACnB,mBAAmB;4BACnB,mBAAmB;4BACnB,mBAAmB;4BACnB,oBAAoB;yBACrB;wBACD,WAAW,EAAE,CAAC;wBACd,eAAe,EAAE,EAAE;qBAEpB,CAAC;aAEH;YACD,OAAO,EAAE;gBACP,KAAK,EAAE,SAAS;gBAChB,SAAS,EAAE,GAAG;gBACd,MAAM,EAAE;oBACN,CAAC,EAAE;wBACD,WAAW,EAAE,IAAI;wBACjB,GAAG,EAAE,CAAC;wBACN,GAAG,EAAE,GAAG;wBACR,IAAI,EAAC;4BACH,WAAW,EAAC,SAAS;4BACrB,KAAK,EAAE,SAAS;yBACjB;qBACF;oBACD,CAAC,EAAE;wBACD,IAAI,EAAE;4BACJ,OAAO,EAAE,KAAK;yBACf;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,MAAM,EAAE;wBACN,OAAO,EAAE,KAAK;qBACf;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,IAAI,EAAE,EAAE;yBACT;wBACD,OAAO,EAAE,IAAI;wBACb,IAAI,EAAE,QAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,EAAC,CAAC,KAAK,CAAC;qBACtG;iBACF;aACF;SACF,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,cAAc;aACrB,IAAI,CACH,mDAAG,CACD,EAAE,CAAC,EAAE;YACH,IAAI,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,KAAe,CAAC;YACzC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC;QACxF,CAAC,CACF,CACF;aACA,SAAS,CACV,GAAG,CAAC,EAAE;YACJ,qCAAqC;YACrC,IAAG,GAAG,EAAE;gBACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;gBACvB,8CAA8C;gBAC9C,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,EAAE;gBACF,IAAI,CAAC,UAAU,CAAC,KAAK,GAAC,EAAE,CAAC;gBACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACxB;QACH,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAClC,GAAG,CAAC,EAAE;YACJ,0BAA0B;YAC1B,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACpF,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CACF,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAC3B,GAAG,EAAE;YACH,2BAA2B;YAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvB,IAAG,IAAI,CAAC,WAAW,EAAE;gBAEnB,IAAI,CAAC,YAAY,EAAE,CAAC;aACrB;QACH,CAAC,CACF;IACH,CAAC;IAEO,YAAY;QAClB,IAAG,IAAI,CAAC,WAAW,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;YACzE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAQ,CAAC,KAAM,CAAC,IAAI,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACjN,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SACrB;IACH,CAAC;;oGA5KU,0BAA0B;wHAA1B,0BAA0B;;;;;;;;;;QClBvC,yEAAqB;QAKL,yEAC2B;QAC3B,yFAA+D;QAC3D,oIAEa;;QACjB,4DAAmB;QAK/B,0EAA6B;QAEF,wDAAsC;QAAA,4DAAM;QAC/D,2EAA+B;QAC3B,yHAA0H;QAC9H,4DAAM;QACN,yHAGM;QACN,yHAEM;QACV,4DAAM;QACN,2EAA8B;QAE1B,6EAES;QAET,yHAEM;QACV,4DAAM;QAEV,2EAAsC;QAC7B,sEAAU;QAAA,4DAAM;QACrB,yHAEM;QACN,yHAEM;QACV,4DAAM;QACN,2EAAuB;QAEV,kEAAM;QAAA,4DAAM;QACjB,mIAAiH;QACrH,4DAAM;QACN,sEAA0B;QAC9B,4DAAM;;;QAnDoG,0DAAoB;QAApB,iFAAoB;QAGjF,0DAAiC;QAAjC,iKAAiC;QAUnD,0DAAsC;QAAtC,+GAAsC;QAE/C,0DAAkB;QAAlB,kFAAkB;QAEF,0DAAkB;QAAlB,kFAAkB;QAIhB,0DAAkB;QAAlB,kFAAkB;QAUlB,0DAAkB;QAAlB,kFAAkB;QAOjB,0DAAkB;QAAlB,kFAAkB;QAGvB,0DAAkB;QAAlB,kFAAkB;QAOO,0DAAkB;QAAlB,kFAAkB;;;;;;;;;;;;;;;;;;AC9CxE,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;kHAApB,oBAAoB;QCPjC,yEAAuB;QAEf,4EACJ;QAAA,4DAAM;QACN,yEAAuB;QACnB,8EACJ;QAAA,4DAAM;;;;;;;;;;;;;;;;;;ACCH,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;gHAAlB,kBAAkB;QCP/B,oEAAG;QAAA,4EAAiB;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;ACOjB,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;kHAApB,oBAAoB;QCPjC,sEAAK;QACO,4EAAiC;QAG7C,4DAAM;;;;;;;;;;;;;;;;;;;;ACH8E;;;;;AAS7E,MAAM,4BAA4B;IA2CvC,YACS,SAAqD,EAC5B,IAAgB;QADzC,cAAS,GAAT,SAAS,CAA4C;QAC5B,SAAI,GAAJ,IAAI,CAAY;QA3C3C,WAAM,GAAuB;YAClC,MAAM,EAAE;gBACN,EAAE,EAAE,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAC;gBAChC,MAAM,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAC;gBACxC,SAAS,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,QAAQ,EAAC;gBACnD,OAAO,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAC;gBAC1C,UAAU,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAC;gBACrD,KAAK,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAC;gBACtC,UAAU,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACnD,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;wBACjC,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;wBAC7B,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;wBACrC,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;wBAC/B,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;wBACjC,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;wBAC/B,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;wBACjC,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;wBACrC,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;wBACjC,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;wBACnC,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;wBAC7B,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC;wBAC3B,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC;wBAC3B,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;wBACjC,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;wBAC/B,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;wBAC7B,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;wBAC/B,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;qBAChC;iBACF;gBACD,OAAO,EAAE;oBACP,IAAI,EAAE,SAAS;oBACf,IAAI,EAAE,QAAQ;oBACd,SAAS,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC;iBACvB;aACF;SACF;QAKG,yCAAyC;IAC3C,CAAC;IAEH,QAAQ;IACR,CAAC;IAED,SAAS;QACP,0BAA0B;QAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;;wGAvDU,4BAA4B,uMA6C7B,qEAAe;0HA7Cd,4BAA4B;QCTzC,yEAAwB;QACL,sMAAkB;QAUjC,4DAAgB;QAGpB,yEAAwB;QACH,oJAAS,eAAW,IAAC;QAAC,iEAAM;QAAA,4DAAS;QACxD,4EAA6D;QAAA,6DAAE;QAAA,4DAAS;;QAfvD,0DAAkB;QAAlB,6EAAkB;QAehB,0DAAyB;QAAzB,sFAAyB;;;;;;;;;;;;;;;;;;;ACd9C,IAAY,eAOX;AAPD,WAAY,eAAe;IACvB,2BAAQ;IACR,6BAAU;IACV,6BAAU;IACV,2BAAQ;IACR,6BAAU;IACV,2BAAQ;AACZ,CAAC,EAPW,eAAe,KAAf,eAAe,QAO1B;AACD,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IACzB,8BAAS;IACT,qCAAgB;AACpB,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B;AACD,IAAY,iBAGX;AAHD,WAAY,iBAAiB;IACzB,6BAAQ;IACR,+BAAU;AACd,CAAC,EAHW,iBAAiB,KAAjB,iBAAiB,QAG5B;AA2BM,SAAS,qBAAqB,CAAC,IAAe,EAAE,SAAqB;IACxE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;AAC9D,CAAC;AAED,SAAS,kBAAkB,CAAC,OAAgB,EAAE,SAA+B;IACzE,IAAK,SAAuB,CAAC,KAAK,IAAK,SAAuB,CAAC,QAAQ,EAAE;QACrE,OAAO,SAAS,CAAC,OAAO,EAAE,SAAsB,CAAC;KACpD;SACI,IAAK,SAAwB,CAAC,SAAS,IAAI,KAAK,EAAE;QACnD,OAAQ,SAAwB,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;KACpG;SACI,IAAK,SAAwB,CAAC,SAAS,IAAI,IAAI,EAAE;QAClD,OAAQ,SAAwB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,kBAAkB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;KACnG;IAED,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,SAAS,CAAC,OAAgB,EAAE,IAAe;IAChD,uEAAuE;IAE3E,2BAA2B;IACvB,IAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACnG,MAAM,aAAa,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnD,IAAG,CAAC,aAAa,EAAE;YACf,OAAO,KAAK,CAAC;SAChB;QACD,MAAM,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAe,CAAC,CAAC;QAC/D,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACnB,KAAK,eAAe,CAAC,EAAE;gBAAE;oBACrB,OAAO,aAAa,IAAI,cAAc;iBACzC;gBAAC,MAAM;YACR,KAAK,eAAe,CAAC,GAAG;gBAAE;oBACtB,OAAO,aAAa,IAAI,cAAc;iBAEzC;gBAAC,MAAM;YACR,KAAK,eAAe,CAAC,GAAG;gBAAE;oBACtB,OAAO,aAAa,IAAI,cAAc;iBAEzC;gBAAC,MAAM;YACR,KAAK,eAAe,CAAC,GAAG;gBAAE;oBACtB,OAAO,aAAa,IAAI,cAAc;iBAEzC;gBAAC,MAAM;YACR,KAAK,eAAe,CAAC,EAAE;gBAAE;oBACrB,OAAO,aAAa,GAAG,cAAc;iBAExC;gBAAC,MAAM;YACR,KAAK,eAAe,CAAC,EAAE;gBAAE;oBACrB,OAAO,aAAa,GAAG,cAAc;iBAExC;gBAAC,MAAM;YACR;gBACI,MAAM;SACb;KACJ;SAAM,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE;QAC7B,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;YAC9B,OAAO,KAAK,CAAC;SAChB;QACD,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACnB,KAAK,iBAAiB,CAAC,EAAE;gBAAE;oBACvB,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;iBACzE;gBAAC,MAAM;YACR,KAAK,iBAAiB,CAAC,GAAG;gBAAE;oBACxB,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAE5E;gBAAC,MAAM;YACR,KAAK,iBAAiB,CAAC,EAAE;gBAAE;oBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;wBACxC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;iBAElD;gBAAC,MAAM;YACR,KAAK,iBAAiB,CAAC,KAAK;gBAAE;oBAC1B,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;wBACxC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;iBAErD;gBAAC,MAAM;YAER;gBACI,MAAM;SACb;KACJ;SAAM,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,EAAE;QAChC,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE;YACjC,OAAO,KAAK,CAAC;SAChB;QACD,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACnB,KAAK,iBAAiB,CAAC,EAAE;gBAAE;oBAEvB,OAAO,OAAO,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;oBAClG,uGAAuG;iBAC1G;gBAAC,MAAM;YACR,KAAK,iBAAiB,CAAC,GAAG;gBAAE;oBACxB,OAAO,CAAC,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;iBAC1G;gBAAC,MAAM;YACR;gBACI,MAAM;SACb;KACJ;SAAM;QACH,OAAO,IAAI,CAAC;KACf;IACD,OAAO,IAAI,CAAC;IAChB,EAAE;IAEE,2BAA2B;IAC3B,mCAAmC;IACnC,oGAAoG;IACpG,eAAe;IACf,sCAAsC;IACtC,sGAAsG;IACtG,eAAe;IACf,iCAAiC;IACjC,uDAAuD;IACvD,yEAAyE;IACzE,4CAA4C;IAC5C,2EAA2E;IAC3E,mBAAmB;IACnB,sDAAsD;IACtD,YAAY;IACZ,eAAe;IACf,kCAAkC;IAClC,uDAAuD;IACvD,yEAAyE;IACzE,6CAA6C;IAC7C,4EAA4E;IAC5E,mBAAmB;IACnB,sDAAsD;IACtD,YAAY;IACZ,eAAe;IACf,kCAAkC;IAClC,qEAAqE;IACrE,eAAe;IACf,iCAAiC;IACjC,oEAAoE;IACpE,eAAe;IACf,iCAAiC;IACjC,oEAAoE;IACpE,eAAe;IACf,kCAAkC;IAClC,qEAAqE;IACrE,eAAe;IAEf,eAAe;IACf,uBAAuB;IACvB,iBAAiB;IACjB,IAAI;AACR,CAAC;;;;;;;;;;;;;;;;;;;;;;AC3LsG;AAIvC;AACN;AAC6C;;;;;;;;;ICW3F,qEAAyF;IAEjF,qEAEO;IACP,yEAA0B;IAElB,uDACJ;IAAA,4DAAO;;;;IANsB,0DAAgB;IAAhB,wIAAgB;IAAC,yGAA4C;IAKtF,0DACJ;IADI,uIACJ;;;;IAvBZ,qEAAI;IACI,uDAAc;IAAA,4DAAK;IAE3B,qEAAK;IACG,uDAAa;IAAA,4DAAK;IAE1B,qEAAI;IACM,uDAA+C;IAAA,4DAAO;IAEhE,qEAAI;IACM,wDAA+C;IAAA,4DAAO;IAEhE,sEAAI;IACM,wDAAmD;IAAA,4DAAO;IAEpE,kIAWK;;;IAzBG,0DAAc;IAAd,4EAAc;IAGd,0DAAa;IAAb,2EAAa;IAGX,0DAA+C;IAA/C,kHAA+C;IAG/C,0DAA+C;IAA/C,kHAA+C;IAG/C,0DAAmD;IAAnD,iIAAmD;IAExC,0DAAkE;IAAlE,0IAAkE;;;;IApBnG,sEAA6C;IAEK,gSAAS,6BAAsB,IAAC;IAAC,iEAAM;IAAA,4DAAS;IAC9F,kFAAmI;IAA9C,0SAAS,4BAAoB,IAAC;IAC/G,kIA4Bc;IAClB,4DAAY;;;IA9BD,0DAA+B;IAA/B,+FAA+B;;ADO9C,2CAA2C;AAE3C,IAAK,cAaJ;AAbD,WAAK,cAAc;IACjB,2BAAS;IACT,mCAAiB;IACjB,qCAAmB;IACnB,yCAAuB;IACvB,2CAAyB;IACzB,iCAAe;IACf,2CAAyB;IACzB,+BAAa;IACb,6BAAW;IACX,iCAAe;IACf,iCAAe;IACf,+BAAa;AACf,CAAC,EAbI,cAAc,KAAd,cAAc,QAalB;AAQM,MAAM,kBAAkB;IA6B7B,YAAmB,cAA8B,EAAS,MAAkB;QAAzD,mBAAc,GAAd,cAAc,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAY;QAvBrE,eAAU,GAAG,KAAK,CAAC;QAEnB,iBAAY,GAAc,EAAE,CAAC;QAI5B,kBAAa,GAAG,EAAE,CAAC;QACnB,oBAAe,GAAG,EAAE,CAAC;QAEtB,WAAM,GAAe;YAC1B,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE;YACL,+DAA+D;YAC/D,IAAI;YACJ,qBAAqB;YACrB,aAAa;YACb,2EAA2E;YAC3E,8FAA8F;YAC9F,MAAM;YACN,IAAI;aACL;SACF,CAAC;QAGA,IAAI,CAAC,aAAa,qBAAQ,yDAAa,CAAE,CAAC;QAC1C,0CAA0C;QAC1C,4CAA4C;QAC5C,0CAA0C;QAC1C,2CAA2C;QAC3C,mBAAmB;QACnB,WAAW;QACX,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;YAC9B,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAC;YAC1B,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE;YACjC,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAC;YAChC,EAAE,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE;YACrC,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC;YACzB,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YACjC,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACnC,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAE,gBAAgB,EAAC;YAC5C,EAAE,GAAG,EAAE,YAAY,EAAE,KAAK,EAAE,iBAAiB,EAAC;YAC9C,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;SAChC,CAAC;QACF,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;QACjD,IAAI,CAAC,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC;IAC1C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,oBAAoB;QACzB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gHAA4B,EAAE;gBAC7D,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,YAAY,EAAE,KAAK;gBACnB,WAAW,EAAE,IAAI;aAClB,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;gBACzC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;gBACpB,0CAA0C;YAC5C,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IAED,IAAY,KAAK,CAAC,MAAkB;QAClC,6CAA6C;QAC7C,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,uFAAuF;SACxF;IAEH,CAAC;IAED,IAAY,KAAK;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAGD,eAAe;QACb,uEAAuE;QACvE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CACtC,GAAG,EAAE;YACH,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CACF;QACD,0CAA0C;QAC1C,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,SAAS,CAC7C,GAAG,EAAE;YACH,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CACF;IACH,CAAC;IAED,YAAY;QACV,IAAI,WAAW,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,oEAAqB,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IAED,qBAAqB;QACnB,0DAA0D;QAC1D,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACjD,OAAQ,GAAG,CAAC,cAAc;mBAClB,GAAG,CAAC,kBAAkB;mBACtB,GAAG,CAAC,cAAc;mBAClB,GAAG,CAAC,aAAa;mBACjB,GAAG,CAAC,YAAY,CAAC;QAC3B,CAAC,CAAC,CAAC;QAIH,OAAO,GAAG,CAAC;IACb,CAAC;IAED,YAAY,CAAC,MAAqC;QAChD,IAAI,MAAM,CAAC,KAAK,KAAK,yDAAa,EAAE;YAClC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,qBAAqB;YACrB,iEAAiE;YACjE,0BAA0B;YAC1B,sEAAsE;YACtE,MAAM;YACN,IAAI;YAEJ,sHAAsH;YACtH,YAAY;YACZ,IAAI;YACJ,oDAAoD;YACpD,wDAAwD;YACxD,yDAAyD;YACzD,oIAAoI;YACpI,yBAAyB;SAC1B;IACH,CAAC;;oFAlJU,kBAAkB;gHAAlB,kBAAkB;;;;;;QCjC/B,8GAkCM;;QAlCA,qGAAqC;;;;;;;;;;;;;;;;;;;ACE3C,+CAA+C;AACJ;AAC3C,gEAAgE;AACK;;AAM9D,MAAM,cAAc;IAezB;QACE,yBAAyB;QAbpB,YAAO,GAAc,EAAE,CAAC;QACxB,kBAAa,GAAG,IAAI,GAAG,EAAmB,CAAC;QAC3C,qBAAgB,GAAG,KAAK,CAAC;QACzB,eAAU,GAAG,IAAI,yCAAO,EAAO,CAAC;QAChC,sBAAiB,GAAG,IAAI,yCAAO,EAAW,CAAC;QAC1C,MAAC,GAAG,CAAC,CAAC;QACd,eAAU,GAAW,EAAE,CAAC;QACxB,oBAAe,GAAG,KAAK,CAAC;QACxB,mBAAc,GAAG,KAAK,CAAC;QACvB,qBAAgB,GAAG,KAAK,CAAC;QACzB,yBAAoB,GAAG,KAAK,CAAC;QAK3B,oDAAoD;QACpD,sCAAsC;IACxC,CAAC;IAED;;;;OAIG;IACH,6BAA6B;IAC7B,iEAAiE;IACjE,eAAe;IACf,6BAA6B;IAC7B,wDAAwD;IACxD,+BAA+B;IAE/B,0DAA0D;IAC1D,0CAA0C;IAC1C,kDAAkD;IAClD,oDAAoD;IACpD,wDAAwD;IACxD,0DAA0D;IAC1D,gDAAgD;IAEhD,2CAA2C;IAC3C,2CAA2C;IAE3C,wCAAwC;IACxC,6EAA6E;IAC7E,0CAA0C;IAC1C,8CAA8C;IAC9C,sFAAsF;IACtF,mBAAmB;IACnB,yDAAyD;IACzD,QAAQ;IACR,gEAAgE;IAChE,IAAI;IAEG,gBAAgB,CAAC,SAAe;QACrC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAC7D,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC;QACnC,CAAC;QACD,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE;YACrB,KAAK,CAAC,sFAAsF,CAAC;YAC7F,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3B,CAAC;QACD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC;IAC9B,CAAC;IAEO,SAAS,CAAC,UAAkB;QAClC,IAAI,UAAU,CAAC,MAAM,EAAE;YACrB,IAAI;gBACF,IAAI,UAAU,CAAC,UAAU,CAAC,qBAAqB,CAAC,EAAE;oBAChD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;iBAC9B;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;iBAC/B;gBACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;aACxB;YAAC,OAAO,GAAG,EAAE;gBACZ,KAAK,CAAC,oDAAoD,GAAG,GAAG,CAAC,CAAC;aACnE;SACF;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,KAAK,CAAC,+BAA+B,CAAC;SACvC;IAEH,CAAC;IAED;;;;;;OAMG;IACK,YAAY,CAAC,GAAW;QAC9B,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAErC,IAAI,WAAW,GAAa,EAAE,CAAC;QAC/B,IAAI,UAAU,GAAa,EAAE,CAAC;QAC9B,IAAI,SAAS,GAAa,EAAE,CAAC;QAC7B,IAAI,WAAW,GAAa,EAAE,CAAC;QAC/B,IAAI,aAAa,GAAa,EAAE,CAAC;QAEjC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAClC,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7F,QAAQ,KAAK,EAAE;gBACb,KAAK,uBAAuB;oBAC1B,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC5B,MAAM;gBACR,KAAK,4BAA4B;oBAC/B,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7B,MAAM;gBACR,KAAK,UAAU;oBACb,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC3B,MAAM;gBACR,KAAK,kBAAkB;oBACrB,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACrD,MAAM;gBACR,KAAK,kBAAkB;oBACrB,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC/B,MAAM;gBACR;oBACE,IAAI,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;wBAC5D,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;qBACxB;oBACD,MAAM;aACT;SACF;QAED,iEAAiE;QACjE,oEAAoE;QACpE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAE/D,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,OAAO;IACT,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,0DAA0D;IAC1D,QAAQ,CAAC,WAAqB,EAAE,UAAoB,EAAE,SAAmB,EAAE,WAAqB;;QAC9F,IAAI,GAAG,GAAc,EAAE,CAAC;QACxB,MAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QAC9B,KAAK,MAAM,UAAU,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC7C,IAAI,OAAO,GAAG,IAAI,6CAAO,EAAE,CAAC;YAC5B,OAAO,CAAC,aAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YAC1C,iDAAiD;YACjD,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;mBAC/B,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;mBACtD,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;gBACpD,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,GAAG;aAC1E;YACD,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SAClB;QACD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SACvC;QAED,KAAK,IAAI,QAAQ,IAAI,UAAU,EAAE;YAC/B,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YAC9D,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;gBACtB,UAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,0CAAE,YAAY,CAAC,QAAQ,CAAC,CAAC;aACtD;SACF;QAED,KAAK,IAAI,UAAU,IAAI,WAAW,EAAE;YAClC,IAAI,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,GAAG,EAAE;gBACP,KAAK,IAAI,UAAU,IAAI,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;oBAC/C,IAAI,UAAU,CAAC,KAAK,CAAC,oBAAoB,CAAC,EAAE;wBAC1C,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;wBAC/C,IAAI,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;wBAChD,IAAI,IAAI,GAAG,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,SAAS,EAAkB,CAAC;wBAC9D,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAClC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACnC;iBAEF;gBACD,GAAG,CAAC,KAAK,GAAG,uBAAuB,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;aACtF;SACF;QAED,4BAA4B;QAC5B,+CAA+C;QAC/C,0BAA0B;IAC5B,CAAC;IAEO,aAAa,CAAC,SAAiB;QACrC,IAAI;YACF,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CACjC,CAAC,QAAa,EAAE,EAAE,CAAC,0DAAoB,CAAC,QAAQ,CAAC,CAClD;SACF;QAAC,WAAM;YACN,KAAK,CAAC,kDAAkD,CAAC;SAC1D;IACH,CAAC;IAED,oEAAoE;IAC5D,iBAAiB,CAAC,OAAkB;QAC1C,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,iDAAiD;YACjD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SACxB;IACH,CAAC;IAEM,SAAS;QACd,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC;SAC3B;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAEM,OAAO;QACZ,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,GAAG,CAAC,cAAc,GAAG,KAAK,CAAC;SAC5B;QACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC;SAC/B;QACD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,aAAa;QACX,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,GAAG,CAAC,kBAAkB,GAAG,KAAK,CAAC;SAChC;QACD,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC;SAC1B;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,SAAS;QACP,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,GAAG,CAAC,aAAa,GAAG,KAAK,CAAC;SAC3B;QACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;SACzB;QACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;YAC5B,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B;QACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAEM,aAAa,CAAC,GAAY;QAC/B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;;4EA7RU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;ACTpB,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./src/app/Pokemon.ts","./src/app/about-page/about-page.component.ts","./src/app/about-page/about-page.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/pokedex-page/cards-view/card/card.component.ts","./src/app/pokedex-page/cards-view/card/card.component.html","./src/app/pokedex-page/cards-view/cards-view.component.ts","./src/app/pokedex-page/cards-view/cards-view.component.html","./src/app/pokedex-page/cards-view/individual-summary/individual-summary.component.ts","./src/app/pokedex-page/cards-view/individual-summary/individual-summary.component.html","./src/app/pokedex-page/cards-view/team-builder/team-builder.component.ts","./src/app/pokedex-page/cards-view/team-builder/team-builder.component.html","./src/app/pokedex-page/cards-view/vs-summary/vs-summary.component.ts","./src/app/pokedex-page/cards-view/vs-summary/vs-summary.component.html","./src/app/pokedex-page/pokedex-page.component.ts","./src/app/pokedex-page/pokedex-page.component.html","./src/app/pokedex-page/table-view/filter-dialog-content/filter-dialog-content.component.ts","./src/app/pokedex-page/table-view/filter-dialog-content/filter-dialog-content.component.html","./src/app/pokedex-page/table-view/queryUtility.ts","./src/app/pokedex-page/table-view/table-view.component.ts","./src/app/pokedex-page/table-view/table-view.component.html","./src/app/pokedex.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["export enum PokeType {\r\n  Normal = \"normal\",\r\n  Fire = \"fire\",\r\n  Fighting = \"fighting\",\r\n  Water = \"water\",\r\n  Flying = \"flying\",\r\n  Grass = \"grass\",\r\n  Poison = \"poison\",\r\n  Electric = \"electric\",\r\n  Ground = \"ground\",\r\n  Psychic = \"psychic\",\r\n  Rock = \"rock\",\r\n  Ice = \"ice\",\r\n  Bug = \"bug\",\r\n  Dragon = \"dragon\",\r\n  Ghost = \"ghost\",\r\n  Dark = \"dark\",\r\n  Steel = \"steel\",\r\n  Fairy = \"fairy\",\r\n  None = \"none\",\r\n  Unknown = \"curse\"\r\n}\r\n\r\nexport const TypeColors = {\r\n  \"fire\": [\"#ff6966\", \"#9b1414\"],\r\n  \"water\": [\"#6765ff\", \"#3b3e9b\"],\r\n  \"grass\": [\"#84d472\", \"#359b21\"],\r\n  \"bug\": [\"#83ff78\", \"#4fb525\"],\r\n  \"ground\": [\"#ffae35\", \"#9b772f\"],\r\n  \"rock\": [\"#ff6f40\", \"#9b6145\"],\r\n  \"steel\": [\"#c0b4b6\", \"#726a6a\"],\r\n  \"fairy\": [\"#ffadc7\", \"#9b1e44\"],\r\n  \"dark\": [\"#686766\", \"#3e3b39\"],\r\n  \"psychic\": [\"#ffbde0\", \"#9b4e90\"],\r\n  \"ghost\": [\"#e486ff\", \"#8d689b\"],\r\n  \"poison\": [\"#bf68bb\", \"#755671\"],\r\n  \"dragon\": [\"#9782ff\", \"#71669b\"],\r\n  \"ice\": [\"#bafff6\", \"#647c9b\"],\r\n  \"flying\": [\"#aaa5ff\", \"#668d9b\"],\r\n  \"normal\": [\"#f2ffb8\", \"#9b996d\"],\r\n  \"fighting\": [\"#ff9a78\", \"#9b532f\"],\r\n  \"electric\": [\"#ffffa3\", \"#c8c24a\"],\r\n  \"missing\": [\"#505050\", \"#0c0c0c\"]\r\n};\r\n\r\nexport interface learned_move {\r\n  level: number,\r\n  move: string\r\n};\r\n\r\nexport interface tm_move {\r\n  tm: number,\r\n  move: string\r\n};\r\n\r\n\r\nexport class Pokemon {\r\n\r\n  name: string;\r\n  pokedex_num: number;\r\n  uid: string;\r\n  \r\n  stat_total: number;\r\n  hp: number;\r\n  attack: number;\r\n  defense: number;\r\n  sp_attack: number;\r\n  sp_defense: number;\r\n  speed: number;\r\n  special?: number;\r\n  \r\n  type1: PokeType;\r\n  type2: PokeType;\r\n  \r\n  ability1?: string;\r\n  ability2?: string;\r\n  hiddenAbility?: string;\r\n  \r\n  next_evos: string[];\r\n  prev_evos: string[];\r\n  is_base: boolean;\r\n  is_final: boolean;\r\n  evo_family: string[];\r\n  \r\n  forms: string[];\r\n  form_num: number;\r\n\r\n  learn_levels: number[];\r\n  learned_moves: string[];\r\n\r\n  tms: number[];\r\n  tm_moves: string[];\r\n\r\n  type_revealed: boolean;\r\n  stats_revealed: boolean;\r\n  abilities_revealed: boolean;\r\n  next_evos_revealed: number[];\r\n  prev_evos_revealed: number[];\r\n  learned_moves_revealed_idx: number;\r\n  tm_indexes_learned: number[];\r\n  fully_revealed: boolean;\r\n\r\n  notes: string;\r\n  bst_revealed: boolean;\r\n  \r\n  // We may be able to make this private and only access Pokemon w/ factories\r\n  constructor() {\r\n    // a new Pokemon should be fully defined, but all values should be\r\n    // empty/zeroed defaults\r\n\r\n    this.name = \"\";\r\n    this.pokedex_num = 0;\r\n    this.uid = \"000\";\r\n    this.hp = 0;\r\n    this.attack = 0;\r\n    this.defense = 0;\r\n    this.sp_attack = 0;\r\n    this.sp_defense = 0;\r\n    this.speed = 0;\r\n    this.stat_total = 0;\r\n\r\n    this.type1 = \"unknown\" as PokeType;\r\n    this.type2 = \"none\" as PokeType;\r\n\r\n    this.next_evos = [];\r\n    this.prev_evos = [];\r\n    this.is_base = true;\r\n    this.is_final = true;\r\n    this.evo_family = [];\r\n    this.forms = [];\r\n    this.form_num = 0;\r\n\r\n    this.learned_moves = [];\r\n    this.learn_levels = [];\r\n\r\n    this.tms = [];\r\n    this.tm_moves = [];\r\n\r\n    this.type_revealed = false;\r\n    this.stats_revealed = false;\r\n    this.bst_revealed = false;\r\n    this.abilities_revealed = false;\r\n    this.next_evos_revealed = [];\r\n    this.prev_evos_revealed = [];\r\n    this.learned_moves_revealed_idx = 0;\r\n    this.tm_indexes_learned = [];\r\n\r\n    this.fully_revealed = false;\r\n\r\n    this.notes = \"\";\r\n  }\r\n\r\n  //TODO: Refactor into a factory (for posterity)\r\n  setBasicStats(statString: string, labelString: string) {\r\n    const tokens = statString.split('|').map(s => s.trim());\r\n    const labels = labelString.split('|').map(s => s.trim());\r\n\r\n    this.name = tokens[labels.indexOf('NAME')];\r\n    this.pokedex_num = parseInt(tokens[labels.indexOf('NUM')]);\r\n    this.uid = String(this.pokedex_num).padStart(3, '0');\r\n    this.hp = parseInt(tokens[labels.indexOf('HP')]);\r\n    this.attack = parseInt(tokens[labels.indexOf('ATK')]);\r\n    this.defense = parseInt(tokens[labels.indexOf('DEF')]);\r\n    this.sp_attack = parseInt(tokens[labels.indexOf('SATK')]);\r\n    this.sp_defense = parseInt(tokens[labels.indexOf('SDEF')]);\r\n    this.speed = labels.indexOf('SPEC') >= 0 ? labels.indexOf('SPE') : parseInt(tokens[labels.indexOf('SPD')]);\r\n    this.special = labels.indexOf('SPEC') >= 0 ? parseInt(tokens[labels.indexOf('SPE')]) : undefined;\r\n    this.stat_total = this.bst();\r\n\r\n    const typeString = tokens[labels.indexOf('TYPE')];\r\n    this.type1 = typeString.split('/')[0].toLowerCase() as PokeType;\r\n    this.type2 = typeString.indexOf('/') >= 0 ? typeString.split('/')[1].toLowerCase() as PokeType : \"none\" as PokeType;\r\n\r\n    if (labels.indexOf('ABILITY1') >= 0) {\r\n      this.ability1 = tokens[labels.indexOf('ABILITY1')];\r\n    }\r\n    if (labels.indexOf('ABILITY2') >= 0) {\r\n      this.ability2 = tokens[labels.indexOf('ABILITY2')];\r\n    }\r\n    if (labels.indexOf('ABILITY3') >= 0) {\r\n      this.hiddenAbility = tokens[labels.indexOf('ABILITY3')];\r\n    }\r\n  }\r\n\r\n  static loadFromJson(json_data: any): Pokemon {\r\n    // Verify that this object contains all necessary fields\r\n    if (\r\n      json_data.name === undefined ||\r\n      json_data.pokedex_num === undefined ||\r\n      json_data.uid === undefined ||\r\n      json_data.hp === undefined ||\r\n      json_data.attack === undefined ||\r\n      json_data.defense === undefined ||\r\n      json_data.sp_attack === undefined ||\r\n      json_data.sp_defense === undefined ||\r\n      json_data.speed === undefined ||\r\n      json_data.stat_total === undefined ||\r\n      json_data.type1 === undefined ||\r\n      json_data.type2 === undefined ||\r\n      json_data.next_evos === undefined ||\r\n      json_data.prev_evos === undefined ||\r\n      json_data.is_base === undefined ||\r\n      json_data.is_final === undefined ||\r\n      json_data.evo_family === undefined ||\r\n      json_data.forms === undefined ||\r\n      json_data.form_num === undefined ||\r\n      json_data.learned_moves === undefined ||\r\n      json_data.learn_levels === undefined ||\r\n      json_data.tms === undefined ||\r\n      json_data.tm_moves === undefined ||\r\n      json_data.type_revealed === undefined ||\r\n      json_data.stats_revealed === undefined ||\r\n      json_data.abilities_revealed === undefined ||\r\n      json_data.next_evos_revealed === undefined ||\r\n      json_data.prev_evos_revealed === undefined ||\r\n      json_data.learned_moves_revealed_idx === undefined ||\r\n      json_data.tm_indexes_learned === undefined ||\r\n      json_data.fully_revealed === undefined ||\r\n      json_data.notes === undefined \r\n      // json_data.ability1 === undefined ||\r\n      // json_data.ability2 === undefined\r\n    ) {\r\n      // if not, we shouldn't continue\r\n      throw new Error(\"Trouble Parsing Pokemon\");\r\n    }\r\n    let mon = new Pokemon();\r\n    mon.name = json_data.name;\r\n    mon.pokedex_num = json_data.pokedex_num;\r\n    mon.uid = json_data.uid;\r\n    mon.hp = json_data.hp;\r\n    mon.attack = json_data.attack;\r\n    mon.defense = json_data.defense;\r\n    mon.sp_attack = json_data.sp_attack;\r\n    mon.sp_defense = json_data.sp_defense;\r\n    mon.speed = json_data.speed;\r\n    mon.stat_total = json_data.stat_total;\r\n\r\n    mon.type1 = json_data.type1;\r\n    mon.type2 = json_data.type2;\r\n    \r\n    // Initialize other stats\r\n    mon.next_evos = json_data.next_evos;\r\n    mon.prev_evos = json_data.prev_evos;\r\n    mon.is_base = json_data.is_base;\r\n    mon.is_final = json_data.is_final;\r\n    mon.evo_family = json_data.evo_family;\r\n    mon.forms = json_data.forms;\r\n    mon.form_num = json_data.form_num;\r\n    \r\n    mon.learned_moves = json_data.learned_moves;\r\n    mon.learn_levels = json_data.learn_levels;\r\n    \r\n    mon.tms = json_data.tms;\r\n    mon.tm_moves = json_data.tm_moves;\r\n    \r\n    mon.type_revealed = json_data.type_revealed;\r\n    mon.stats_revealed = json_data.stats_revealed;\r\n    mon.abilities_revealed = json_data.abilities_revealed;\r\n    mon.next_evos_revealed = json_data.next_evos_revealed;\r\n    mon.prev_evos_revealed = json_data.prev_evos_revealed;\r\n    mon.learned_moves_revealed_idx = json_data.learned_moves_revealed_idx;\r\n    mon.tm_indexes_learned = json_data.tm_indexes_learned;\r\n    \r\n    mon.fully_revealed = json_data.fully_revealed;\r\n    \r\n    mon.notes = json_data.notes;\r\n\r\n    mon.ability1 = json_data.ability1;\r\n    mon.ability2 = json_data.ability2;\r\n    mon.hiddenAbility = json_data.hiddenAbility;\r\n\r\n    return mon;\r\n  }\r\n\r\n  addEvolution(evString: string) {\r\n    if (evString.indexOf(this.name) < 0) {\r\n      return;\r\n    }\r\n    const evArr = evString.split('->').map(s => s.trim());\r\n    const leftSide = evArr[0];\r\n    const rightSide = evArr[1];\r\n    const rightArr = rightSide.split(/(and|,)/).map(s => s.trim());\r\n    if (leftSide === this.name) {\r\n      this.next_evos = rightArr;\r\n    } else {\r\n      this.prev_evos.push(leftSide);\r\n    }\r\n    this.is_base = this.prev_evos.length==0;\r\n    this.is_final = this.next_evos.length==0;\r\n  }\r\n\r\n  get_stat(stat: string): number {\r\n    if (this.stats_revealed || this.fully_revealed) {\r\n      switch (stat) {\r\n        case \"hp\":\r\n          return this.hp;\r\n        case \"attack\":\r\n          return this.attack;\r\n        case \"defense\":\r\n          return this.defense;\r\n        case \"sp_attack\":\r\n          return this.sp_attack;\r\n        case \"sp_defense\":\r\n          return this.sp_defense;\r\n        case \"special\":\r\n          return this.special ? this.special : 0;\r\n        case \"speed\":\r\n          return this.speed;\r\n        case \"stat_total\":\r\n          return this.bst();\r\n        default:\r\n          return 0;\r\n      }\r\n    } else if (this.checkBSTRevealed() && stat === \"stat_total\") {\r\n      return this.bst();\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  get_full_moveset(): string[] {\r\n    return this.learned_moves.concat(\r\n      this.tm_moves.filter(m => this.learned_moves.indexOf(m) === -1));\r\n  }\r\n\r\n  get_revealed_learned_move_pairs(): learned_move[] {\r\n    return this.learn_levels.map((e, i) => {\r\n      return {\r\n        level: e,\r\n        move: i < this.learned_moves_revealed_idx || this.fully_revealed\r\n          ? this.learned_moves[i]\r\n          : '???'\r\n      } as learned_move;\r\n    });\r\n  }\r\n\r\n  get_revealed_tm_move_pairs(): tm_move[] {\r\n    return this.tms.map((e, i) => {\r\n      return {\r\n        tm: e,\r\n        move: this.tm_indexes_learned.indexOf(i) >= 0 || this.fully_revealed\r\n          ? this.tm_moves[i]\r\n          : \"???\"\r\n      } as tm_move;\r\n    });\r\n  }\r\n\r\n  get_type1(): PokeType {\r\n    return this.type_revealed || this.fully_revealed ? this.type1 : PokeType.Unknown;\r\n  }\r\n\r\n  get_type2(): PokeType {\r\n    return this.type_revealed || this.fully_revealed ? this.type2 : PokeType.None;\r\n  }\r\n\r\n  /**\r\n  * Gets a list of Evolutions from this pokemon.\r\n  * This is affected by whether or not those evolutions are revealed.\r\n  * @returns a list of Pokemon Names\r\n  */\r\n  get_evos_from(): string[] {\r\n    return this.next_evos.map((e, i) => (this.next_evos_revealed.indexOf(i) || this.fully_revealed) >= 0 ? e : \"???\");\r\n  }\r\n\r\n  /**\r\n  * Gets a list of evolutions to this pokemon.\r\n  * This is affected by whether or not the evolutions are revealed\r\n  * @returns a list of Pokemon Names\r\n  */\r\n  get_evos_to(): string[] {\r\n    return this.prev_evos.map((e, i) => (this.prev_evos_revealed.indexOf(i) || this.fully_revealed) >= 0 ? e : \"???\");\r\n  }\r\n\r\n  bst(): number {\r\n    return this.special ? this.hp + this.attack + this.defense + this.special + this.speed :\r\n      this.hp + this.attack + this.defense + this.sp_attack + this.sp_defense + this.speed;\r\n  }\r\n\r\n  getStatsIfRevealed(): number[] {\r\n    if (this.stats_revealed || this.fully_revealed) {\r\n      return [this.hp, this.attack, this.defense, this.sp_attack, this.sp_defense, this.speed];\r\n    }\r\n    return [0, 0, 0, 0, 0, 0];\r\n  }\r\n\r\n  getAbilitiesIfRevealed(): string[] {\r\n    let res: string[] = [];\r\n    if (this.abilities_revealed || this.fully_revealed) {\r\n      if (this.ability1) {\r\n        res.push(this.ability1);\r\n      }\r\n      if (this.ability2) {\r\n        res.push(this.ability2);\r\n      }\r\n      if (this.hiddenAbility) {\r\n        res.push(this.hiddenAbility);\r\n      }\r\n    } else if (this.ability1) {\r\n      res.push(\"???\");\r\n    }\r\n    return res;\r\n  }\r\n\r\n  checkTypeRevealed() {\r\n      return this.fully_revealed || this.type_revealed;\r\n  }\r\n  \r\n  checkStatsRevealed() {\r\n    return this.fully_revealed || this.stats_revealed;\r\n  } \r\n  \r\n  checkBSTRevealed() {\r\n    return this.fully_revealed || this.stats_revealed || this.bst_revealed;\r\n  }\r\n\r\n  checkAbilityRevealed() {\r\n    return this.fully_revealed || this.abilities_revealed;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"about-content\">\n  <h1>\n    Welcome to the Randomizer Pokedex Tool!\n  </h1>\n  <hr>\n  <p>\n    This tool was created to help explore randomized Pokemon games. \n    It can be during play to help keep track of information, or after a playthrough to analyze all of the different pokemon.\n  </p>\n  <p>\n    I made this tool because my favorite part of Pokemon randomizers is exploring a brand new world filled with entirely \"new\" Pokemon.\n    Think of this as a sort of Pokedex you can carry with you on a journey, filling it in as you go. For example, the way I use the tool is I reveal types immediately upon encountering all Pokemon. After defeating a Pokemon at least once, I reveal its abilities and stats.\n    Everyone is free to come up with their own way to reveal information, I tried to make the tool flexible.\n  </p>\n  <hr>\n  <h2>\n    Usage\n  </h2>\n  <p>\n    This tool is configured to accept spoiler log files generated by the \n    <a href=\"https://github.com/Ajarmar/universal-pokemon-randomizer-zx/releases\" target=\"_blank\" rel=\"noopener noreferrer\">Universal Pokemon Randomizer ZX</a>.\n    To begin, click the upload button on the home page or on the pokedex page and select the spoiler log generated when you used the randomizer (be sure to generate the spoiler log when randomizing your game).\n  </p>\n  <p class=\"text-warning\">\n    ***NOTE: As of April 2022, this tool does not accept log files generated for Gen 1 games (Pokemon Red/Blue/Green/Yellow). However, it still works for FR/LG just fine.***\n  </p>\n  <p>\n    You can use the search bar in the individual view to select any pokemon to view. By default, the type, stat, ability and other information about each pokemon is hidden. The page will remember what informtion you reveal about which pokemon. You also have the option to reveal all information about every pokemon by clicking the Spoil button at the top.\n  </p>\n  <p>\n    If you want to save your progress or a log, you can click the save button, which will download a .pkdx file with all of the information and what you've revealed. \n    Next time you visit the page, you can upload the .pkdx file and the site will load all of the progress that you had made.\n  </p>\n  <p>\n    This page is still under development, so not all information from the log file can be shown yet. In no particular order, I would like to add the following features:\n  </p>\n  <ul>\n    <li>\n      Matchup information\n    </li>\n    <li>\n      A Team Builder/Analysis section\n    </li>\n    <li>\n      Location data (this might be difficult, so don't count on it)\n    </li>\n  </ul>\n  <hr>\n  <h2>\n    Credits\n  </h2>\n  <ul>\n    <li>\n      heraldere - Log/Save parser, Stat Graphs, Site Structure\n    </li>\n    <li>\n      pinkpoppey - Table View and Filter functionality, CSS Consultant\n    </li>\n  </ul><hr>\n  <h2>\n    Known Issues\n  </h2>\n  <ul>\n    <li>\n      If you upload a log file, reveal some information on that file, then upload another log file, the changes won't immediately be reflected on the Pokemon that you have selected. If you search the dropdown and reselect the pokemon, the information will update properly. I will fix this behavior when I get around to it.\n    </li>\n    <li>\n      As stated above, Gen 1 logs will not display or update properly. I intend to add gen 1 support soon, but I don't anticipate many people are running randomized gen 1 games.\n    </li>\n    <li>\n      If Pokemon are partially revealed, they will appear as a row in the table. By sorting the table, it is technically possible to infer information about Pokemon that you haven't explicitly revealed. I may fix this functionality in the future, but this particular bug is difficulty to fix.\n      For the time being, you can filter out rows that shouldn't show up by adding filters to the table (such as HP > 0). Those filters will properly respect what you've revealed about each pokemon.\n    </li>\n    <li>\n      When swapping between the Pokedex and the Home/About pages, the site doesn't currently keep track of what pokemon you have selected. This is a relatively easy fix, and I will get it done soon.\n    </li>\n    <li>\n      Right now, the site doesn't save whether or not the \"spoil\" button was clicked when saving the .pkdx file. I will fix this when I get time.\n    </li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PokedexPageComponent } from './pokedex-page/pokedex-page.component';\r\nimport { AboutPageComponent } from './about-page/about-page.component'\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'pokedex', component: PokedexPageComponent},\r\n  { path: 'about', component: AboutPageComponent},\r\n  { path: '', redirectTo:'/home', pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-pokedex';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PokedexPageComponent } from './pokedex-page/pokedex-page.component';\r\nimport { TableViewComponent } from './pokedex-page/table-view/table-view.component';\r\nimport { CardsViewComponent } from './pokedex-page/cards-view/cards-view.component';\r\n\r\nimport { TableModule } from 'ngx-easy-table';\r\nimport { FilterDialogContentComponent } from './pokedex-page/table-view/filter-dialog-content/filter-dialog-content.component';\r\nimport { QueryBuilderModule } from \"angular2-query-builder\";\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { IndividualSummaryComponent } from './pokedex-page/cards-view/individual-summary/individual-summary.component';\r\nimport { TeamBuilderComponent } from './pokedex-page/cards-view/team-builder/team-builder.component';\r\nimport { VsSummaryComponent } from './pokedex-page/cards-view/vs-summary/vs-summary.component';\r\nimport { CardComponent } from './pokedex-page/cards-view/card/card.component';\r\nimport { AboutPageComponent } from './about-page/about-page.component';\r\n\r\n@NgModule({\r\n    exports: [\r\n        QueryBuilderModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        HeaderComponent,\r\n        HomeComponent,\r\n        PokedexPageComponent,\r\n        TableViewComponent,\r\n        CardsViewComponent,\r\n        FilterDialogContentComponent,\r\n        IndividualSummaryComponent,\r\n        TeamBuilderComponent,\r\n        VsSummaryComponent,\r\n        CardComponent,\r\n        AboutPageComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TableModule,\r\n        MatDialogModule,\r\n        MatTabsModule,\r\n        BrowserAnimationsModule,\r\n        QueryBuilderModule,\r\n        MatSelectModule,\r\n        MatAutocompleteModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatMenuModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { PokedexService } from '../pokedex.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  private dexService: PokedexService;\n\n  constructor(dexService: PokedexService) {\n    this.dexService = dexService;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\r\n    <h1 class=\"header-title\">Randomizer Pokedex</h1>\r\n    <div class=tabs>\r\n        <a class=\"tab\" routerLink=\"/home\" routerLinkActive=\"selected\"><i class=\"material-icons\">home</i>Home</a>\r\n        <a class=\"tab\" routerLink=\"/pokedex\" routerLinkActive=\"selected\"><img class=\"pokeball-icon\" src='assets/images/pokeball-icon.png' />Pokedex</a>\r\n        <a class=\"tab\" routerLink=\"/about\" routerLinkActive=\"selected\"><i id=\"help-icon\" class=\"material-icons\">help</i>About</a>\r\n        \r\n        <!-- <span>[{{getRoute()}}]</span> -->\r\n        <!-- <span class=\"header-text\">Created by Matthew Christensen and Jennifer Nelson • <a href=\"https://github.com/matthewlchristensen/randomizer-pokedex\"> GitHub</a></span> -->\r\n    </div>\r\n</div>","import { Component, ContentChild, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { FormControl } from '@angular/forms';\nimport { PokedexService } from '../pokedex.service';\nimport { Observable } from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {map} from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  dex: PokedexService;\n  \n  // TODO: This should be owned by the pokedex service\n  validFileUploaded = false;\n  @ViewChild('downloadButton')\n  downloadRef!: ElementRef;\n  router: Router;\n\n  constructor(dex: PokedexService, router: Router) { \n    this.dex = dex;\n    this.router = router;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onFileSelected(e: Event) {\n    const target= e.target as HTMLInputElement;\n    const files = target?.files;\n    const file:File|null = files && files[0];\n\n    if (file) {\n      this.validFileUploaded=false;\n      this.dex.readSelectedFile(file);\n      this.validFileUploaded=true;\n      this.router.navigate(['/', 'pokedex']);\n    }\n  }\n\n  detailButtonClicked() {\n    this.router.navigate(['/', 'about'])\n  }\n\n  save() {\n    let dexString = JSON.stringify(this.dex.pokedex);\n    this.downloadRef.nativeElement.href='data:text/plain;charset=utf-8,' + encodeURIComponent(dexString);\n  }\n\n  // TODO: Add spoiler button! (May need to add subscription type thing to get it to work)\n  spoilButtonClicked() {\n    console.log(\"Nothing yet\")\n  }\n  \n\n}\n","\n<!-- <input type=\"file\" class=\"file-input\" id=\"hh\" (change)=\"onFileSelected($event)\" #fileUpload> -->\n<!-- <label for=\"hh\">hi</label> -->\n<!-- <a #downloadButton *ngIf=\"validFileUploaded\" download=\"mons.pkdx\" >\n    <button (click)=\"save()\" title=\"Save notes and revealed status of Pokemon\">Save Dex</button>\n</a> -->\n<!-- <button *ngIf=\"validFileUploaded\" (click)=\"spoilButtonClicked()\" title=\"Fully Reveal the pokedex\">Spoil Me!</button> -->\n<!-- <individual-card *ngIf=\"validFileUploaded\"></individual-card> -->\n<div id=\"home-background\">\n    <h2>Howdy!</h2> \n    <div>\n        <p>\n            This is a tool created to help out with randomized Pokemon adventures/challenges.\n        </p>\n        <p>\n            Part of the fun of randomized runs is exploring a world filled with \"brand-new\" Pokemon.\n            This \"Pokédex\" can help you keep notes on all of your discoveries, including stats, typing, and abilities (with plans for more).\n        </p>\n        <p>\n            You can \"spoil\" as much or as little as you want, so you can have the experience most suited to your style. Or, if you just want to see what Pokemon were generated, this is a great way to do it without having to sift through a giant log file.\n        </p>\n    </div>\n    <div id=\"home-box\">\n        <div id=\"button-stack\">\n            <h2 style=\"margin-block-start: 5px;\">Get Started</h2>\n            <input class=\"home-file-input\" id=\"home-file-input1\" type=\"file\" (change)=\"onFileSelected($event)\" accept=\".log\">\n            <label class=\"home-button\" for=\"home-file-input1\">Upload Randomized Log File</label>\n            <!-- <button>Upload Randomized Log File</button> -->\n            <input class=\"home-file-input\" id=\"home-file-input2\" type=\"file\" (change)=\"onFileSelected($event)\" accept=\".pkdx\">\n            <label class=\"home-button\" for=\"home-file-input2\">Upload Saved Pokedex File</label>\n            <!-- <button>Upload Saved Pokedex File</button> -->\n            <button class=\"home-button\" (click)=\"detailButtonClicked()\">More Details and Credits</button>\n            <a style=\"width:100%;\" href=\"https://github.com/Ajarmar/universal-pokemon-randomizer-zx/releases\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <button class=\"home-button\">Check Out The Universal Pokemon Randomizer</button>\n            </a>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'small-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card-segment\">\n\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { PokedexService } from 'src/app/pokedex.service';\n\n@Component({\n  selector: 'app-cards-view',\n  templateUrl: './cards-view.component.html',\n  styleUrls: ['./cards-view.component.scss']\n})\nexport class CardsViewComponent implements OnInit {\n\n  public showA: boolean = false;\n  public showB: boolean = true;\n  public showC: boolean = false;\n  public selectedTab: string = 'summaryTab';\n  @ViewChild('downloadButton')\n  downloadRef!: ElementRef;\n  dex: PokedexService;\n\n  constructor(dex : PokedexService) { \n    this.dex = dex;\n  }\n\n  onFileSelected(e: Event) {\n    const target= e.target as HTMLInputElement;\n    const files = target?.files;\n    const file:File|null = files && files[0];\n\n    if (file) {\n      this.dex.readSelectedFile(file);\n    }\n\n  }\n\n  //Kinda cheeky, but the anchor element's click event will occur after the button's so the download begins immediately after we set the href\n  // Is this a race? beats me :)\n  save() {\n    let dexString = JSON.stringify(\n      {\n        pokedex: this.dex.pokedex\n      });\n    this.downloadRef.nativeElement.href='data:text/plain;charset=utf-8,' + encodeURIComponent(dexString);\n  }\n\n  spoil() {\n    if(this.dex.isFullyRevealed) {\n      this.dex.hideAll();\n    } else {\n      this.dex.revealAll();\n    }\n  }\n\n  spoilBSTs() {\n    if(this.dex.allBSTRevealed) {\n      this.dex.hideBSTs();\n    } else {\n      this.dex.revealBSTs();\n    }\n  }\n\n  spoilTypes() {\n    if(this.dex.allTypesRevealed) {\n      this.dex.hideTypes();\n    } else {\n      this.dex.revealTypes();\n    }\n  }\n\n  spoilAbilities() {\n    if(this.dex.allAbilitiesRevealed) {\n      this.dex.hideAbilities();\n    } else {\n      this.dex.revealAbilities();\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div class=tabs>\n    <a class=\"tab\" [class.selected]=\"selectedTab==='summaryTab'\" (click)=\"selectedTab='summaryTab'\"><i class=\"material-icons\">wysiwyg</i>Pokemon</a>\n    <!-- <a class=\"disabled tab\" [class.selected]=\"selectedTab==='teamTab'\"  (click)=\"selectedTab='teamTab'\"><i class=\"material-icons\">view_module</i>Team Builder</a>\n    <a class=\"disabled tab\" [class.selected]=\"selectedTab==='vsTab'\" (click)=\"selectedTab='vsTab'\"><i class=\"material-icons\">compare_arrows</i>Matchup</a> -->\n    <span>(More tabs here soon)</span>\n    <input class=\"tab-file-input\" type=\"file\"  id=\"dex-file-input\" (change)=\"onFileSelected($event)\" #fileUpload accept=\".log,.pkdx\">\n    <label class=\"tab-button\" for=\"dex-file-input\">Upload</label>\n    <a #downloadButton *ngIf=\"dex.validDexUploaded\" download=\"mons.pkdx\" >\n        <button (click)=\"save()\" class=\"tab-button\" id=\"saveButton\" title=\"Save notes and revealed status of Pokemon\">Save</button>\n    </a>\n    <button class=\"tab-button\" id=\"spoil-button\" *ngIf=\"dex.validDexUploaded\" (click)=\"spoil()\">{{this.dex.isFullyRevealed?\"Unspoil\":\"Spoil\"}}</button>\n\n    <button mat-button [matMenuTriggerFor]=\"powerSpoilMenu\" *ngIf=\"dex.validDexUploaded\"  class=\"tab-button\" id=\"power-options\">\n        <i class=\"material-icons\">\n        arrow_drop_down\n        </i>\n    </button>\n    <mat-menu #powerSpoilMenu=\"matMenu\" backdropClass=\"spoil-option\" xPosition=\"before\">\n        <button  mat-menu-item (click)=\"spoilTypes()\">{{this.dex.allTypesRevealed?\"Unspoil Types\":\"Spoil Types\"}}</button>\n        <button mat-menu-item (click)=\"spoilBSTs()\">{{this.dex.allBSTRevealed?\"Unspoil BSTs\":\"Spoil BSTs\"}}</button>\n        <button mat-menu-item (click)=\"spoilAbilities()\">{{this.dex.allAbilitiesRevealed?\"Unspoil Abilities\":\"Spoil Abilities\"}}</button>\n    </mat-menu>\n    <!-- <label for=\"power-options\">hellosir</label>\n    <select class=\"tab-button\" id=\"power-options\" title=\"Additional Spoil Options\">\n    <option >\n      <span class=\"spoil-option\">hello</span>\n    </option>\n    <option class=\"spoil-option\">\n      hello2\n    </option>\n\n  </select> -->\n</div>\n<div *ngIf=\"selectedTab==='summaryTab'\">\n    <individual-card *ngIf=\"dex.validDexUploaded\"></individual-card>\n</div>\n<div *ngIf=\"selectedTab==='teamTab'\">\n    <team-builder></team-builder>\n</div>\n<div *ngIf=\"selectedTab==='vsTab'\">\n    <vs-summary></vs-summary>\n</div>\n","import { AfterViewInit, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, Subscriber } from 'rxjs';\nimport { PokedexService } from 'src/app/pokedex.service';\nimport { Pokemon } from \"src/app/Pokemon\";\nimport {startWith} from 'rxjs/operators';\nimport {map} from 'rxjs/operators';\nimport { MatAutocomplete, MatAutocompleteModule, MatAutocompleteSelectedEvent , MatAutocompleteTrigger} from '@angular/material/autocomplete';\nimport {Chart, registerables} from 'chart.js'\nimport { MatInput } from '@angular/material/input';\nChart.register(...registerables);\nChart.defaults.color = \"#cfcfcf\";\n\n@Component({\n  selector: 'individual-card',\n  templateUrl: './individual-summary.component.html',\n  styleUrls: ['./individual-summary.component.scss']\n})\nexport class IndividualSummaryComponent implements OnInit, AfterViewInit{\n\n  @ViewChild('statChart')\n  chartRef!: ElementRef;\n  dex: PokedexService;\n  ctrl: FormControl = new FormControl();\n  pokes_filtered_by_text: Observable<string[]>;\n  current_mon: Pokemon | undefined;\n  mon_selected = false;\n  chart!: Chart;\n  @ViewChild('mm')\n  maut!: MatAutocomplete;\n  @ViewChild('searchInput')\n  search_box!: MatInput\n\n  constructor(dex: PokedexService) {\n    this.dex = dex;\n    this.pokes_filtered_by_text = this.ctrl.valueChanges.pipe(\n      startWith(''),\n      map(search_text => this.searchMons(search_text))\n    )\n  }\n   \n  searchMons(search_text: string): string[] {\n    return this.dex.pokedex.map(mon => mon.name).filter(name => name.toLowerCase().indexOf(search_text.toLowerCase()) !== -1)\n  }\n\n  toggleTypeRevealButton() {\n    if(this.current_mon) {\n      this.current_mon.type_revealed = !this.current_mon.type_revealed;\n      this.dex.individualChanges.next(this.current_mon)\n    }\n  }\n\n  toggleStatRevealButton() {\n    if(this.current_mon) {\n      this.current_mon.stats_revealed = !this.current_mon.stats_revealed;\n      this.dex.individualChanges.next(this.current_mon);\n      // this.chart.data.datasets[0].data = this.current_mon.getStatsIfRevealed();\n      // this.chart.options.plugins!.title!.text = \"BST : \" + (this.current_mon && this.current_mon.stats_revealed? this.current_mon.bst(): \"???\");\n      // this.chart.update();\n    }\n  }\n\n  toggleAbilityRevealButton() {\n    if(this.current_mon) {\n      this.current_mon.abilities_revealed = !this.current_mon.abilities_revealed;\n      this.dex.individualChanges.next(this.current_mon)\n    }\n  }\n\n\n  ngOnInit(): void {\n    \n  }\n  // \"https://www.serebii.net/swordshield/pokemon/289.png\"\n  // \"https://www.serebii.net/games/type/poison.gif\"\n\n  ngAfterViewInit(): void {\n    this.chart = new Chart(this.chartRef.nativeElement, {\n      type: 'bar',\n      data: {\n        labels: [\"HP\", \"Attack\", \"Defense\", \"Sp. Attack\", \"Sp. Defense\", \"Speed\"],\n        datasets: [{\n          data: this.current_mon? this.current_mon.getStatsIfRevealed() :[0,0,0,0,0,0],\n          backgroundColor: [\n            'rgba(255, 99, 132, 0.8)',\n            'rgba(255, 159, 64, 0.8)',\n            'rgba(255, 205, 86, 0.8)',\n            'rgba(54, 162, 235, 0.8)',\n            'rgba(75, 192, 92, 0.8)',\n            // '#ffbde0'\n            'rgba(153, 102, 255, 0.8)'\n          ],\n          borderColor: [\n            'rgb(255, 99, 132)',\n            'rgb(255, 159, 64)',\n            'rgb(255, 205, 86)',\n            'rgb(75, 192, 192)',\n            'rgb(54, 162, 235)',\n            'rgb(153, 102, 255)'\n          ],\n          borderWidth: 1,\n          maxBarThickness: 20,\n          \n        }]\n        \n      },\n      options: {\n        color: '#cfcfcf',\n        indexAxis: 'y',\n        scales: {\n          x: {\n            beginAtZero: true,\n            min: 0,\n            max: 255,\n            grid:{\n              borderColor:'#cfcfcf',\n              color: '#cfcfcf',\n            },            \n          },\n          y: {\n            grid: {\n              display: false,\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          title: {\n            font: {\n              size: 20\n            },\n            display: true,\n            text: \"BST : \" + (this.current_mon && this.current_mon.stats_revealed? this.current_mon.bst(): \"???\")\n          }\n        }\n      },\n    });\n    this.maut.optionSelected\n      .pipe(\n        map(\n          ev => {\n            let selected = ev.option.value as string;\n            return this.dex.pokedex.find(mon => mon.name.toLowerCase() == selected.toLowerCase());\n          }\n        )\n      )\n      .subscribe(\n      mon => {\n        // TODO: Encapsulate this in a method\n        if(mon) {\n          this.mon_selected = true;\n          this.current_mon = mon;\n          // Also maybe split this into a method as well\n          this.refreshChart();\n          //\n          this.search_box.value='';\n          this.ctrl.setValue('');\n        }\n      }\n    );\n\n    this.dex.individualChanges.subscribe(\n      mon => {\n        // console.log(\"ichange\");\n        if(this.current_mon && this.current_mon.name.toLowerCase() == mon.name.toLowerCase()) {\n          this.refreshChart();\n        }\n      }\n    );\n\n    this.dex.dexChanges.subscribe(\n      () => {\n        // console.log(\"wechange\");\n        this.ctrl.setValue('');\n        if(this.current_mon) {\n          \n          this.refreshChart();\n        }\n      }\n    )\n  }\n\n  private refreshChart() {\n    if(this.current_mon) {\n      this.chart.data.datasets[0].data = this.current_mon.getStatsIfRevealed();\n      this.chart.options.plugins!.title!.text = \"BST : \" + (this.current_mon && (this.current_mon.bst_revealed || this.current_mon.stats_revealed || this.current_mon.fully_revealed)? this.current_mon.bst() : \"???\");\n      this.chart.update();\n    }\n  }\n}\n","<div id=\"background\">\n    <div id=\"search_container\" class=\"wireframe\">\n\n        <form>\n            <mat-form-field class=\"search-box\" >\n                <input #searchInput type=\"text\" placeholder=\"Search For Pokemon\" aria-label=\"Number\" matInput [formControl]=\"ctrl\"\n                    [matAutocomplete]=\"mm\">\n                <mat-autocomplete autoActiveFirstOption #mm=\"matAutocomplete\" >\n                    <mat-option *ngFor=\"let poke of pokes_filtered_by_text | async\" [value]=\"poke\">\n                        {{ poke }}\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n        </form>\n\n    </div>\n    <div style=\"overflow: auto\" >\n        <div class=\"left sprite\">\n            <div id=\"name-box\">{{current_mon?current_mon.name:\"N/A\"}}</div>\n            <div class=\"sprite-background\">\n                <img *ngIf=\"mon_selected\" style=\"width: 100%;\" src=\"https://www.serebii.net/swordshield/pokemon/{{current_mon!.uid}}.png\">\n            </div>\n            <div id=\"type-container\" *ngIf=\"mon_selected\">\n                <img class=\"type-box\"  src=\"https://serebii.net/pokedex-bw/type/{{current_mon!.get_type1()}}.gif\">\n                <img class=\"type-box\" *ngIf=\"(current_mon!.get_type2() != 'none')\" src=\"https://serebii.net/pokedex-bw/type/{{current_mon!.get_type2()}}.gif\">\n            </div>\n            <div class=\"reveal-button\" *ngIf=\"mon_selected\">\n                <button id=\"type-reveal\" [disabled]=\"dex.isFullyRevealed\" (click)=\"toggleTypeRevealButton()\">{{current_mon!.type_revealed ? \"Hide Type\" : \"Show Type\"}}</button>\n            </div>\n        </div>\n        <div class=\"right stat-graph\">\n            \n            <canvas id=\"stat-chart\" #statChart width=\"200px\" height=\"100px\">\n\n            </canvas>\n            <!-- TODO: Hide buttons if dex is spoiled (also edit layout so hiding buttons doesn't shift things) -->\n            <div class=\"reveal-button\" *ngIf=\"mon_selected\">\n                <button id=\"stat-reveal\" [disabled]=\"dex.isFullyRevealed\" (click)=\"toggleStatRevealButton()\">{{current_mon!.stats_revealed ? \"Hide Stats\" : \"Show Stats\"}}</button>\n            </div>\n        </div>\n    </div>\n    <div id=\"ability-parent\" class=\"left\">\n        <div>Abilities:</div>\n        <div class=\"ability-collection\" *ngIf=\"mon_selected\">\n            <div class=\"ability-panel\" *ngFor=\"let ability of current_mon!.getAbilitiesIfRevealed(); index as i\"> {{ability + (i>1?\" (hidden)\":\"\")}}</div>\n        </div>\n        <div class=\"reveal-button\" *ngIf=\"mon_selected\">\n            <button id=\"ability-reveal\" [disabled]=\"dex.isFullyRevealed\" (click)=\"toggleAbilityRevealButton()\">{{current_mon!.abilities_revealed ? \"Hide Abilities\" : \"Show Abilities\"}}</button>\n        </div>\n    </div>\n    <div class=\"right row\">\n        <div id=\"notes-parent\">\n            <div>Notes:</div>\n            <textarea rows=12 cols=40 class=\"notes-section\" *ngIf=\"mon_selected\" [(ngModel)]=\"current_mon!.notes\"></textarea>\n        </div>\n        <div class=\"column\"></div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'team-builder',\n  templateUrl: './team-builder.component.html',\n  styleUrls: ['./team-builder.component.scss']\n})\nexport class TeamBuilderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"tb-container\">\n    <div id=\"team-table\">\n        Table goes here\n    </div>\n    <div id=\"team-summary\">\n        Summary goes here\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'vs-summary',\n  templateUrl: './vs-summary.component.html',\n  styleUrls: ['./vs-summary.component.scss']\n})\nexport class VsSummaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>vs-summary works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pokedex-page',\n  templateUrl: './pokedex-page.component.html',\n  styleUrls: ['./pokedex-page.component.scss']\n})\nexport class PokedexPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\r\n            <app-cards-view></app-cards-view>\r\n            <hr>\r\n            <app-table-view></app-table-view>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { QueryBuilderClassNames, QueryBuilderConfig } from 'angular2-query-builder';\r\nimport { IPokeQuery } from '../queryUtility';\r\n\r\n@Component({\r\n  selector: 'app-filter-dialog-content',\r\n  templateUrl: './filter-dialog-content.component.html',\r\n  styleUrls: ['./filter-dialog-content.component.scss']\r\n})\r\nexport class FilterDialogContentComponent implements OnInit {\r\n\r\n  public config: QueryBuilderConfig = {\r\n    fields: {\r\n      hp: {name: 'HP', type: 'number'},\r\n      attack: {name: 'Attack', type: 'number'},\r\n      sp_attack: {name: 'Special Attack', type: 'number'},\r\n      defense: {name: 'Defense', type: 'number'},\r\n      sp_defense: {name: 'Special Defense', type: 'number'},\r\n      speed: {name: 'Speed', type: 'number'},\r\n      stat_total: { name: 'Total Stats', type: 'number' },\r\n      type: {\r\n        name: 'Type',\r\n        type: 'category',\r\n        options: [\r\n          {name: 'Normal', value: 'normal'},\r\n          {name: 'Fire', value: 'fire'},\r\n          {name: 'Fighting', value: 'fighting'},\r\n          {name: 'Water', value: 'water'},\r\n          {name: 'Flying', value: 'flying'},\r\n          {name: 'Grass', value: 'grass'},\r\n          {name: 'Poison', value: 'poison'},\r\n          {name: 'Electric', value: 'electric'},\r\n          {name: 'Ground', value: 'ground'},\r\n          {name: 'Psychic', value: 'psychic'},\r\n          {name: 'Rock', value: 'rock'},\r\n          {name: 'Ice', value: 'ice'},\r\n          {name: 'Bug', value: 'bug'},\r\n          {name: 'Dragon', value: 'dragon'},\r\n          {name: 'Ghost', value: 'ghost'},\r\n          {name: 'Dark', value: 'dark'},\r\n          {name: 'Steel', value: 'steel'},\r\n          {name: 'Fairy', value: 'fairy'}\r\n        ]\r\n      },\r\n      ability: {\r\n        name: 'Ability',\r\n        type: 'string',\r\n        operators: ['=', '!=']\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FilterDialogContentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IPokeQuery) { \r\n      // console.log(\"dialog data\", this.data);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    // console.log(this.data);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<!-- <h1 mat-dialog-title>Hi</h1> -->\r\n<div mat-dialog-content>\r\n    <query-builder [(ngModel)]=\"data\" [config]=\"config\">\r\n        <!-- <ng-container *queryInput=\"let rule; let field=field; let options=options; type: 'category'\">\r\n            <mat-form-field>\r\n              <mat-select [(ngModel)]=\"rule.value\" [placeholder]=\"field.name\">\r\n                <mat-option *ngFor=\"let opt of options\" [value]=\"opt.value\">\r\n                  {{ opt.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </ng-container> -->\r\n    </query-builder>\r\n    <!-- <textarea class=\"output\">{{data | json}}</textarea> -->\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Ok</button>\r\n</div> \r\n","// import {  } from \"src/app/pokedex.service\";\r\nimport { Pokemon, PokeType } from \"src/app/Pokemon\";\r\n\r\nexport enum NumberOperators {\r\n    eq = '=',\r\n    neq = '!=',\r\n    geq = '>=',\r\n    gt = '>',\r\n    leq = '<=',\r\n    lt = '<',\r\n}\r\nexport enum CategoryOperators {\r\n    in = 'in',\r\n    notin = 'not in'\r\n}\r\nexport enum EqualityOperators {\r\n    eq = '=',\r\n    neq = '!='\r\n}\r\nexport type Operators = NumberOperators | CategoryOperators | EqualityOperators;\r\nexport type IPokeRule = {\r\n    field: 'hp' | 'attack' | 'sp_attack' | 'defense' | 'sp_defense' | 'speed' | 'total';\r\n    operator: NumberOperators;\r\n    value: string;\r\n} | {\r\n    field: 'type';\r\n    operator: CategoryOperators;\r\n    value: PokeType[];\r\n} | {\r\n    field: 'type';\r\n    operator: EqualityOperators;\r\n    value: PokeType;\r\n}\r\n| {\r\n    field: 'ability';\r\n    operator: EqualityOperators;\r\n    value: string;\r\n}\r\n;\r\nexport type IPokeQuery = {\r\n    condition: 'and' | 'or';\r\n    rules: (IPokeQuery|IPokeRule)[]\r\n};\r\n\r\n\r\nexport function filterDataByQueryTree(data: Pokemon[], querytree: IPokeQuery): any[] {\r\n    return data.filter(p => recursiveRuleCheck(p, querytree));\r\n}\r\n\r\nfunction recursiveRuleCheck(pokemon: Pokemon, querytree: IPokeQuery|IPokeRule): boolean {\r\n    if ((querytree as IPokeRule).field && (querytree as IPokeRule).operator) {\r\n        return ruleCheck(pokemon, querytree as IPokeRule)\r\n    }\r\n    else if ((querytree as IPokeQuery).condition == 'and') {\r\n        return (querytree as IPokeQuery).rules.every((subquery => recursiveRuleCheck(pokemon, subquery)))\r\n    }\r\n    else if ((querytree as IPokeQuery).condition == 'or') {\r\n        return (querytree as IPokeQuery).rules.some((subquery => recursiveRuleCheck(pokemon, subquery)))\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction ruleCheck(pokemon: Pokemon, rule: IPokeRule) {\r\n    // const value_from_pokemon = getValueFromPokemon(rule.field, pokemon);\r\n\r\n//Start from 'scratch' zone\r\n    if(['hp', 'attack', 'sp_attack', 'defense', 'sp_defense', 'speed', 'stat_total'].includes(rule.field)) {\r\n        const stat_from_mon = pokemon.get_stat(rule.field);\r\n        if(!stat_from_mon) {\r\n            return false;\r\n        }\r\n        const stat_from_rule = Number.parseFloat(rule.value as string);\r\n        switch (rule.operator) {\r\n            case NumberOperators.eq: {\r\n                return stat_from_mon == stat_from_rule\r\n            } break;\r\n            case NumberOperators.neq: {\r\n                return stat_from_mon != stat_from_rule\r\n\r\n            } break;\r\n            case NumberOperators.geq: {\r\n                return stat_from_mon >= stat_from_rule\r\n\r\n            } break;\r\n            case NumberOperators.leq: {\r\n                return stat_from_mon <= stat_from_rule\r\n\r\n            } break;\r\n            case NumberOperators.gt: {\r\n                return stat_from_mon > stat_from_rule\r\n\r\n            } break;\r\n            case NumberOperators.lt: {\r\n                return stat_from_mon < stat_from_rule\r\n\r\n            } break;\r\n            default:\r\n                break;\r\n        }\r\n    } else if (rule.field == 'type') {\r\n        if (!pokemon.checkTypeRevealed()) {\r\n            return false;\r\n        }\r\n        switch (rule.operator) {\r\n            case EqualityOperators.eq: {\r\n                return [pokemon.get_type1(), pokemon.get_type2()].includes(rule.value)\r\n            } break;\r\n            case EqualityOperators.neq: {\r\n                return !([pokemon.get_type1(), pokemon.get_type2()].includes(rule.value))\r\n    \r\n            } break;\r\n            case CategoryOperators.in: {\r\n                return rule.value.includes(pokemon.get_type1()) ||\r\n                       rule.value.includes(pokemon.get_type2())\r\n\r\n            } break;\r\n            case CategoryOperators.notin: {\r\n                return !(rule.value.includes(pokemon.get_type1()) ||\r\n                         rule.value.includes(pokemon.get_type2()))\r\n    \r\n            } break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    } else if (rule.field == 'ability') {\r\n        if (!pokemon.checkAbilityRevealed()) {\r\n            return false;\r\n        }\r\n        switch (rule.operator) {\r\n            case EqualityOperators.eq: {\r\n\r\n                return pokemon.getAbilitiesIfRevealed().some(ab => ab.toLowerCase() === rule.value.toLowerCase());\r\n                // return pokemon.getAbilitiesIfRevealed().map(a => a.toLowerCase()).includes(rule.value.toLowerCase())\r\n            } break;\r\n            case EqualityOperators.neq: {\r\n                return !(pokemon.getAbilitiesIfRevealed().map(a => a.toLowerCase()).includes(rule.value.toLowerCase()))\r\n            } break;\r\n            default:\r\n                break;\r\n        }        \r\n    } else {\r\n        return true;\r\n    }\r\n    return true;\r\n//\r\n\r\n    // switch (rule.operator) {\r\n    //     case CategoryOperators.in: {\r\n    //         return (value_from_pokemon as string[]).some((t) => (rule.value as string[]).includes(t))\r\n    //     } break;\r\n    //     case CategoryOperators.notin: {\r\n    //         return (value_from_pokemon as string[]).every((t) => !(rule.value as string[]).includes(t))\r\n    //     } break;\r\n    //     case NumberOperators.eq: {\r\n    //         if (typeof value_from_pokemon == 'number') {\r\n    //             return Number.parseFloat(rule.value) == value_from_pokemon\r\n    //         } else if(rule.field == 'type') {\r\n    //             return (value_from_pokemon as string[]).includes(rule.value)\r\n    //         } else {\r\n    //             return rule.value == value_from_pokemon\r\n    //         }\r\n    //     } break;\r\n    //     case NumberOperators.neq: {\r\n    //         if (typeof value_from_pokemon == 'number') {\r\n    //             return Number.parseFloat(rule.value) != value_from_pokemon\r\n    //         }  else if(rule.field == 'type') {\r\n    //             return !(value_from_pokemon as string[]).includes(rule.value)\r\n    //         } else {\r\n    //             return rule.value != value_from_pokemon\r\n    //         }\r\n    //     } break;\r\n    //     case NumberOperators.geq: {\r\n    //         return value_from_pokemon >= Number.parseFloat(rule.value)\r\n    //     } break;\r\n    //     case NumberOperators.gt: {\r\n    //         return value_from_pokemon > Number.parseFloat(rule.value)\r\n    //     } break;\r\n    //     case NumberOperators.lt: {\r\n    //         return value_from_pokemon < Number.parseFloat(rule.value)\r\n    //     } break;\r\n    //     case NumberOperators.leq: {\r\n    //         return value_from_pokemon <= Number.parseFloat(rule.value)\r\n    //     } break;\r\n\r\n    //     default:\r\n    //         return true;\r\n    //         break;\r\n    // }\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FilterDialogContentComponent } from './filter-dialog-content/filter-dialog-content.component';\r\nimport { PokedexService,  } from '../../pokedex.service';\r\nimport { Pokemon, PokeType } from \"../../Pokemon\";\r\n\r\nimport { Columns, Config, DefaultConfig } from 'ngx-easy-table';\r\nimport { API, APIDefinition, Event} from 'ngx-easy-table';\r\nimport { CategoryOperators, filterDataByQueryTree, IPokeQuery, NumberOperators } from './queryUtility';\r\n// import { stringify } from 'querystring';\r\n\r\nenum SortableColumn {\r\n  hp = 'hp',\r\n  attack = 'attack',\r\n  defense = 'defense',\r\n  sp_attack = 'sp_attack',\r\n  sp_defense = 'sp_defense',\r\n  speed = 'speed',\r\n  stat_total = 'stat_total',\r\n  name = 'name',\r\n  uid = 'uid',\r\n  type1 = 'type1',\r\n  type2 = 'type2',\r\n  none = 'none'\r\n}\r\n\r\n@Component({\r\n  selector: 'app-table-view',\r\n  templateUrl: './table-view.component.html',\r\n  styleUrls: ['./table-view.component.scss'],\r\n  // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TableViewComponent implements OnInit, AfterViewInit{\r\n\r\n  @ViewChild('tableTemplate', { static: true }) tableTemplate: APIDefinition | undefined;\r\n\r\n  public configuration: Config;\r\n  public columns: Columns[];\r\n  public dialogOpen = false;\r\n\r\n  public filteredData: Pokemon[] = [];\r\n  private _pokedexService: PokedexService;\r\n  private sortedColumn: SortableColumn;\r\n\r\n  private lastSortedKey = '';\r\n  private lastSortedOrder = '';\r\n  \r\n  public _query: IPokeQuery = {\r\n    condition: 'and',\r\n    rules: [\r\n      // { field: 'hp', operator: NumberOperators.leq, value: '32' },\r\n      // {\r\n      //   condition: 'or',\r\n      //   rules: [\r\n      //     {field: 'type', operator: NumberOperators.eq, value: PokeType.Fire},\r\n      //     {field: 'type', operator: CategoryOperators.in, value: [PokeType.Grass, PokeType.Bug]},\r\n      //   ]\r\n      // }\r\n    ]\r\n  };\r\n\r\n  constructor(public pokedexService: PokedexService, public dialog : MatDialog) { \r\n    this.configuration = { ...DefaultConfig };\r\n    // this.configuration.threeWaySort = true;\r\n    // this.configuration.orderEventOnly = true;\r\n    // this.configuration.orderEnabled = true;\r\n    // this.configuration.searchEnabled = true;\r\n    // this.hpTemplate \r\n    // ... etc.\r\n    this.columns = [\r\n      { key: 'name', title: 'Name' },\r\n      { key: 'uid', title: 'Id'},\r\n      { key: 'type1', title: 'Type 1' },\r\n      { key: 'type2', title: 'Type 2'},\r\n      { key: 'stat_total', title: 'Total' },\r\n      { key: 'hp', title: 'HP'},\r\n      { key: 'attack', title: 'Attack'},\r\n      { key: 'defense', title: 'Defense'},\r\n      { key: 'sp_attack', title: 'Special Attack'},\r\n      { key: 'sp_defense', title: 'Special Defense'},\r\n      { key: 'speed', title: 'Speed'},\r\n    ];\r\n    this._pokedexService = pokedexService;\r\n    this.filteredData = this._pokedexService.pokedex;\r\n    this.sortedColumn = SortableColumn.none;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.refreshTable();\r\n  }\r\n\r\n  public openFilterTreeDialog(): void {\r\n    if (!this.dialogOpen) { \r\n      this.dialogOpen = true;\r\n      let dialogRef = this.dialog.open(FilterDialogContentComponent, {\r\n        width: '550px',\r\n        data: this.query,\r\n        disableClose: false,\r\n        hasBackdrop: true,\r\n      });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        this.dialogOpen = false;\r\n        this.query = result;\r\n        // console.log(\"after close\", this.query);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  private set query(result: IPokeQuery) {\r\n    // TODO any protection or adjustments needed?\r\n    if (result) {\r\n      this._query = result;\r\n      this.refreshTable();\r\n      // this.filteredData = filterDataByQueryTree(this._pokedexService.pokedex, this.query);\r\n    }\r\n    \r\n  }\r\n\r\n  private get query(): IPokeQuery {\r\n    return this._query;\r\n  }\r\n\r\n  \r\n  ngAfterViewInit(): void {\r\n    //TODO: Subscribe to the dex service (specifically dex changed subject)\r\n    this.pokedexService.dexChanges.subscribe(\r\n      () => {\r\n        this.refreshTable();\r\n      }\r\n    )\r\n    //TODO: Subscribe to individual revelation\r\n    this.pokedexService.individualChanges.subscribe(\r\n      () => {\r\n        this.refreshTable();\r\n      }\r\n    )\r\n  }\r\n\r\n  refreshTable() {\r\n    let initialdata = this.filterDataInitialPass();\r\n    this.filteredData = filterDataByQueryTree(initialdata, this.query);\r\n  }\r\n\r\n  filterDataInitialPass() {\r\n    // If a Pokemon is revealed at all, show them in the table\r\n    let res = this.pokedexService.pokedex.filter(mon => {\r\n      return  mon.fully_revealed\r\n      ||      mon.abilities_revealed\r\n      ||      mon.stats_revealed \r\n      ||      mon.type_revealed\r\n      ||      mon.bst_revealed;\r\n    });\r\n\r\n\r\n\r\n    return res;\r\n  }\r\n\r\n  eventEmitted($event: { event: string; value: any }) {\r\n    if ($event.event === Event.onOrder) {\r\n      console.log($event)\r\n      // console.log('aaa')\r\n      // if($event.value.key as SortableColumn == SortableColumn.uid) {\r\n      //   this.filteredData = [\r\n      //     ...this.filteredData.sort((a, b) => a.uid.localeCompare(b.uid))\r\n      //   ]\r\n      // }\r\n\r\n      // if(this.lastSortedKey == ($event.value.key as string) && this.lastSortedOrder == ($event.value.order as string) ) {\r\n      //   return;\r\n      // }\r\n      // this.lastSortedKey = ($event.value.key as string)\r\n      // this.lastSortedOrder = ($event.value.order as string)\r\n      // this.sortedColumn = $event.value.key as SortableColumn\r\n      // console.log(\"Key: \", $event.value.key, \" Order: \", $event.value.order, \" Model Value: \", this.sortedColumn == SortableColumn.uid)\r\n      // // this.refreshTable()\r\n    }\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"pokedexService.validDexUploaded\">\r\n\r\n    <button class='filterButton openDialogButton' (click)=\"openFilterTreeDialog()\">Filter</button>\r\n    <ngx-table [configuration]=\"configuration\" [data]=\"filteredData\" [columns]=\"columns\" (event)=\"eventEmitted($event)\" #tableTemplate>\r\n        <ng-template let-row let-index=\"index\">\r\n            <td>\r\n                <h2>{{ row.name }}</h2>\r\n            </td>\r\n            <td >\r\n                <h3>{{ row.uid }}</h3>\r\n            </td>\r\n            <td>\r\n                <span>{{row.checkTypeRevealed() ? row.type1 : \"???\"}}</span>\r\n            </td>\r\n            <td>\r\n                <span>{{row.checkTypeRevealed() ? row.type2 : \"???\"}}</span>\r\n            </td>\r\n            <td>\r\n                <span>Total: {{ row.checkBSTRevealed()?row.bst():\"???\" }}</span>\r\n            </td>\r\n            <td *ngFor=\"let stat of ['hp', 'attack', 'defense', 'sp_attack', 'sp_defense', 'speed']\">\r\n                <div class=\"statsBar\">\r\n                    <span class=\"statsBarFill total\" [class]=\"[stat]\" [style.width]=\"row.get_stat(stat)/2.55+ '%'\" aria-valuenow=\"row.get_stat(stat)\"\r\n                    aria-valuemin=\"0\" aria-valuemax=\"255\">\r\n                    </span>\r\n                    <div class='overlayLabel'>\r\n                        <span>\r\n                            {{row.get_stat(stat)?row.get_stat(stat):\"???\"}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </ng-template>\r\n    </ngx-table>\r\n</div>\r\n<!-- <ng-template #hpTpl let-row let-rowIndex=\"rowIndex\" let-column=\"column\">\r\n    <div>rowIndex: {{ rowIndex }}</div>\r\n</ng-template> -->\r\n  \r\n  ","import { JsonPipe } from '@angular/common';\r\nimport { ElementRef, Injectable, ViewChild } from '@angular/core';\r\n// import { readFile, readFileSync } from 'fs';\r\nimport { Observable, Subject } from 'rxjs';\r\n// import SampleJson from '../assets/data/main_collection.json';\r\nimport { Pokemon, learned_move, tm_move, PokeType } from './Pokemon';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PokedexService {\r\n\r\n\r\n  public pokedex: Pokemon[] = [];\r\n  public pokedexByName = new Map<string, Pokemon>();\r\n  public validDexUploaded = false;\r\n  public dexChanges = new Subject<any>();\r\n  public individualChanges = new Subject<Pokemon>();\r\n  private v = 3;\r\n  loadedFile: string = '';\r\n  isFullyRevealed = false;\r\n  allBSTRevealed = false;\r\n  allTypesRevealed = false;\r\n  allAbilitiesRevealed = false;\r\n\r\n  constructor() {\r\n    // this.getPokemonList();\r\n\r\n    //TODO: THIS MUST BE COMMENTED OUT BEFORE PRODUCTION\r\n    // (window as any).dex_service = this;\r\n  }\r\n\r\n  /**\r\n   * Gets the default pokemon list loaded into the service.\r\n   * TODO: Deprecate this and either start with a) no list or b) a list of\r\n   * actual pokemon objects\r\n   */\r\n  // private getPokemonList() {\r\n  //   this.pokedex = Object.values(SampleJson).map((pokeJson) => {\r\n  //     return {\r\n  //       name: pokeJson.name,\r\n  //       pokedex_num: Number.parseInt(pokeJson.long_id),\r\n  //       uid: pokeJson.long_id,\r\n\r\n  //       stat_total: Number.parseInt(pokeJson.stat_total),\r\n  //       hp: Number.parseInt(pokeJson.hp),\r\n  //       attack: Number.parseInt(pokeJson.attack),\r\n  //       defense: Number.parseInt(pokeJson.defense),\r\n  //       sp_attack: Number.parseInt(pokeJson.sp_attack),\r\n  //       sp_defense: Number.parseInt(pokeJson.sp_defense),\r\n  //       speed: Number.parseInt(pokeJson.speed),\r\n\r\n  //       type1: pokeJson.type1 as PokeType,\r\n  //       type2: pokeJson.type2 as PokeType,\r\n\r\n  //       // ev_from: [pokeJson.ev_from],\r\n  //       // ev_to: JSON.parse(pokeJson.ev_to.replace(/'/g, '\"')) as string[],\r\n  //       is_base: pokeJson.is_base == \"1\",\r\n  //       is_final: pokeJson.is_full_ev == \"1\",\r\n  //       // evo_family: JSON.parse(pokeJson.evo_family.replace(/'/g, '\"')) as string[]\r\n  //     } as Pokemon\r\n  //     // This does not actually produce a pokemon object\r\n  //   });\r\n  //   this.pokedex.sort((a, b) => a.pokedex_num - b.pokedex_num);\r\n  // }\r\n\r\n  public readSelectedFile(inputFile: File) {\r\n    let reader = new FileReader();\r\n    this.v = 4;\r\n    reader.onload = (e) => {\r\n      this.parseFile(reader.result ? reader.result.toString() : '')\r\n      this.loadedFile = inputFile.name;\r\n    }\r\n    reader.onerror = (e) => {\r\n      alert('There was a problem reading the file you selected. You may need to refresh the page.')\r\n      console.log(reader.error)\r\n    }\r\n    reader.readAsText(inputFile)\r\n  }\r\n\r\n  private parseFile(fileString: string) {\r\n    if (fileString.length) {\r\n      try {\r\n        if (fileString.startsWith('Randomizer Version:')) {\r\n          this.parseLogFile(fileString)\r\n        } else {\r\n          this.parseSaveFile(fileString)\r\n        }\r\n        this.validDexUploaded = true;\r\n        this.dexChanges.next();\r\n      } catch (err) {\r\n        alert(\"There was a problem reading the file you uploaded:\" + err);\r\n      }\r\n    } else {\r\n      this.validDexUploaded = false;\r\n      alert(\"The file didn't load properly\")\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Parse a log file from the Universal Pokemon Randomizer.\r\n   * TODO: add location/move information and create a factory method in the \r\n   * Pokemon list\r\n   * @param log \r\n   * @returns \r\n   */\r\n  private parseLogFile(log: string) {\r\n    const blocks = log.split('\\r\\n\\r\\n');\r\n\r\n    let pokeStrings: string[] = [];\r\n    let evoStrings: string[] = [];\r\n    let tmStrings: string[] = [];\r\n    let moveStrings: string[] = [];\r\n    let tmCompStrings: string[] = [];\r\n\r\n    for (const block of blocks) {\r\n      const lines = block.split('\\r\\n');\r\n      const firstLine = lines[0];\r\n      const label = firstLine.startsWith('-') ? firstLine.split('--')[1] : firstLine.split(':')[0];\r\n      switch (label) {\r\n        case 'Randomized Evolutions':\r\n          evoStrings = lines.slice(1);\r\n          break;\r\n        case 'Pokemon Base Stats & Types':\r\n          pokeStrings = lines.slice(1);\r\n          break;\r\n        case 'TM Moves':\r\n          tmStrings = lines.slice(1);\r\n          break;\r\n        case 'Pokemon Movesets':\r\n          moveStrings.push(block.slice(block.indexOf('\\r\\n')));\r\n          break;\r\n        case 'TM Compatibility':\r\n          tmCompStrings = lines.slice(1);\r\n          break;\r\n        default:\r\n          if (firstLine.match(/\\d{3}/) && !firstLine.startsWith('Set')) {\r\n            moveStrings.push(block)\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Potentially let this become the factory method (returns a list\r\n    // of Pokemon objects fully formed from the component string arrays)\r\n    this.buildDex(pokeStrings, evoStrings, tmStrings, moveStrings);\r\n\r\n    this.resetSpoils();\r\n    return;\r\n  }\r\n\r\n  private resetSpoils() {\r\n    this.allAbilitiesRevealed = false;\r\n    this.allBSTRevealed = false;\r\n    this.allTypesRevealed = false;\r\n    this.isFullyRevealed = false;\r\n  }\r\n\r\n  // TODO: Potentially move to Pokemon.ts as a static method\r\n  buildDex(pokeStrings: string[], evoStrings: string[], tmStrings: string[], moveStrings: string[]) {\r\n    let res: Pokemon[] = [];\r\n    const labels = pokeStrings[0];\r\n    for (const pokeString of pokeStrings.slice(1)) {\r\n      let new_mon = new Pokemon();\r\n      new_mon.setBasicStats(pokeString, labels);\r\n      //If this is an alt form, set UID to original mon\r\n      if (new_mon.name.indexOf('-') !== -1\r\n        && res.find(mon => new_mon.name.indexOf(mon.name) !== -1)\r\n        && !new_mon.name.toLowerCase().includes('porygon')) {\r\n        new_mon.uid = res.find(mon => new_mon.name.indexOf(mon.name) !== -1)!.uid\r\n      }\r\n      res.push(new_mon)\r\n    }\r\n    this.pokedex = res;\r\n    for (let mon of res) {\r\n      this.pokedexByName.set(mon.name, mon);\r\n    }\r\n\r\n    for (let evString of evoStrings) {\r\n      const names = evString.split(/(->|,|and)/).map(s => s.trim());\r\n      for (let name of names) {\r\n        this.pokedexByName.get(name)?.addEvolution(evString);\r\n      }\r\n    }\r\n\r\n    for (let moveString of moveStrings) {\r\n      let mon_name = moveString.split(' ')[1];\r\n      let mon = this.pokedexByName.get(mon_name);\r\n      if (mon) {\r\n        for (let level_line of moveString.split('\\r\\n')) {\r\n          if (level_line.match(/Level[ \\da-zA-Z:]*/)) {\r\n            let level = level_line.split(/[ :]/)[1].trim();\r\n            let move_name = level_line.split(':')[1].trim();\r\n            let move = { level: +level, move: move_name } as learned_move;\r\n            mon.learn_levels.push(move.level);\r\n            mon.learned_moves.push(move.move);\r\n          }\r\n\r\n        }\r\n        mon.notes = \"Learns Moves at: \\r\\n\" + mon.learn_levels.filter(v => v > 1).toString();\r\n      }\r\n    }\r\n\r\n    // console.log(this.pokedex)\r\n    // console.log(moveStrings.map(s => s.trim()));\r\n    // console.log(tmStrings);\r\n  }\r\n\r\n  private parseSaveFile(save_data: string) {\r\n    try {\r\n      const save_obj = JSON.parse(save_data);\r\n      this.pokedex = save_obj.pokedex.map(\r\n        (mon_data: any) => Pokemon.loadFromJson(mon_data)\r\n      )\r\n    } catch {\r\n      alert(\"Bad File Uploaded (have you checked your .pkdx?)\")\r\n    }\r\n  }\r\n\r\n  // This may be useful when integrating all the views w/ this service\r\n  private updatePokemonList(newList: Pokemon[]) {\r\n    if (newList.length) {\r\n      this.pokedex = newList;\r\n      //Inform our subscribers that the dex has changed\r\n      this.dexChanges.next();\r\n    }\r\n  }\r\n\r\n  public revealAll() {\r\n    for (let mon of this.pokedex) {\r\n      mon.fully_revealed = true;\r\n    }\r\n    this.isFullyRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  public hideAll() {\r\n    for (let mon of this.pokedex) {\r\n      mon.fully_revealed = false;\r\n    }\r\n    this.isFullyRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealAbilities() {\r\n    for (let mon of this.pokedex) {\r\n      mon.abilities_revealed = true;\r\n    }\r\n    this.allAbilitiesRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  hideAbilities() {\r\n    for (let mon of this.pokedex) {\r\n      mon.abilities_revealed = false;\r\n    }\r\n    this.allAbilitiesRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealTypes() {\r\n    for (let mon of this.pokedex) {\r\n      mon.type_revealed = true;\r\n    }\r\n    this.allTypesRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  hideTypes() {\r\n    for (let mon of this.pokedex) {\r\n      mon.type_revealed = false;\r\n    }\r\n    this.allTypesRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealBSTs() {\r\n    for (let mon of this.pokedex) {\r\n      mon.bst_revealed = true;\r\n    }\r\n    this.allBSTRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  hideBSTs() {\r\n    for (let mon of this.pokedex) {\r\n      mon.bst_revealed = false;\r\n    }\r\n    this.allBSTRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  public updatePokemon(mon: Pokemon) {\r\n    this.individualChanges.next(mon);\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}