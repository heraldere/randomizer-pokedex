{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/Pokemon.ts","./src/app/about-page/about-page.component.ts","./src/app/about-page/about-page.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/pokedex-page/cards-view/card/card.component.ts","./src/app/pokedex-page/cards-view/card/card.component.html","./src/app/pokedex-page/cards-view/cards-view.component.ts","./src/app/pokedex-page/cards-view/cards-view.component.html","./src/app/pokedex-page/cards-view/individual-summary/individual-summary.component.ts","./src/app/pokedex-page/cards-view/individual-summary/individual-summary.component.html","./src/app/pokedex-page/cards-view/team-builder/team-builder.component.ts","./src/app/pokedex-page/cards-view/team-builder/team-builder.component.html","./src/app/pokedex-page/cards-view/vs-summary/vs-summary.component.ts","./src/app/pokedex-page/cards-view/vs-summary/vs-summary.component.html","./src/app/pokedex-page/cards-view/world-view/chart-configs/bst-histogram.config.ts","./src/app/pokedex-page/cards-view/world-view/chart-configs/stat-histogram.config.ts","./src/app/pokedex-page/cards-view/world-view/chart-configs/stat-ratio-histogram.config.ts","./src/app/pokedex-page/cards-view/world-view/world-view.component.ts","./src/app/pokedex-page/cards-view/world-view/world-view.component.html","./src/app/pokedex-page/pokedex-page.component.ts","./src/app/pokedex-page/pokedex-page.component.html","./src/app/pokedex-page/table-view/filter-dialog-content/filter-dialog-content.component.ts","./src/app/pokedex-page/table-view/filter-dialog-content/filter-dialog-content.component.html","./src/app/pokedex-page/table-view/queryUtility.ts","./src/app/pokedex-page/table-view/table-view.component.ts","./src/app/pokedex-page/table-view/table-view.component.html","./src/app/pokedex.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["export enum PokeType {\r\n  Normal = \"normal\",\r\n  Fire = \"fire\",\r\n  Fighting = \"fighting\",\r\n  Water = \"water\",\r\n  Flying = \"flying\",\r\n  Grass = \"grass\",\r\n  Poison = \"poison\",\r\n  Electric = \"electric\",\r\n  Ground = \"ground\",\r\n  Psychic = \"psychic\",\r\n  Rock = \"rock\",\r\n  Ice = \"ice\",\r\n  Bug = \"bug\",\r\n  Dragon = \"dragon\",\r\n  Ghost = \"ghost\",\r\n  Dark = \"dark\",\r\n  Steel = \"steel\",\r\n  Fairy = \"fairy\",\r\n  None = \"none\",\r\n  Unknown = \"curse\"\r\n}\r\n\r\nexport const TypeColors = {\r\n  \"fire\": [\"#ff6966\", \"#9b1414\"],\r\n  \"water\": [\"#6765ff\", \"#3b3e9b\"],\r\n  \"grass\": [\"#84d472\", \"#359b21\"],\r\n  \"bug\": [\"#83ff78\", \"#4fb525\"],\r\n  \"ground\": [\"#ffae35\", \"#9b772f\"],\r\n  \"rock\": [\"#ff6f40\", \"#9b6145\"],\r\n  \"steel\": [\"#c0b4b6\", \"#726a6a\"],\r\n  \"fairy\": [\"#ffadc7\", \"#9b1e44\"],\r\n  \"dark\": [\"#686766\", \"#3e3b39\"],\r\n  \"psychic\": [\"#ffbde0\", \"#9b4e90\"],\r\n  \"ghost\": [\"#e486ff\", \"#8d689b\"],\r\n  \"poison\": [\"#bf68bb\", \"#755671\"],\r\n  \"dragon\": [\"#9782ff\", \"#71669b\"],\r\n  \"ice\": [\"#bafff6\", \"#647c9b\"],\r\n  \"flying\": [\"#aaa5ff\", \"#668d9b\"],\r\n  \"normal\": [\"#f2ffb8\", \"#9b996d\"],\r\n  \"fighting\": [\"#ff9a78\", \"#9b532f\"],\r\n  \"electric\": [\"#ffffa3\", \"#c8c24a\"],\r\n  \"missing\": [\"#505050\", \"#0c0c0c\"]\r\n};\r\n\r\nexport interface learned_move {\r\n  level: number,\r\n  move: string\r\n};\r\n\r\nexport interface tm_move {\r\n  tm: number,\r\n  move: string\r\n};\r\n\r\n\r\nexport class Pokemon {\r\n\r\n  name: string;\r\n  pokedex_num: number;\r\n  uid: string;\r\n  \r\n  stat_total: number;\r\n  hp: number;\r\n  attack: number;\r\n  defense: number;\r\n  sp_attack: number;\r\n  sp_defense: number;\r\n  speed: number;\r\n  special?: number;\r\n  \r\n  type1: PokeType;\r\n  type2: PokeType;\r\n  \r\n  ability1?: string;\r\n  ability2?: string;\r\n  hiddenAbility?: string;\r\n  \r\n  next_evos: string[];\r\n  prev_evos: string[];\r\n  is_base: boolean;\r\n  is_final: boolean;\r\n  evo_family: string[];\r\n  \r\n  forms: string[];\r\n  form_num: number;\r\n\r\n  learn_levels: number[];\r\n  learned_moves: string[];\r\n\r\n  tms: number[];\r\n  tm_moves: string[];\r\n  hms: number[];\r\n  hm_moves: string[];\r\n\r\n  type_revealed: boolean;\r\n  stats_revealed: boolean;\r\n  abilities_revealed: boolean;\r\n  next_evos_revealed: number[];\r\n  prev_evos_revealed: number[];\r\n  learned_moves_revealed_idx: number;\r\n  tm_indexes_learned: number[];\r\n  fully_revealed: boolean;\r\n\r\n  notes: string;\r\n  bst_revealed: boolean;\r\n  \r\n  // We may be able to make this private and only access Pokemon w/ factories\r\n  constructor() {\r\n    // a new Pokemon should be fully defined, but all values should be\r\n    // empty/zeroed defaults\r\n\r\n    this.name = \"\";\r\n    this.pokedex_num = 0;\r\n    this.uid = \"000\";\r\n    this.hp = 0;\r\n    this.attack = 0;\r\n    this.defense = 0;\r\n    this.sp_attack = 0;\r\n    this.sp_defense = 0;\r\n    this.speed = 0;\r\n    this.stat_total = 0;\r\n\r\n    this.type1 = \"unknown\" as PokeType;\r\n    this.type2 = \"none\" as PokeType;\r\n\r\n    this.next_evos = [];\r\n    this.prev_evos = [];\r\n    this.is_base = true;\r\n    this.is_final = true;\r\n    this.evo_family = [];\r\n    this.forms = [];\r\n    this.form_num = 0;\r\n\r\n    this.learned_moves = [];\r\n    this.learn_levels = [];\r\n\r\n    this.tms = [];\r\n    this.tm_moves = [];\r\n\r\n    this.hms = [];\r\n    this.hm_moves = [];\r\n\r\n    this.type_revealed = false;\r\n    this.stats_revealed = false;\r\n    this.bst_revealed = false;\r\n    this.abilities_revealed = false;\r\n    this.next_evos_revealed = [];\r\n    this.prev_evos_revealed = [];\r\n    this.learned_moves_revealed_idx = 0;\r\n    this.tm_indexes_learned = [];\r\n\r\n    this.fully_revealed = false;\r\n\r\n    this.notes = \"\";\r\n  }\r\n\r\n  //TODO: Refactor into a factory (for posterity)\r\n  setBasicStats(statString: string, labelString: string) {\r\n    const tokens = statString.split('|').map(s => s.trim());\r\n    const labels = labelString.split('|').map(s => s.trim());\r\n\r\n    this.name = tokens[labels.indexOf('NAME')];\r\n    this.pokedex_num = parseInt(tokens[labels.indexOf('NUM')]);\r\n    this.uid = String(this.pokedex_num).padStart(3, '0');\r\n    this.hp = parseInt(tokens[labels.indexOf('HP')]);\r\n    this.attack = parseInt(tokens[labels.indexOf('ATK')]);\r\n    this.defense = parseInt(tokens[labels.indexOf('DEF')]);\r\n    this.sp_attack = parseInt(tokens[labels.indexOf('SATK')]);\r\n    this.sp_defense = parseInt(tokens[labels.indexOf('SDEF')]);\r\n    this.speed = labels.indexOf('SPEC') >= 0 ? parseInt(tokens[labels.indexOf('SPE')]) : parseInt(tokens[labels.indexOf('SPD')]);\r\n    this.special = labels.indexOf('SPEC') >= 0 ? parseInt(tokens[labels.indexOf('SPEC')]) : undefined;\r\n    this.stat_total = this.bst();\r\n\r\n    const typeString = tokens[labels.indexOf('TYPE')];\r\n    this.type1 = typeString.split('/')[0].toLowerCase() as PokeType;\r\n    this.type2 = typeString.indexOf('/') >= 0 ? typeString.split('/')[1].toLowerCase() as PokeType : \"none\" as PokeType;\r\n\r\n    if (labels.indexOf('ABILITY1') >= 0) {\r\n      this.ability1 = tokens[labels.indexOf('ABILITY1')];\r\n    }\r\n    if (labels.indexOf('ABILITY2') >= 0) {\r\n      this.ability2 = tokens[labels.indexOf('ABILITY2')];\r\n    }\r\n    if (labels.indexOf('ABILITY3') >= 0) {\r\n      this.hiddenAbility = tokens[labels.indexOf('ABILITY3')];\r\n    }\r\n  }\r\n\r\n  public setBasicStatsFromObject(data: any) {\r\n    this.name = data.name;\r\n    this.pokedex_num = data.pokedex_num;\r\n    this.uid = data.uid;\r\n    this.hp = data.hp;\r\n    this.attack = data.attack;\r\n    this.defense = data.defense;\r\n    this.sp_attack = data.sp_attack;\r\n    this.sp_defense = data.sp_defense;\r\n    this.speed = data.speed;\r\n    this.special = data.special;\r\n    this.stat_total = data.stat_total;\r\n    this.type1 = data.type1;\r\n    this.type2 = data.type2;\r\n    this.ability1 = data.ability1;\r\n    this.ability2 = data.ability2;\r\n    this.hiddenAbility = data.hiddenAbility;\r\n    this.form_num = data.form_num;\r\n    this.forms = data.forms as string[];\r\n  }\r\n\r\n  public setEvolutionsFromObject(data: any, currentDexDict: Map<string, Pokemon>) {\r\n    this.next_evos = (data.next_evos as string[]).filter(evo => currentDexDict.has(evo));\r\n    this.prev_evos = (data.prev_evos as string[]).filter(evo => currentDexDict.has(evo));\r\n  }\r\n\r\n  public setMovesFromObject(data: any) {\r\n    this.learned_moves = data.learned_moves as string[];\r\n    this.learn_levels = data.learn_levels as number[];\r\n  }\r\n\r\n  public setTMMovesFromObject(data: any, dexTmMoves?: string[]) {\r\n    this.tm_moves = data.tm_moves as string[];\r\n    this.tms = data.tms as number[];\r\n    if(dexTmMoves && dexTmMoves.length !== 0) {\r\n      for(let [idx, tm] of this.tms.entries()) {\r\n        this.tm_moves[idx] = dexTmMoves[tm];\r\n      }\r\n    }\r\n  }\r\n\r\n  static loadFromJson(json_data: any): Pokemon {\r\n    // Verify that this object contains all necessary fields\r\n    if (\r\n      json_data.name === undefined ||\r\n      json_data.pokedex_num === undefined ||\r\n      json_data.uid === undefined ||\r\n      json_data.hp === undefined ||\r\n      json_data.attack === undefined ||\r\n      json_data.defense === undefined ||\r\n      json_data.sp_attack === undefined ||\r\n      json_data.sp_defense === undefined ||\r\n      json_data.speed === undefined ||\r\n      json_data.stat_total === undefined ||\r\n      json_data.type1 === undefined ||\r\n      json_data.type2 === undefined ||\r\n      json_data.next_evos === undefined ||\r\n      json_data.prev_evos === undefined ||\r\n      json_data.is_base === undefined ||\r\n      json_data.is_final === undefined ||\r\n      json_data.evo_family === undefined ||\r\n      json_data.forms === undefined ||\r\n      json_data.form_num === undefined ||\r\n      json_data.learned_moves === undefined ||\r\n      json_data.learn_levels === undefined ||\r\n      json_data.tms === undefined ||\r\n      json_data.tm_moves === undefined ||\r\n      json_data.type_revealed === undefined ||\r\n      json_data.stats_revealed === undefined ||\r\n      json_data.abilities_revealed === undefined ||\r\n      json_data.next_evos_revealed === undefined ||\r\n      json_data.prev_evos_revealed === undefined ||\r\n      json_data.learned_moves_revealed_idx === undefined ||\r\n      json_data.tm_indexes_learned === undefined ||\r\n      json_data.fully_revealed === undefined ||\r\n      json_data.notes === undefined ||\r\n\r\n      json_data.bst_revealed === undefined\r\n      // json_data.ability1 === undefined ||\r\n      // json_data.ability2 === undefined\r\n    ) {\r\n      // if not, we shouldn't continue\r\n      throw new Error(\"Trouble Parsing Pokemon\");\r\n    }\r\n    let mon = new Pokemon();\r\n    mon.name = json_data.name;\r\n    mon.pokedex_num = json_data.pokedex_num;\r\n    mon.uid = json_data.uid;\r\n    mon.hp = json_data.hp;\r\n    mon.attack = json_data.attack;\r\n    mon.defense = json_data.defense;\r\n    mon.sp_attack = json_data.sp_attack;\r\n    mon.sp_defense = json_data.sp_defense;\r\n    mon.special = json_data.special;\r\n    mon.speed = json_data.speed;\r\n    mon.stat_total = json_data.stat_total;\r\n\r\n    mon.type1 = json_data.type1;\r\n    mon.type2 = json_data.type2;\r\n    \r\n    // Initialize other stats\r\n    mon.next_evos = json_data.next_evos;\r\n    mon.prev_evos = json_data.prev_evos;\r\n    mon.is_base = json_data.is_base;\r\n    mon.is_final = json_data.is_final;\r\n    mon.evo_family = json_data.evo_family;\r\n    mon.forms = json_data.forms;\r\n    mon.form_num = json_data.form_num;\r\n    \r\n    mon.learned_moves = json_data.learned_moves;\r\n    mon.learn_levels = json_data.learn_levels;\r\n    \r\n    mon.tms = json_data.tms;\r\n    mon.tm_moves = json_data.tm_moves;\r\n    mon.hms = json_data.hms ? json_data.hms : [];\r\n    mon.hm_moves = json_data.hm_moves ? json_data.hm_moves : [];\r\n    \r\n    mon.type_revealed = json_data.type_revealed;\r\n    mon.stats_revealed = json_data.stats_revealed;\r\n    mon.bst_revealed = json_data.bst_revealed;\r\n    mon.abilities_revealed = json_data.abilities_revealed;\r\n    mon.next_evos_revealed = json_data.next_evos_revealed;\r\n    mon.prev_evos_revealed = json_data.prev_evos_revealed;\r\n    mon.learned_moves_revealed_idx = json_data.learned_moves_revealed_idx;\r\n    mon.tm_indexes_learned = json_data.tm_indexes_learned;\r\n    \r\n    mon.fully_revealed = json_data.fully_revealed;\r\n    \r\n    mon.notes = json_data.notes;\r\n\r\n    mon.ability1 = json_data.ability1;\r\n    mon.ability2 = json_data.ability2;\r\n    mon.hiddenAbility = json_data.hiddenAbility;\r\n\r\n    return mon;\r\n  }\r\n\r\n  addEvolution(evString: string) {\r\n    if (evString.indexOf(this.name) < 0) {\r\n      return;\r\n    }\r\n    const evArr = evString.split('->').map(s => s.trim());\r\n    const leftSide = evArr[0];\r\n    const rightSide = evArr[1];\r\n    const rightArr = rightSide.split(/(?: and |,)/).map(s => s.trim());\r\n    if (leftSide === this.name) {\r\n      this.next_evos = rightArr;\r\n    } else {\r\n      this.prev_evos.push(leftSide);\r\n    }\r\n    this.is_base = this.prev_evos.length==0;\r\n    this.is_final = this.next_evos.length==0;\r\n  }\r\n\r\n  get_stat(stat: string): number {\r\n    if (this.stats_revealed || this.fully_revealed) {\r\n      switch (stat) {\r\n        case \"hp\":\r\n          return this.hp;\r\n        case \"attack\":\r\n          return this.attack;\r\n        case \"defense\":\r\n          return this.defense;\r\n        case \"sp_attack\":\r\n          return this.sp_attack;\r\n        case \"sp_defense\":\r\n          return this.sp_defense;\r\n        case \"special\":\r\n          return this.special ? this.special : 0;\r\n        case \"speed\":\r\n          return this.speed;\r\n        case \"stat_total\":\r\n          return this.bst();\r\n        default:\r\n          return 0;\r\n      }\r\n    } else if (this.checkBSTRevealed() && stat === \"stat_total\") {\r\n      return this.bst();\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  get_full_moveset(): string[] {\r\n    return this.learned_moves.concat(\r\n      this.tm_moves.filter(m => this.learned_moves.indexOf(m) === -1));\r\n  }\r\n\r\n  get_revealed_learned_move_pairs(): learned_move[] {\r\n    return this.learn_levels.map((e, i) => {\r\n      return {\r\n        level: e,\r\n        move: i < this.learned_moves_revealed_idx || this.fully_revealed\r\n          ? this.learned_moves[i]\r\n          : '???'\r\n      } as learned_move;\r\n    });\r\n  }\r\n\r\n  get_revealed_tm_move_pairs(): tm_move[] {\r\n    return this.tms.map((e, i) => {\r\n      return {\r\n        tm: e,\r\n        move: this.tm_indexes_learned.indexOf(i) >= 0 || this.fully_revealed\r\n          ? this.tm_moves[i]\r\n          : \"???\"\r\n      } as tm_move;\r\n    });\r\n  }\r\n\r\n  get_type1(): PokeType {\r\n    return this.type_revealed || this.fully_revealed ? this.type1 : PokeType.Unknown;\r\n  }\r\n\r\n  get_type2(): PokeType {\r\n    return this.type_revealed || this.fully_revealed ? this.type2 : PokeType.None;\r\n  }\r\n\r\n  /**\r\n  * Gets a list of Evolutions from this pokemon.\r\n  * This is affected by whether or not those evolutions are revealed.\r\n  * @returns a list of Pokemon Names\r\n  */\r\n  get_evos_from(): string[] {\r\n    return this.next_evos.map((e, i) => (this.next_evos_revealed.indexOf(i)  >= 0|| this.fully_revealed) ? e : \"unknown\");\r\n  }\r\n\r\n  /**\r\n  * Gets a list of evolutions to this pokemon.\r\n  * This is affected by whether or not the evolutions are revealed\r\n  * @returns a list of Pokemon Names\r\n  */\r\n  get_evos_to(): string[] {\r\n    return this.prev_evos.map((e, i) => (this.prev_evos_revealed.indexOf(i)  >= 0 || this.fully_revealed) ? e : \"unknown\");\r\n  }\r\n\r\n  bst(): number {\r\n    return this.special ? this.hp + this.attack + this.defense + this.special + this.speed :\r\n      this.hp + this.attack + this.defense + this.sp_attack + this.sp_defense + this.speed;\r\n  }\r\n\r\n  getStatsIfRevealed(): number[] {\r\n    if (this.stats_revealed || this.fully_revealed) {\r\n      if (this.special) {\r\n        return [this.hp, this.attack, this.defense, this.special, this.speed];\r\n      } else {\r\n        return [this.hp, this.attack, this.defense, this.sp_attack, this.sp_defense, this.speed];\r\n      }\r\n    }\r\n    return [0, 0, 0, 0, 0, 0];\r\n  }\r\n\r\n  getAbilitiesIfRevealed(): string[] {\r\n    let res: string[] = [];\r\n    if (this.abilities_revealed || this.fully_revealed) {\r\n      if (this.ability1) {\r\n        res.push(this.ability1);\r\n      }\r\n      if (this.ability2) {\r\n        res.push(this.ability2);\r\n      }\r\n      if (this.hiddenAbility) {\r\n        res.push(this.hiddenAbility);\r\n      }\r\n    } else if (this.ability1) {\r\n      res.push(\"???\");\r\n    }\r\n    return res;\r\n  }\r\n\r\n  \r\n  getMovesIfRevealed(): string[] {\r\n    let res: string[] = []\r\n    if (this.fully_revealed) {\r\n      res = this.learned_moves.concat(this.tm_moves)\r\n    } else {\r\n      res = res.concat(this.learned_moves.slice(0, this.learned_moves_revealed_idx))\r\n      res = res.concat(this.tm_indexes_learned.map(id => this.tm_moves[id]));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  hideTM(tm: number) {\r\n    let tmIdx = this.tms.indexOf(tm);\r\n    if(tmIdx>=0 && this.tm_indexes_learned.includes(tmIdx)) {\r\n      this.tm_indexes_learned.splice(this.tm_indexes_learned.indexOf(tmIdx), 1)\r\n    }\r\n  }\r\n  revealTM(tm: number) {\r\n    let tmIdx = this.tms.indexOf(tm);\r\n    if(tmIdx >= 0 && !this.tm_indexes_learned.includes(tmIdx))\r\n      this.tm_indexes_learned.push(tmIdx);\r\n\r\n  }\r\n\r\n  checkTypeRevealed() {\r\n      return this.fully_revealed || this.type_revealed;\r\n  }\r\n  \r\n  checkStatsRevealed() {\r\n    return this.fully_revealed || this.stats_revealed;\r\n  } \r\n  \r\n  checkBSTRevealed() {\r\n    return this.fully_revealed || this.stats_revealed || this.bst_revealed;\r\n  }\r\n\r\n  checkAbilityRevealed() {\r\n    return this.fully_revealed || this.abilities_revealed;\r\n  }\r\n\r\n  sanitizedName() {\r\n    return this.name.replace(':','').replace('\\u2640', 'f').replace('\\u2642', 'm').toLowerCase();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-page',\r\n  templateUrl: './about-page.component.html',\r\n  styleUrls: ['./about-page.component.scss']\r\n})\r\nexport class AboutPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"about-content\">\r\n  <h1>\r\n    Welcome to the Randomizer Pokedex Tool!\r\n  </h1>\r\n  <hr>\r\n  <p>\r\n    This tool was created to help explore randomized Pokemon games. \r\n    It can be during play to help keep track of information, or after a playthrough to analyze all of the different pokemon.\r\n  </p>\r\n  <p>\r\n    I made this tool because my favorite part of Pokemon randomizers is exploring a brand new world filled with entirely \"new\" Pokemon.\r\n    Think of this as a sort of Pokedex you can carry with you on a journey, filling it in as you go. For example, the way I use the tool is I reveal types immediately upon encountering any Pokemon. After defeating a Pokemon at least once, I reveal its abilities and stats.\r\n    Everyone is free to come up with their own way to reveal information&mdash;I tried to make the tool flexible.\r\n  </p>\r\n  <hr>\r\n  <h2>\r\n    Usage\r\n  </h2>\r\n  <p>\r\n    This tool is configured to accept spoiler log files generated by the \r\n    <a href=\"https://github.com/Ajarmar/universal-pokemon-randomizer-zx/releases\" target=\"_blank\" rel=\"noopener noreferrer\">Universal Pokemon Randomizer ZX</a>.\r\n    To begin, click the upload button on the home page or on the pokedex page and select the spoiler log generated when you used the randomizer (be sure to generate the spoiler log when randomizing your game).\r\n  </p>\r\n  <p>\r\n    You can use the search bar in the \"Pokemon\" tab to select any pokemon to view. By default, the type, stat, ability and other information about each pokemon is hidden.\r\n    Any unknown information can be revealed by clicking on it. The page will remember what informtion you reveal about which pokemon. You also have the option to reveal all information about every pokemon by clicking the Spoil button at the top.\r\n  </p>\r\n  <p>\r\n    If you want to save your progress, you can click the save button, which will download a .pkdx file with all of the log's information and what you've revealed so far. \r\n    Next time you visit the page, you can just upload the .pkdx file and the site will load all of the progress that you had made.\r\n  </p>\r\n  <p>\r\n    This page is still under development, so not all information from the log file can be displayed yet. In no particular order, I would like to add the following features:\r\n  </p>\r\n  <ul>\r\n    <li>\r\n      Matchup information\r\n    </li>\r\n    <li>\r\n      A Team Builder/Analysis section\r\n    </li>\r\n    <li>\r\n      Location data (this might be difficult, so don't count on it)\r\n    </li>\r\n  </ul>\r\n  <hr>\r\n  <h2>\r\n    Credits\r\n  </h2>\r\n  <ul>\r\n    <li>\r\n      heraldere - Log/Save parser, Stat Graphs, Site Design, Structure, and Logic\r\n    </li>\r\n    <li>\r\n      pinkpoppey - Table View and Filter functionality, CSS Consultant\r\n    </li>\r\n  </ul>\r\n  <hr>\r\n  <h2>\r\n    Known Issues\r\n  </h2>\r\n  <ul>\r\n    <li>\r\n      Clicking BST at the top of the chart does not reveal the Pokemon's Base Stat Total. It should, but it's a bit troublesome to fix without impacting the way the chart looks.\r\n    </li>\r\n    <li>\r\n      Some of the images can have a slight jitter when loading in (especially in Type sections, and cases where a Pokemon has multiple Evolutions)\r\n    </li>\r\n    <li>\r\n      This page will not work with extremely old versions of the Randomizer. I will not fix this. It should be compatible with most recent versions of the Randomizer (4.0.0 and up)\r\n    </li>\r\n    <li>\r\n      Move Tutor and Breeding Moves are not currently displayed. These shouldn't impact a randomized playthrough too much, but I would like the information available somehow.\r\n    </li>\r\n    <li>\r\n      Log files for Gens 6 and 7 can take a second to parse. I would like to add visual feedback for when the page is loading data.\r\n    </li>\r\n  </ul>\r\n  <hr>\r\n  <h2>\r\n    THANKS FOR READING, AND GOOD LUCK PLAYING!\r\n  </h2>\r\n  <p>-heraldere</p>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PokedexPageComponent } from './pokedex-page/pokedex-page.component';\r\nimport { AboutPageComponent } from './about-page/about-page.component'\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'pokedex', component: PokedexPageComponent},\r\n  { path: 'about', component: AboutPageComponent},\r\n  { path: '', redirectTo:'/home', pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-pokedex';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { PokedexPageComponent } from './pokedex-page/pokedex-page.component';\r\nimport { TableViewComponent } from './pokedex-page/table-view/table-view.component';\r\nimport { CardsViewComponent } from './pokedex-page/cards-view/cards-view.component';\r\n\r\nimport { TableModule } from 'ngx-easy-table';\r\nimport { FilterDialogContentComponent } from './pokedex-page/table-view/filter-dialog-content/filter-dialog-content.component';\r\nimport { QueryBuilderModule } from \"angular2-query-builder\";\r\n\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { IndividualSummaryComponent } from './pokedex-page/cards-view/individual-summary/individual-summary.component';\r\nimport { TeamBuilderComponent } from './pokedex-page/cards-view/team-builder/team-builder.component';\r\nimport { VsSummaryComponent } from './pokedex-page/cards-view/vs-summary/vs-summary.component';\r\nimport { CardComponent } from './pokedex-page/cards-view/card/card.component';\r\nimport { AboutPageComponent } from './about-page/about-page.component';\r\nimport { WorldViewComponent } from './pokedex-page/cards-view/world-view/world-view.component';\r\n\r\n@NgModule({\r\n    exports: [\r\n        QueryBuilderModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n        HeaderComponent,\r\n        HomeComponent,\r\n        PokedexPageComponent,\r\n        TableViewComponent,\r\n        CardsViewComponent,\r\n        FilterDialogContentComponent,\r\n        IndividualSummaryComponent,\r\n        TeamBuilderComponent,\r\n        VsSummaryComponent,\r\n        CardComponent,\r\n        AboutPageComponent,\r\n        WorldViewComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TableModule,\r\n        MatDialogModule,\r\n        MatTabsModule,\r\n        BrowserAnimationsModule,\r\n        QueryBuilderModule,\r\n        MatSelectModule,\r\n        MatAutocompleteModule,\r\n        MatInputModule,\r\n        MatFormFieldModule,\r\n        MatMenuModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PokedexService } from '../pokedex.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  private dexService: PokedexService;\r\n\r\n  constructor(dexService: PokedexService) {\r\n    this.dexService = dexService;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h1 class=\"header-title\">Randomizer Pokedex</h1>\r\n    <div class=tabs>\r\n        <a class=\"tab\" routerLink=\"/home\" routerLinkActive=\"selected\"><i class=\"material-icons\">home</i>Home</a>\r\n        <a class=\"tab\" routerLink=\"/pokedex\" routerLinkActive=\"selected\"><img class=\"pokeball-icon\" src='assets/images/pokeball-icon.png' />Pokedex</a>\r\n        <a class=\"tab\" routerLink=\"/about\" routerLinkActive=\"selected\"><i id=\"help-icon\" class=\"material-icons\">help</i>About</a>\r\n        \r\n        <!-- <span>[{{getRoute()}}]</span> -->\r\n        <!-- <span class=\"header-text\">Created by Matthew Christensen and Jennifer Nelson • <a href=\"https://github.com/matthewlchristensen/randomizer-pokedex\"> GitHub</a></span> -->\r\n    </div>\r\n</div>","import { Component, ContentChild, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { FormControl } from '@angular/forms';\r\nimport { PokedexService } from '../pokedex.service';\r\nimport { Observable } from 'rxjs';\r\nimport {startWith} from 'rxjs/operators';\r\nimport {map} from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  dex: PokedexService;\r\n  \r\n  // TODO: This should be owned by the pokedex service\r\n  validFileUploaded = false;\r\n  @ViewChild('downloadButton')\r\n  downloadRef!: ElementRef;\r\n  router: Router;\r\n\r\n  constructor(dex: PokedexService, router: Router) { \r\n    this.dex = dex;\r\n    this.router = router;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    if(!this.dex.validDexUploaded) {\r\n      this.dex.loadDefaultData();\r\n    }\r\n  }\r\n\r\n  onFileSelected(e: Event) {\r\n    const target= e.target as HTMLInputElement;\r\n    const files = target?.files;\r\n    const file:File|null = files && files[0];\r\n\r\n    if (file) {\r\n      this.validFileUploaded=false;\r\n      this.dex.readSelectedFile(file);\r\n      this.router.navigate(['/', 'pokedex']);\r\n    }\r\n  }\r\n\r\n  vanillaDataButtonClicked() {\r\n    this.dex.loadDefaultData()\r\n      .then(() => this.router.navigate(['/', 'pokedex']));\r\n  }\r\n\r\n  sampleRandomDataButtonClicked() {\r\n    this.dex.loadSampleRandomData()\r\n      .then(() => this.router.navigate(['/', 'pokedex']));\r\n  }\r\n\r\n  detailButtonClicked() {\r\n    this.router.navigate(['/', 'about'])\r\n  }\r\n\r\n  save() {\r\n    let dexString = JSON.stringify(this.dex.pokedex);\r\n    this.downloadRef.nativeElement.href='data:text/plain;charset=utf-8,' + encodeURIComponent(dexString);\r\n  }\r\n\r\n\r\n  \r\n\r\n}\r\n","\r\n<!-- <input type=\"file\" class=\"file-input\" id=\"hh\" (change)=\"onFileSelected($event)\" #fileUpload> -->\r\n<!-- <label for=\"hh\">hi</label> -->\r\n<!-- <a #downloadButton *ngIf=\"validFileUploaded\" download=\"mons.pkdx\" >\r\n    <button (click)=\"save()\" title=\"Save notes and revealed status of Pokemon\">Save Dex</button>\r\n</a> -->\r\n<!-- <button *ngIf=\"validFileUploaded\" (click)=\"spoilButtonClicked()\" title=\"Fully Reveal the pokedex\">Spoil Me!</button> -->\r\n<!-- <individual-card *ngIf=\"validFileUploaded\"></individual-card> -->\r\n<div id=\"home-background\">\r\n    <h2>Howdy!</h2> \r\n    <div>\r\n        <p>\r\n            This is a tool created to help out with randomized Pokemon adventures/challenges.\r\n        </p>\r\n        <p>\r\n            Part of the fun of randomized runs is exploring a world filled with \"brand-new\" Pokemon.\r\n            This \"Pokédex\" can help you keep notes on all of your discoveries, including stats, typing, and abilities (with plans for more).\r\n        </p>\r\n        <p>\r\n            You can \"spoil\" as much or as little as you want, so you can have the experience most suited to your style. Or, if you just want to see what Pokemon were generated, this is a great way to do it without having to sift through a giant log file.\r\n        </p>\r\n    </div>\r\n    <div id=\"home-box\">\r\n        <div id=\"button-stack\">\r\n            <h2 style=\"margin-block-start: 5px;\">Get Started</h2>\r\n            <input class=\"home-file-input\" id=\"home-file-input1\" type=\"file\" (change)=\"onFileSelected($event)\" accept=\".log\">\r\n            <label class=\"home-button\" for=\"home-file-input1\">Upload Randomized Log File</label>\r\n            <input class=\"home-file-input\" id=\"home-file-input2\" type=\"file\" (change)=\"onFileSelected($event)\" accept=\".pkdx\">\r\n            <label class=\"home-button\" for=\"home-file-input2\">Upload Saved Pokedex File</label>\r\n            <button class=\"home-button\" (click)=\"vanillaDataButtonClicked()\">Explore With Vanilla Game Data</button>\r\n            <button class=\"home-button\" (click)=\"sampleRandomDataButtonClicked()\">Explore With Sample Random Data</button>\r\n            <button class=\"home-button\" (click)=\"detailButtonClicked()\">More Details and Credits</button>\r\n            <a style=\"width:100%;\" href=\"https://github.com/Ajarmar/universal-pokemon-randomizer-zx/releases\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <button class=\"home-button\">Check Out The Universal Pokemon Randomizer</button>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'small-card',\r\n  templateUrl: './card.component.html',\r\n  styleUrls: ['./card.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card-segment\">\r\n\r\n</div>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { PokedexService } from 'src/app/pokedex.service';\r\n\r\n@Component({\r\n  selector: 'app-cards-view',\r\n  templateUrl: './cards-view.component.html',\r\n  styleUrls: ['./cards-view.component.scss']\r\n})\r\nexport class CardsViewComponent implements OnInit {\r\n\r\n  public showA: boolean = false;\r\n  public showB: boolean = true;\r\n  public showC: boolean = false;\r\n  public selectedTab: string = 'summaryTab';\r\n  @ViewChild('downloadButton')\r\n  downloadRef!: ElementRef;\r\n  dex: PokedexService;\r\n\r\n  constructor(dex : PokedexService) { \r\n    this.dex = dex;\r\n  }\r\n\r\n  onFileSelected(e: Event) {\r\n    const target= e.target as HTMLInputElement;\r\n    const files = target?.files;\r\n    const file:File|null = files && files[0];\r\n\r\n    if (file) {\r\n      this.dex.readSelectedFile(file);\r\n    }\r\n\r\n  }\r\n\r\n  //Kinda cheeky, but the anchor element's click event will occur after the button's so the download begins immediately after we set the href\r\n  // Is this a race? beats me :)\r\n  save() {\r\n    let dexString = JSON.stringify(\r\n      {\r\n        pokedex: this.dex.pokedex,\r\n        abilities: this.dex.allAbilitiesRevealed,\r\n        bsts: this.dex.allBSTRevealed,\r\n        types: this.dex.allTypesRevealed,\r\n        full: this.dex.isFullyRevealed,\r\n        moves: this.dex.allMovesRevealed,\r\n        tms: this.dex.revealedTMs,\r\n        tmIds: this.dex.tmIds,\r\n        hmIds: this.dex.hmIds,\r\n        tmMoves: this.dex.tmMoves,\r\n        hmMoves: this.dex.hmMoves,\r\n        evolutions: this.dex.allEvolutionsRevealed,\r\n        starters: this.dex.starters,\r\n      });\r\n    this.downloadRef.nativeElement.href='data:text/plain;charset=utf-8,' + encodeURIComponent(dexString);\r\n  }\r\n\r\n  spoil() {\r\n    if(this.dex.isFullyRevealed) {\r\n      this.dex.hideAll();\r\n    } else {\r\n      this.dex.revealAll();\r\n    }\r\n  }\r\n\r\n  spoilBSTs() {\r\n    if(this.dex.allBSTRevealed) {\r\n      this.dex.hideBSTs();\r\n    } else {\r\n      this.dex.revealBSTs();\r\n    }\r\n  }\r\n\r\n  spoilTypes() {\r\n    if(this.dex.allTypesRevealed) {\r\n      this.dex.hideTypes();\r\n    } else {\r\n      this.dex.revealTypes();\r\n    }\r\n  }\r\n\r\n  spoilAbilities() {\r\n    if(this.dex.allAbilitiesRevealed) {\r\n      this.dex.hideAbilities();\r\n    } else {\r\n      this.dex.revealAbilities();\r\n    }\r\n  }\r\n\r\n  //TODO: spoilEvolutions\r\n  spoilEvolutions() {\r\n    if(this.dex.allEvolutionsRevealed) {\r\n      this.dex.hideEvolutions();\r\n    } else {\r\n      this.dex.revealEvolutions();\r\n    }\r\n  }\r\n\r\n  spoilMoves() {\r\n    if(this.dex.allMovesRevealed)\r\n      this.dex.hideMoves();\r\n    else\r\n      this.dex.revealMoves();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div class=tabs>\r\n    <a class=\"tab\" [class.selected]=\"selectedTab==='summaryTab'\" (click)=\"selectedTab='summaryTab'\"><i class=\"material-icons\">wysiwyg</i>Pokemon</a>\r\n    <a class=\"tab\" [class.selected]=\"selectedTab==='worldTab'\" (click)=\"selectedTab='worldTab'\"><i class=\"material-icons\">public</i>World</a>\r\n    <!-- <a class=\"disabled tab\" [class.selected]=\"selectedTab==='teamTab'\"  (click)=\"selectedTab='teamTab'\"><i class=\"material-icons\">view_module</i>Team Builder</a>\r\n    <a class=\"disabled tab\" [class.selected]=\"selectedTab==='vsTab'\" (click)=\"selectedTab='vsTab'\"><i class=\"material-icons\">compare_arrows</i>Matchup</a> -->\r\n    <span></span>\r\n    <input class=\"tab-file-input\" type=\"file\"  id=\"dex-file-input\" (change)=\"onFileSelected($event)\" #fileUpload accept=\".log,.pkdx\">\r\n    <label class=\"tab-button\" for=\"dex-file-input\" tabindex=\"0\">Upload</label>\r\n    <a #downloadButton *ngIf=\"dex.validDexUploaded\" download=\"mons.pkdx\" >\r\n        <button (click)=\"save()\" class=\"tab-button\" id=\"saveButton\" title=\"Save notes and revealed status of Pokemon\">Save</button>\r\n    </a>\r\n    <button class=\"tab-button\" id=\"spoil-button\" *ngIf=\"dex.validDexUploaded\" (click)=\"spoil()\">{{this.dex.isFullyRevealed?\"Unspoil\":\"Spoil\"}}</button>\r\n\r\n    <button mat-button [matMenuTriggerFor]=\"powerSpoilMenu\" *ngIf=\"dex.validDexUploaded\"  class=\"tab-button\" id=\"power-options\">\r\n        <i class=\"material-icons\">\r\n        arrow_drop_down\r\n        </i>\r\n    </button>\r\n    <mat-menu #powerSpoilMenu=\"matMenu\" backdropClass=\"spoil-option\" xPosition=\"before\">\r\n        <button mat-menu-item (click)=\"spoilTypes()\">{{this.dex.allTypesRevealed?\"Unspoil Types\":\"Spoil Types\"}}</button>\r\n        <button mat-menu-item (click)=\"spoilBSTs()\">{{this.dex.allBSTRevealed?\"Unspoil BSTs\":\"Spoil BSTs\"}}</button>\r\n        <button mat-menu-item (click)=\"spoilAbilities()\">{{this.dex.allAbilitiesRevealed?\"Unspoil Abilities\":\"Spoil Abilities\"}}</button>\r\n        <button mat-menu-item (click)=\"spoilEvolutions()\">{{this.dex.allEvolutionsRevealed?\"Unspoil Evolutions\":\"Spoil Evolutions\"}}</button>\r\n        <button mat-menu-item (click)=\"spoilMoves()\">{{this.dex.allMovesRevealed?\"Unspoil Moves\":\"Spoil Moves\"}}</button>\r\n    </mat-menu>\r\n    <!-- <label for=\"power-options\">hellosir</label>\r\n    <select class=\"tab-button\" id=\"power-options\" title=\"Additional Spoil Options\">\r\n    <option >\r\n      <span class=\"spoil-option\">hello</span>\r\n    </option>\r\n    <option class=\"spoil-option\">\r\n      hello2\r\n    </option>\r\n\r\n  </select> -->\r\n</div>\r\n<div *ngIf=\"selectedTab==='summaryTab'\">\r\n    <individual-card *ngIf=\"dex.validDexUploaded\"></individual-card>\r\n</div>\r\n<div *ngIf=\"selectedTab==='worldTab'\">\r\n    <world-view *ngIf=\"dex.validDexUploaded\"></world-view>\r\n</div>\r\n<div *ngIf=\"selectedTab==='teamTab'\">\r\n    <team-builder></team-builder>\r\n</div>\r\n<div *ngIf=\"selectedTab==='vsTab'\">\r\n    <vs-summary></vs-summary>\r\n</div>\r\n","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { PokedexService } from 'src/app/pokedex.service';\r\nimport { Pokemon } from \"src/app/Pokemon\";\r\nimport {startWith} from 'rxjs/operators';\r\nimport {map} from 'rxjs/operators';\r\nimport { MatAutocomplete, MatAutocompleteModule, MatAutocompleteSelectedEvent , MatAutocompleteTrigger} from '@angular/material/autocomplete';\r\nimport {Chart, registerables} from 'chart.js'\r\nimport { MatInput } from '@angular/material/input';\r\nChart.register(...registerables);\r\nChart.defaults.color = \"#cfcfcf\";\r\n\r\n@Component({\r\n  selector: 'individual-card',\r\n  templateUrl: './individual-summary.component.html',\r\n  styleUrls: ['./individual-summary.component.scss']\r\n})\r\nexport class IndividualSummaryComponent implements OnInit, AfterViewInit{\r\n\r\n  @ViewChild('statChart')\r\n  chartRef!: ElementRef;\r\n  dex: PokedexService;\r\n  ctrl: FormControl = new FormControl();\r\n  pokes_filtered_by_text: Observable<string[]>;\r\n  current_mon: Pokemon | undefined;\r\n  mon_selected = false;\r\n  chart!: Chart;\r\n  @ViewChild('mm')\r\n  maut!: MatAutocomplete;\r\n  @ViewChild('searchInput')\r\n  search_box!: MatInput;\r\n  tms_shown = false;\r\n  \r\n\r\n\r\n  constructor(dex: PokedexService, private cdr: ChangeDetectorRef) {\r\n    this.dex = dex;\r\n    this.pokes_filtered_by_text = this.ctrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(search_text => this.searchMons(search_text))\r\n    )\r\n  }\r\n   \r\n  searchMons(search_text: string): string[] {\r\n    return this.dex.pokedex.map(mon => mon.name).filter(name => name.toLowerCase().indexOf(search_text.toLowerCase()) !== -1)\r\n  }\r\n\r\n  toggleTypeRevealButton() {\r\n    if(this.current_mon) {\r\n      this.current_mon.type_revealed = !this.current_mon.type_revealed;\r\n      this.dex.individualChanges.next(this.current_mon)\r\n    }\r\n  }\r\n\r\n  toggleStatRevealButton() {\r\n    if(this.current_mon) {\r\n      this.current_mon.stats_revealed = !this.current_mon.stats_revealed;\r\n      this.dex.individualChanges.next(this.current_mon);\r\n      // this.chart.data.datasets[0].data = this.current_mon.getStatsIfRevealed();\r\n      // this.chart.options.plugins!.title!.text = \"BST : \" + (this.current_mon && this.current_mon.stats_revealed? this.current_mon.bst(): \"???\");\r\n      // this.chart.update();\r\n    }\r\n  }\r\n\r\n  toggleAbilityRevealButton() {\r\n    if(this.current_mon) {\r\n      this.current_mon.abilities_revealed = !this.current_mon.abilities_revealed;\r\n      this.dex.individualChanges.next(this.current_mon)\r\n    }\r\n  }\r\n\r\n\r\n  revealMovesToIndex(i: number) {\r\n    if(this.current_mon)\r\n      this.current_mon.learned_moves_revealed_idx=i+1;\r\n  }\r\n\r\n  \r\n  revealTMAtIndex(i: number) {\r\n    if(this.current_mon) {\r\n      let tm = this.current_mon.tms[i]\r\n      if(!this.dex.revealedTMs.includes(tm)) {\r\n        // this.dex.revealedTMs.push(this.current_mon.tms[i])\r\n        this.dex.revealTMForAll(tm);\r\n      }\r\n      else {\r\n        // this.dex\r\n        this.dex.hideTMForAll(tm);\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleTMs() {\r\n    this.tms_shown = !this.tms_shown;\r\n  }\r\n\r\n  sanitizePokemonName(name: String): String {\r\n    return name.replace(':','').replace('\\u2640', 'f').replace('\\u2642', 'm').toLowerCase();\r\n  }\r\n\r\n  getFilteredForms(mon: Pokemon): string[] {\r\n    return mon.forms.filter((_, i) => i != mon.form_num);\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  // \"https://www.serebii.net/swordshield/pokemon/289.png\"\r\n  // \"https://www.serebii.net/games/type/poison.gif\"\r\n\r\n  ngAfterViewInit(): void {\r\n    this.chart = new Chart(this.chartRef.nativeElement, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: [\"HP\", \"Attack\", \"Defense\", \"Sp. Attack\", \"Sp. Defense\", \"Speed\"],\r\n        datasets: [{\r\n          data: this.current_mon? this.current_mon.getStatsIfRevealed() :[0,0,0,0,0,0],\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(255, 159, 64, 0.8)',\r\n            'rgba(255, 205, 86, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(75, 192, 92, 0.8)',\r\n            // '#ffbde0'\r\n            'rgba(153, 102, 255, 0.8)'\r\n          ],\r\n          borderColor: [\r\n            'rgb(255, 99, 132)',\r\n            'rgb(255, 159, 64)',\r\n            'rgb(255, 205, 86)',\r\n            'rgb(75, 192, 192)',\r\n            'rgb(54, 162, 235)',\r\n            'rgb(153, 102, 255)'\r\n          ],\r\n          borderWidth: 1,\r\n          maxBarThickness: 20,\r\n          \r\n        }]\r\n        \r\n      },\r\n      options: {\r\n        color: '#cfcfcf',\r\n        indexAxis: 'y',\r\n        scales: {\r\n          x: {\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 255,\r\n            grid:{\r\n              borderColor:'#cfcfcf',\r\n              color: '#cfcfcf',\r\n            },            \r\n          },\r\n          y: {\r\n            grid: {\r\n              display: false,\r\n            }\r\n          }\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          title: {\r\n            font: {\r\n              size: 20\r\n            },\r\n            display: true,\r\n            text: \"BST : \" + (this.current_mon && this.current_mon.stats_revealed? this.current_mon.bst(): \"???\")\r\n          }\r\n        }\r\n      },\r\n    });\r\n    this.maut.optionSelected\r\n      .pipe(\r\n        map(\r\n          ev => {\r\n            let selected = ev.option.value as string;\r\n            return this.stringToPokemon(selected);\r\n          }\r\n        )\r\n      )\r\n      .subscribe(\r\n        mon=>this.updateCurrentMon(mon)\r\n      );\r\n\r\n\r\n\r\n    this.dex.individualChanges.subscribe(\r\n      mon => {\r\n        // console.log(\"ichange\");\r\n        if(this.current_mon && this.current_mon.name.toLowerCase() == mon.name.toLowerCase()) {\r\n          this.refreshChart();\r\n        }\r\n      }\r\n    );\r\n\r\n    this.dex.dexChanges.subscribe(\r\n      () => {\r\n        // console.log(\"wechange\");\r\n        this.ctrl.setValue('');\r\n        if(this.current_mon) {\r\n\r\n          this.refreshChart();\r\n        }\r\n      }\r\n    )\r\n\r\n    this.dex.monSelection.subscribe(\r\n      n =>  {\r\n        this.selectPokemonFromName(n);\r\n        this.cdr.detectChanges();\r\n      }\r\n    )\r\n\r\n    // if(this.dex.validDexUploaded && this.dex.pokedex.length > 0)\r\n    //   this.dex.selectPokemon(this.dex.pokedex[0].name)\r\n    // setTimeout(() => {\r\n    // })\r\n  }\r\n\r\n  \r\n  evoClicked(evo: string, direction: string, index: number) {\r\n    if(this.current_mon){\r\n      if(evo==\"unknown\") {\r\n        if(direction=='next'){\r\n          this.current_mon.next_evos_revealed.push(index);\r\n          let next_mon = this.stringToPokemon(this.current_mon.next_evos[index])\r\n          if(next_mon) {\r\n            let back_index = next_mon.prev_evos.indexOf(this.current_mon.name)\r\n            next_mon.prev_evos_revealed.push(back_index)\r\n          }\r\n        } else if (direction=='prev') {\r\n          this.current_mon.prev_evos_revealed.push(index);\r\n          let next_mon = this.stringToPokemon(this.current_mon.prev_evos[index])\r\n          if(next_mon) {\r\n            let back_index = next_mon.next_evos.indexOf(this.current_mon.name)\r\n            next_mon.next_evos_revealed.push(back_index)\r\n          }\r\n        }\r\n        this.refreshChart();\r\n      }\r\n      else\r\n        this.selectPokemonFromName(evo)\r\n    }\r\n  }\r\n\r\n  selectPokemonFromName(selected: string) {\r\n    let mon = this.stringToPokemon(selected)\r\n    this.updateCurrentMon(mon)\r\n  }\r\n\r\n  private stringToPokemon(selected: string): Pokemon | undefined {\r\n    return this.dex.pokedex.find(mon => mon.name.toLowerCase() == selected.toLowerCase());\r\n  }\r\n\r\n  private updateCurrentMon(mon: Pokemon|undefined) {\r\n    if(mon) {\r\n          this.mon_selected = true;\r\n          this.current_mon = mon;\r\n          // Also maybe split this into a method as well\r\n          this.refreshChart();\r\n          //\r\n          this.search_box.value='';\r\n          this.ctrl.setValue('');\r\n        }\r\n  }\r\n\r\n  private refreshChart() {\r\n    if(this.current_mon) {\r\n      this.chart.data.datasets[0].data = this.current_mon.getStatsIfRevealed();\r\n      this.chart.data.labels = this.current_mon.special\r\n        ?[\"HP\", \"Attack\", \"Defense\", \"Special\", \"Speed\"]\r\n        :[\"HP\", \"Attack\", \"Defense\", \"Sp. Attack\", \"Sp. Defense\", \"Speed\"]\r\n      this.chart.options.plugins!.title!.text = \"BST : \" + (this.current_mon && (this.current_mon.bst_revealed || this.current_mon.stats_revealed || this.current_mon.fully_revealed)? this.current_mon.bst() : \"???\");\r\n      this.chart.update();\r\n    }\r\n  }\r\n}\r\n","<div id=\"main-card\" class=\"wireframe\" *ngIf=\"dex.validDexUploaded\">\r\n\r\n\r\n    \r\n    <div id=\"profile-col\" class=\"wireframe\">\r\n        <div id=\"name-slot\" class=\"wireframe\">\r\n            <div class=\"element-container\" *ngIf=\"mon_selected\">\r\n                {{current_mon?current_mon.name:\"N/A\"}}\r\n            </div>\r\n        </div>\r\n        <div id=\"sprite-slot\" class=\"wireframe\">\r\n            <div class=\"sprite-background\">\r\n                <img *ngIf=\"mon_selected\" style=\"height: 100%;\"  src=\"assets/images/sprites/{{current_mon!.sanitizedName()}}.png\">\r\n            </div>\r\n        </div>\r\n        <div id=\"type-slot\" class=\"wireframe\">\r\n            <div class=\"element-container\">\r\n                <div id=\"type-container\" *ngIf=\"mon_selected\" style=\"cursor: pointer;\" (click)=\"toggleTypeRevealButton()\">\r\n                    <img class=\"type-box\"  src=\"https://serebii.net/pokedex-bw/type/{{current_mon!.get_type1()}}.gif\">\r\n                    <img class=\"type-box\" *ngIf=\"(current_mon!.get_type2() != 'none')\" src=\"https://serebii.net/pokedex-bw/type/{{current_mon!.get_type2()}}.gif\">\r\n                </div>\r\n                <div id=\"type-container\" *ngIf=\"!mon_selected\">\r\n                    <img class=\"type-box\" src=\"https://serebii.net/pokedex-bw/type/curse.gif\" alt=\"\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"ability-slot\" class=\"wireframe\">\r\n            <div id=\"ability-container\" class=\"element-container\" >\r\n                <b>Abilities</b>\r\n                <hr>\r\n                <div *ngIf=\"mon_selected\" (click)=\"toggleAbilityRevealButton()\" style=\"cursor: pointer;\">{{current_mon!.getAbilitiesIfRevealed().join(' | ')}}</div>\r\n                <div *ngIf=\"!mon_selected\">--</div>\r\n            </div>\r\n        </div>\r\n\r\n        <div id=\"search2-slot\" class=\"wireframe\">\r\n            <form>\r\n                <mat-form-field class=\"search-box\" >\r\n                    <input #searchInput type=\"text\" placeholder=\"Search For Pokemon\" aria-label=\"Number\" matInput [formControl]=\"ctrl\"\r\n                        [matAutocomplete]=\"mm\">\r\n                    <mat-autocomplete autoActiveFirstOption #mm=\"matAutocomplete\" >\r\n                        <mat-option *ngFor=\"let poke of pokes_filtered_by_text | async\" [value]=\"poke\">\r\n                            {{ poke }}\r\n                        </mat-option>\r\n                    </mat-autocomplete>\r\n                </mat-form-field>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"stat-col\" class=\"wireframe\">\r\n        <div id=\"chart-slot\" class=\"wireframe\">\r\n            <canvas id=\"stat-chart\" #statChart width=\"200px\" height=\"100px\">\r\n\r\n            </canvas>            \r\n            <div class=\"reveal-button\" *ngIf=\"mon_selected\">\r\n                <button id=\"stat-reveal\" [disabled]=\"dex.isFullyRevealed\" (click)=\"toggleStatRevealButton()\">{{current_mon!.stats_revealed ? \"Hide Stats\" : \"Show Stats\"}}</button>\r\n            </div>\r\n            <div class=\"reveal-button\" *ngIf=\"!mon_selected\">\r\n                <button id=\"stat-reveal\" disabled>Show Stats</button>\r\n            </div>\r\n        </div>\r\n        <div id=\"evolutions-slot\" class=\"wireframe\">\r\n            <div class=\"evolution-chart\" *ngIf=\"mon_selected && current_mon!.prev_evos.length > 0\">\r\n                 Evolves From\r\n                 <hr>\r\n                 <div class=\"evo-list\">\r\n                    <img *ngFor=\"let evo of current_mon!.get_evos_to(); let i = index;\" style=\"height: 100%; cursor: pointer;\" (click)=\"evoClicked(evo, 'prev', i)\" src=\"assets/images/sprites/{{sanitizePokemonName(evo)}}.png\"/>\r\n                 </div>\r\n            </div>\r\n            <div  class=\"evolution-chart\" *ngIf=\"mon_selected && current_mon!.next_evos.length > 0\">\r\n                 Evolves To\r\n                 <hr>\r\n                 <div class=\"evo-list\">\r\n                    <img *ngFor=\"let evo of current_mon!.get_evos_from(); let i = index;\" style=\"height: 100%; cursor: pointer;\" (click)=\"evoClicked(evo, 'next', i)\" src=\"assets/images/sprites/{{sanitizePokemonName(evo)}}.png\"/>\r\n                 </div>\r\n            </div>\r\n            <div  class=\"evolution-chart\" *ngIf=\"mon_selected && current_mon!.forms.length > 0\">\r\n                 Alt Forms\r\n                 <hr>\r\n                 <div class=\"evo-list\">\r\n                    <img *ngFor=\"let form of getFilteredForms(current_mon!); let i = index;\" style=\"height: 100%; cursor: pointer;\" (click)=\"evoClicked(form, 'form', i)\" src=\"assets/images/sprites/{{sanitizePokemonName(form)}}.png\"/>\r\n                 </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"notes-slot\" class=\"wireframe\">\r\n            <div id=\"notes-parent\" class=\"element-container\" *ngIf=\"mon_selected\">\r\n                <div style=\"color: gray;\">Notes:</div>\r\n                <textarea rows=6  class=\"notes-section\" *ngIf=\"mon_selected\" [(ngModel)]=\"current_mon!.notes\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"moves-col\" class=\"wireframe\">\r\n        <div id=\"move-table\" *ngIf=\"mon_selected\" class=\"element-container\">\r\n            Moves\r\n            <hr style=\"flex-grow: 1; width: 100%;\">\r\n            <div id=\"LvlTMSelector\">\r\n                <div style=\"margin-right: 10px;\" [class.tabSelected]=\"!tms_shown\" [class.tabUnselected]=\"tms_shown\" (click)=\"tms_shown && toggleTMs()\">Level Up</div>\r\n                <div [class.tabSelected]=\"tms_shown\" [class.tabUnselected]=\"!tms_shown\" (click)=\"!tms_shown && toggleTMs()\">TMs</div>\r\n            </div>\r\n            <div class=\"move-list\">\r\n                <table style=\"border-collapse: collapse;\" *ngIf=\"!this.tms_shown\">\r\n                    <tr *ngFor=\"let level of current_mon!.learn_levels; let i = index\" (click)=\"revealMovesToIndex(i)\">\r\n                        <td class=\"left-table\">{{level}}</td>\r\n                        <td class=\"right-table\">{{current_mon!.get_revealed_learned_move_pairs()[i].move}}</td>\r\n                    </tr>\r\n                </table>\r\n                <table style=\"border-collapse: collapse;\" *ngIf=\"this.tms_shown\">\r\n                    <tr *ngFor=\"let tm of current_mon!.tms; let i = index\" (click)=\"revealTMAtIndex(i)\">\r\n                        <td class=\"left-table\">{{tm}}</td>\r\n                        <td class=\"right-table\">{{dex.revealedTMs.includes(tm) || dex.isFullyRevealed  ?current_mon!.tm_moves[i]:'???'}}</td>\r\n                    </tr>\r\n                </table>\r\n                <div class=\"default-tm-message\" *ngIf=\"(current_mon!.tms.length == 0)\">\r\n                    TM Data Not Found\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div id=\"background\">\r\n\r\n\r\n    <div style=\"overflow: auto\" >\r\n        <div class=\"left sprite\">\r\n            <div class=\"sprite-background\">\r\n                <img *ngIf=\"mon_selected\" style=\"width: 100%;\" src=\"https://www.serebii.net/swordshield/pokemon/{{current_mon!.uid}}.png\">\r\n            </div>\r\n            <div id=\"type-container\" *ngIf=\"mon_selected\">\r\n\r\n            </div>\r\n            <div class=\"reveal-button\" *ngIf=\"mon_selected\">\r\n                <button id=\"type-reveal\" [disabled]=\"dex.isFullyRevealed\" (click)=\"toggleTypeRevealButton()\">{{current_mon!.type_revealed ? \"Hide Type\" : \"Show Type\"}}</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"right stat-graph\">\r\n        </div>\r\n    </div>\r\n    <div id=\"ability-parent\" class=\"left\">\r\n        <div class=\"reveal-button\" *ngIf=\"mon_selected\">\r\n            <button id=\"ability-reveal\" [disabled]=\"dex.isFullyRevealed\" (click)=\"toggleAbilityRevealButton()\">{{current_mon!.abilities_revealed ? \"Hide Abilities\" : \"Show Abilities\"}}</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"right row\">\r\n\r\n        <div class=\"column\"></div>\r\n    </div>\r\n</div> -->\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'team-builder',\r\n  templateUrl: './team-builder.component.html',\r\n  styleUrls: ['./team-builder.component.scss']\r\n})\r\nexport class TeamBuilderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"tb-container\">\r\n    <div id=\"team-table\">\r\n        Table goes here\r\n    </div>\r\n    <div id=\"team-summary\">\r\n        Summary goes here\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'vs-summary',\r\n  templateUrl: './vs-summary.component.html',\r\n  styleUrls: ['./vs-summary.component.scss']\r\n})\r\nexport class VsSummaryComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>vs-summary works!</p>\r\n","// bst-histogram.config.ts\r\nimport { ChartConfiguration } from 'chart.js';\r\nimport { Pokemon } from 'src/app/Pokemon';\r\n\r\nconst BIN_MIN = 200;\r\nconst BIN_SIZE = 20;\r\nconst BIN_MAX = 900;\r\nconst BIN_COUNT = Math.ceil((BIN_MAX - BIN_MIN)/BIN_SIZE) + 1;\r\n\r\nexport const bstHistogramConfig: ChartConfiguration<'bar'> = {\r\n  type: 'bar',\r\n  data: {\r\n    labels: Array.from({ length: BIN_COUNT }, (_, i) => {\r\n        const min = BIN_MIN + i * BIN_SIZE;\r\n        const max = min + BIN_SIZE - 1;\r\n        return i === BIN_COUNT - 1\r\n        ? `≥${min}`\r\n        : `${min}–${max}`;\r\n        }),\r\n    datasets: [{\r\n      label: 'Count of Pokémon by BST',\r\n      data: [], // You can fill this dynamically\r\n      backgroundColor: '#82B1FF',\r\n      borderColor: '#448AFF',\r\n      borderWidth: 1\r\n    }]\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animations: {\r\n        x: { duration: 0},\r\n    },\r\n    plugins: {\r\n      legend: { display: false },\r\n      title: {\r\n        display: true,\r\n        text: 'Distribution of Base Stat Totals',\r\n        font: { size: 18 },\r\n        color: '#cfcfcf',\r\n      }\r\n    },\r\n    scales: {\r\n      x: { title: { display: true, text: 'BST Range' } },\r\n      y: { \r\n        beginAtZero: true, \r\n        title: { display: true, text: 'Number of Pokémon' },\r\n        ticks: { color: '#cfcfcf' }, \r\n        grid: { color: 'rgba(255,255,255,0.1)' }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport function binBSTs(pokemonList: Pokemon[]) {\r\n    return pokemonList.reduce((bins, { stat_total }) => {\r\n        if(stat_total >= BIN_MIN && stat_total < BIN_MAX) {\r\n            const index = Math.floor((stat_total - BIN_MIN) / BIN_SIZE);\r\n            bins[index]++;\r\n        } else if (stat_total>=BIN_MAX) {\r\n            bins[bins.length - 1]++\r\n        }\r\n      return bins;\r\n    }, Array(BIN_COUNT).fill(0));\r\n  }\r\n","import { ChartConfiguration } from 'chart.js'; \r\nimport { Pokemon } from 'src/app/Pokemon';\r\n\r\n// Private binning constants\r\nconst BIN_WIDTH = 10;    // each bin spans 10 stat points\r\nconst BIN_MIN = 0;      // lower bound for histogram range\r\nconst BIN_MAX = 250;     // upper bound for histogram range\r\nconst BIN_COUNT = Math.ceil((BIN_MAX - BIN_MIN) / BIN_WIDTH) + 1;\r\n\r\n// Generate bin labels like \"50–59\", \"60–69\", ..., \"140–149\"\r\nfunction generateStatLabels(): string[] {\r\n  return Array.from({ length: BIN_COUNT }, (_, i) => {\r\n    const lower = BIN_MIN + i * BIN_WIDTH;\r\n    const upper = lower + BIN_WIDTH - 1;\r\n    return i === BIN_COUNT - 1\r\n      ? `≥${lower}`\r\n      : `${lower}–${upper}`;\r\n  });\r\n}\r\n\r\n// 📈 Chart.js configuration template\r\nexport const statValueHistogramConfig: ChartConfiguration<'bar'> = {\r\n  type: 'bar',\r\n  data: {\r\n    labels: generateStatLabels(),\r\n    datasets: [{\r\n      label: 'Stat Value Distribution',\r\n      data: new Array(generateStatLabels().length).fill(0),\r\n      backgroundColor: '#81D4FA',\r\n      borderColor: '#0288D1',\r\n      borderWidth: 1\r\n    }]\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animations: {\r\n        x: { duration: 0 },\r\n    },\r\n    plugins: {\r\n      legend: { display: false },\r\n      title: {\r\n        display: true,\r\n        text: 'Histogram of Specific Stat Values',\r\n        font: { size: 18 },\r\n        color: '#cfcfcf'\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Stat Value Range',\r\n          color: '#cfcfcf'\r\n        },\r\n        ticks: { color: '#cfcfcf' },\r\n        grid: { \r\n            color: 'rgba(255,255,255,0.1)',\r\n            display: false, \r\n        }\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Pokémon',\r\n          color: '#cfcfcf'\r\n        },\r\n        ticks: { color: '#cfcfcf' },\r\n        grid: { color: 'rgba(255,255,255,0.1)' }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Extract stat value from Pokémon by stat key\r\nexport function getStatValue(p: Pokemon, stat: string): number {      \r\n  switch (stat) {\r\n    case \"hp\":\r\n      return p.hp;\r\n    case \"attack\":\r\n      return p.attack;\r\n    case \"defense\":\r\n      return p.defense;\r\n    case \"sp_attack\":\r\n      return p.sp_attack ? p.sp_attack : 0;\r\n    case \"sp_defense\":\r\n      return p.sp_defense ? p.sp_defense : 0;\r\n    case \"special\":\r\n      return p.special ? p.special : 0;\r\n    case \"speed\":\r\n      return p.speed;\r\n    case \"stat_total\":\r\n      return p.bst();\r\n    default:\r\n      return 0;\r\n  }\r\n}\r\n\r\n// Bin Pokémon by a given stat key (e.g. 'attack', 'defense', 'speed')\r\nexport function binStatValues(pokemonList: Pokemon[], stat: string): number[] {\r\n  return pokemonList.reduce((bins, p) => {\r\n    const value = getStatValue(p, stat);\r\n    if (value >= BIN_MIN && value < BIN_MAX) {\r\n      const index = Math.floor((value - BIN_MIN) / BIN_WIDTH);\r\n      bins[index]++;\r\n    } else if (value >= BIN_MAX) {\r\n        bins[bins.length - 1]++\r\n    }\r\n    return bins;\r\n  }, Array(BIN_COUNT).fill(0));\r\n}","// stat-ratio-histogram.config.ts\r\nimport { ChartConfiguration } from 'chart.js';\r\nimport { Pokemon } from 'src/app/Pokemon'; // adjust to match your project\r\n\r\n// 🔐 Private constants\r\nconst BIN_SIZE = 0.25;  // bucket width for ratio range\r\nconst BIN_COUNT = 30;    // e.g. 1–2, 2–3, ..., 8+\r\nconst BIN_MIN = 1.0;    // lowest ratio tracked\r\n\r\n// 🔢 Generate labels like \"1.00–1.24\", \"1.25–1.49\", ..., \"≥3.75\"\r\nfunction generateRatioLabels(): string[] {\r\n  return Array.from({ length: BIN_COUNT }, (_, i) => {\r\n    const lower = BIN_MIN + i * BIN_SIZE;\r\n    const upper = lower + BIN_SIZE - 0.01;\r\n    return i === BIN_COUNT - 1\r\n      ? `≥${lower.toFixed(2)}`\r\n      : `${lower.toFixed(2)}–${upper.toFixed(2)}`;\r\n  });\r\n}\r\n\r\n// 📈 Chart.js configuration template\r\nexport const statRatioHistogramConfig: ChartConfiguration<'bar'> = {\r\n  type: 'bar',\r\n  data: {\r\n    labels: generateRatioLabels(),\r\n    datasets: [{\r\n      label: 'Ratio of Highest to Lowest Stat',\r\n      data: [], // to be filled dynamically\r\n      backgroundColor: '#FFAB91',\r\n      borderColor: '#FF7043',\r\n      borderWidth: 1\r\n    }]\r\n  },\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Histogram of Stat Ratio (Max / Min)',\r\n        font: { size: 18 },\r\n        color: '#cfcfcf'\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'Ratio Range',\r\n          color: '#cfcfcf'\r\n        },\r\n        ticks: { color: '#cfcfcf' },        \r\n        grid: { \r\n            color: 'rgba(255,255,255,0.1)',\r\n            display: false, \r\n        }\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Number of Pokémon',\r\n          color: '#cfcfcf'\r\n        },\r\n        ticks: { color: '#cfcfcf' },\r\n        grid: { color: 'rgba(255,255,255,0.1)' }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Compute ratio of highest stat to lowest stat\r\nexport function calculateStatRatio(p: Pokemon): number {\r\n  const stats = p.special \r\n    ? [p.hp, p.attack, p.defense, p.special, p.speed]\r\n    : [p.hp, p.attack, p.defense, p.sp_attack, p.sp_defense, p.speed];\r\n  const max = Math.max(...stats);\r\n  const min = Math.min(...stats);\r\n  return max / min;\r\n}\r\n\r\n// Reduce Pokémon list into ratio bins\r\nexport function binStatRatios(pokemonList: Pokemon[]): number[] {\r\n  return pokemonList.reduce((bins, p) => {\r\n    const ratio = calculateStatRatio(p);\r\n    const cappedRatio = Math.min(ratio, BIN_MIN + BIN_SIZE * BIN_COUNT - 0.01);\r\n    const index = Math.floor((cappedRatio - BIN_MIN) / BIN_SIZE);\r\n    bins[index]++;\r\n    return bins;\r\n  }, Array(BIN_COUNT).fill(0));\r\n}","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { PokedexService } from 'src/app/pokedex.service';\r\nimport { Pokemon } from 'src/app/Pokemon';\r\nimport {Chart, ChartConfiguration, registerables} from 'chart.js'\r\nimport { bstHistogramConfig, binBSTs } from './chart-configs/bst-histogram.config';\r\nimport { statRatioHistogramConfig, binStatRatios } from './chart-configs/stat-ratio-histogram.config';\r\nimport { statValueHistogramConfig, binStatValues, getStatValue} from './chart-configs/stat-histogram.config';\r\nChart.register(...registerables);\r\nChart.defaults.color = \"#cfcfcf\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'world-view',\r\n  templateUrl: './world-view.component.html',\r\n  styleUrls: ['./world-view.component.scss']\r\n})\r\nexport class WorldViewComponent implements OnInit, AfterViewInit {\r\n    pokedex: PokedexService;\r\n    workingList: Pokemon[] | undefined;\r\n    stats: string[] = ['hp', 'attack', 'defense', 'sp_attack', 'sp_defense', 'speed'];\r\n    count: number;\r\n    cdr: ChangeDetectorRef;\r\n    @ViewChild('BSTChart') bstChartRef !: ElementRef;\r\n    @ViewChild('StatRatioChart') statRatioChartRef !: ElementRef;\r\n    @ViewChild('StatChart') statChartRef !: ElementRef;\r\n    bstChart: Chart | undefined;\r\n    statChart: Chart | undefined;\r\n    statRatioChart: Chart | undefined;\r\n    selectedStat: string = 'hp';\r\n    currentChart: string = 'BST';\r\n\r\n  constructor(dex: PokedexService, cdr: ChangeDetectorRef) {\r\n    this.pokedex = dex;\r\n    this.count=dex.pokedex.length;\r\n    this.cdr = cdr;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.bstChart = new Chart(this.bstChartRef.nativeElement, bstHistogramConfig)\r\n    this.pokedex.filterChanges.subscribe(filteredList => {\r\n      this.stats = this.pokedex.pokedex[0].special \r\n        ? ['hp', 'attack', 'defense', 'special', 'speed'] \r\n        : ['hp', 'attack', 'defense', 'sp_attack', 'sp_defense', 'speed'];\r\n      this.refreshCharts(filteredList);\r\n      this.cdr.detectChanges();\r\n    })\r\n  }\r\n\r\n  switchChartDisplay(chartName: string) {\r\n    this.currentChart = chartName\r\n    this.cdr.detectChanges();\r\n    switch (chartName) {\r\n      case 'BST':\r\n        if(!this.bstChart) {\r\n          this.bstChart = new Chart(this.bstChartRef.nativeElement, bstHistogramConfig)\r\n        }\r\n        break;\r\n      case 'Stat':\r\n        if(!this.statChart) {\r\n          this.statChart = new Chart(this.statChartRef.nativeElement, statValueHistogramConfig)\r\n          this.workingList && (this.statChart.data.datasets[0].data=binStatValues(this.workingList, this.selectedStat))\r\n          this.statChart.update();\r\n        }\r\n        break;\r\n      case 'Ratio':\r\n        if(!this.statRatioChart) {\r\n          this.statRatioChart = new Chart(this.statRatioChartRef.nativeElement, statRatioHistogramConfig)\r\n          this.workingList && (this.statRatioChart.data.datasets[0].data=binStatRatios(this.workingList))\r\n          this.statRatioChart.update();\r\n        }\r\n        break;\r\n    }\r\n    // if(this.workingList) {\r\n    //   this.refreshCharts(this.workingList);\r\n    // }\r\n  }\r\n\r\n  refreshCharts(pokemonList: Pokemon[]) {\r\n    if(this.workingList === pokemonList) {\r\n      // console.log(\"Skipping Work\")\r\n      return\r\n    }\r\n    this.workingList = pokemonList;\r\n    if(this.bstChart) {\r\n      this.bstChart.data.datasets[0].data = binBSTs(pokemonList)\r\n      this.bstChart.update();\r\n    }\r\n    if(this.statChart) {\r\n      if(pokemonList.length > 0 && getStatValue(pokemonList[0], this.selectedStat) === 0) {\r\n        this.selectedStat = 'hp'\r\n      }\r\n      this.statChart.data.datasets[0].data=binStatValues(pokemonList, this.selectedStat)\r\n      this.statChart.update();\r\n    }\r\n    if(this.statRatioChart) {\r\n      this.statRatioChart.data.datasets[0].data=binStatRatios(pokemonList);\r\n      this.statRatioChart.update();\r\n    }\r\n  }\r\n\r\n  friendlyStatName(statAbb: string): string {\r\n    switch(statAbb) {\r\n      case 'sp_attack':\r\n        return 'special attack'\r\n      case 'sp_defense':\r\n        return 'special defense'\r\n      default:\r\n        return statAbb\r\n    }\r\n  }\r\n\r\n  onStatSelect(target: EventTarget | null) {\r\n    if(target && (target as HTMLSelectElement).value) {\r\n      let stat=(target as HTMLSelectElement).value\r\n      if(stat) {\r\n        this.selectedStat=stat;\r\n        if(this.statChart && this.workingList) {\r\n          this.statChart.data.datasets[0].data=binStatValues(this.workingList, this.selectedStat)\r\n          this.statChart.update();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  revealTMByIndex(idx: number) {\r\n    let tm = this.pokedex.tmIds[idx];\r\n    if(!this.pokedex.revealedTMs.includes(tm)) {\r\n      this.pokedex.revealTMForAll(tm);\r\n    }\r\n    else {\r\n      this.pokedex.hideTMForAll(tm);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"world-view-container\">\r\n    <div class=\"chart-column\">\r\n        <div class=\"chart-slot\">\r\n            <div class=\"element-container\">\r\n                <div class=\"chart-selector\">\r\n                    <div class=\"selectable\" [class.selected]=\"currentChart === 'BST'\"\r\n                       (click)=\"switchChartDisplay('BST')\">\r\n                       BSTs\r\n                    </div>\r\n                    <div class=\"selectable\" [class.selected]=\"currentChart === 'Stat'\"\r\n                       (click)=\"switchChartDisplay('Stat')\">\r\n                       Stats\r\n                    </div>\r\n                    <div class=\"selectable\" [class.selected]=\"currentChart === 'Ratio'\"\r\n                       (click)=\"switchChartDisplay('Ratio')\">\r\n                       Ratios\r\n                    </div>\r\n                </div>\r\n                <div [style.display]=\"(currentChart !== 'BST') ? 'none' : 'block'\">\r\n                    <canvas class=\"world-chart\" #BSTChart></canvas>\r\n                </div>\r\n                <div [style.display]=\"(currentChart !== 'Stat') ? 'none' : 'block'\">\r\n                    \r\n                    <canvas class=\"world-chart\" #StatChart></canvas>\r\n\r\n                </div>\r\n                <div [style.display]=\"(currentChart !== 'Ratio') ? 'none' : 'block'\">\r\n                    <canvas class=\"world-chart\" #StatRatioChart></canvas>\r\n                </div>\r\n                <div [style.display]=\"(currentChart !== 'Stat') ? 'none' : 'flex'\" style=\"flex-direction: column; align-items: center;\">\r\n                    Select Stat:\r\n                    <select class=\"stat-selector\" (change)=\"onStatSelect($event.target)\" >\r\n                        <option *ngFor=\"let stat of stats\" [value]=\"stat\">{{ friendlyStatName(stat) | titlecase }}</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"tm-column\">\r\n        <div class=\"tm-table element-container\">\r\n            TMS\r\n            <hr style=\"flex-grow: 1; width: 100%;\">\r\n            <div class=\"move-list\">\r\n                <table style=\"border-collapse: collapse;\">\r\n                    <tr *ngFor=\"let tm of pokedex.tmIds; let i = index\" (click)=\"revealTMByIndex(i)\">\r\n                        <td class=\"left-table\">{{tm}}</td>\r\n                        <td class=\"right-table\">{{pokedex.revealedTMs.includes(tm) || pokedex.isFullyRevealed ? pokedex.tmMoves[i]:'???'}}</td>\r\n                    </tr>\r\n                </table>\r\n                <div class=\"default-tm-message\" *ngIf=\"pokedex.tmIds.length == 0\">\r\n                    TM Data Unchanged\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"starter-list element-container\">\r\n            Starters\r\n            <hr style=\"flex-grow: 1; width: 100%;\">\r\n            <div *ngFor=\"let starter of pokedex.starters\">{{starter}}</div>\r\n            <div class=\"default-starter-message\" *ngIf=\"pokedex.starters.length == 0\">Starters Unchanged</div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { PokedexService } from '../pokedex.service';\r\n\r\n@Component({\r\n  selector: 'app-pokedex-page',\r\n  templateUrl: './pokedex-page.component.html',\r\n  styleUrls: ['./pokedex-page.component.scss']\r\n})\r\nexport class PokedexPageComponent implements OnInit, AfterViewInit{\r\n\r\n  dex: PokedexService\r\n\r\n  constructor(dex: PokedexService) {\r\n    this.dex = dex;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.dex.validDexUploaded) {\r\n      this.dex.loadDefaultData();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    \r\n\r\n  }\r\n\r\n}\r\n","<div>\r\n            <app-cards-view></app-cards-view>\r\n            <hr>\r\n            <app-table-view></app-table-view>\r\n</div>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { QueryBuilderClassNames, QueryBuilderConfig } from 'angular2-query-builder';\r\nimport { IPokeQuery } from '../queryUtility';\r\n\r\n@Component({\r\n  selector: 'app-filter-dialog-content',\r\n  templateUrl: './filter-dialog-content.component.html',\r\n  styleUrls: ['./filter-dialog-content.component.scss']\r\n})\r\nexport class FilterDialogContentComponent implements OnInit {\r\n\r\n  public config: QueryBuilderConfig = {\r\n    fields: {\r\n      hp: {name: 'HP', type: 'number'},\r\n      attack: {name: 'Attack', type: 'number'},\r\n      sp_attack: {name: 'Special Attack', type: 'number'},\r\n      defense: {name: 'Defense', type: 'number'},\r\n      sp_defense: {name: 'Special Defense', type: 'number'},\r\n      speed: {name: 'Speed', type: 'number'},\r\n      stat_total: { name: 'Total Stats', type: 'number' },\r\n      type: {\r\n        name: 'Type',\r\n        type: 'category',\r\n        options: [\r\n          {name: 'Normal', value: 'normal'},\r\n          {name: 'Fire', value: 'fire'},\r\n          {name: 'Fighting', value: 'fighting'},\r\n          {name: 'Water', value: 'water'},\r\n          {name: 'Flying', value: 'flying'},\r\n          {name: 'Grass', value: 'grass'},\r\n          {name: 'Poison', value: 'poison'},\r\n          {name: 'Electric', value: 'electric'},\r\n          {name: 'Ground', value: 'ground'},\r\n          {name: 'Psychic', value: 'psychic'},\r\n          {name: 'Rock', value: 'rock'},\r\n          {name: 'Ice', value: 'ice'},\r\n          {name: 'Bug', value: 'bug'},\r\n          {name: 'Dragon', value: 'dragon'},\r\n          {name: 'Ghost', value: 'ghost'},\r\n          {name: 'Dark', value: 'dark'},\r\n          {name: 'Steel', value: 'steel'},\r\n          {name: 'Fairy', value: 'fairy'}\r\n        ]\r\n      },\r\n      ability: {\r\n        name: 'Ability',\r\n        type: 'string',\r\n        operators: ['=', '!=']\r\n      },\r\n      move: {\r\n        name: 'Move',\r\n        type: 'string',\r\n        operators: ['has']\r\n      },\r\n      evolution: {\r\n        name: 'Evolution Status',\r\n        type: 'category',\r\n        operators: ['is', 'is not'],\r\n        options: [\r\n          {name: 'Fully Evolved', value: 'fullyevolved'},\r\n          {name: 'Base Evolution', value: 'baseevo'},\r\n          {name: 'Mega Evolution', value: 'megaevo'},\r\n          {name: 'Mega Evolvable', value: 'megaable'},\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FilterDialogContentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: IPokeQuery) { \r\n      // console.log(\"dialog data\", this.data);\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    // console.log(this.data);\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<!-- <h1 mat-dialog-title>Hi</h1> -->\r\n<div mat-dialog-content>\r\n    <query-builder [(ngModel)]=\"data\" [config]=\"config\">\r\n        <!-- <ng-container *queryInput=\"let rule; let field=field; let options=options; type: 'category'\">\r\n            <mat-form-field>\r\n              <mat-select [(ngModel)]=\"rule.value\" [placeholder]=\"field.name\">\r\n                <mat-option *ngFor=\"let opt of options\" [value]=\"opt.value\">\r\n                  {{ opt.name }}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </ng-container> -->\r\n    </query-builder>\r\n    <!-- <textarea class=\"output\">{{data | json}}</textarea> -->\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick()\">Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial tabindex=\"0\">Ok</button>\r\n</div> \r\n","// import {  } from \"src/app/pokedex.service\";\r\nimport { Pokemon, PokeType } from \"src/app/Pokemon\";\r\n\r\nexport enum NumberOperators {\r\n    eq = '=',\r\n    neq = '!=',\r\n    geq = '>=',\r\n    gt = '>',\r\n    leq = '<=',\r\n    lt = '<',\r\n}\r\nexport enum CategoryOperators {\r\n    in = 'in',\r\n    notin = 'not in',\r\n    is_yes = 'is',\r\n    is_not = 'is not'\r\n}\r\nexport enum EqualityOperators {\r\n    eq = '=',\r\n    neq = '!='\r\n}\r\nexport enum ContainsOperators {\r\n    has = 'has',\r\n    nhas = '!has'\r\n}\r\n\r\nexport type Operators = NumberOperators | CategoryOperators | EqualityOperators;\r\nexport type IPokeRule = {\r\n    field: 'hp' | 'attack' | 'sp_attack' | 'defense' | 'sp_defense' | 'speed' | 'total';\r\n    operator: NumberOperators;\r\n    value: string;\r\n} | {\r\n    field: 'type';\r\n    operator: CategoryOperators;\r\n    value: PokeType[];\r\n} | {\r\n    field: 'type';\r\n    operator: EqualityOperators;\r\n    value: PokeType;\r\n} | {\r\n    field: 'ability';\r\n    operator: EqualityOperators;\r\n    value: string;\r\n} | {\r\n    field: 'move';\r\n    operator: ContainsOperators;\r\n    value: string;\r\n} | {\r\n    field: 'evolution';\r\n    operator: CategoryOperators;\r\n    value: string;\r\n}\r\n;\r\nexport type IPokeQuery = {\r\n    condition: 'and' | 'or';\r\n    rules: (IPokeQuery|IPokeRule)[]\r\n};\r\n\r\n\r\nexport function filterDataByQueryTree(data: Pokemon[], querytree: IPokeQuery): any[] {\r\n    return data.filter(p => recursiveRuleCheck(p, querytree));\r\n}\r\n\r\nfunction recursiveRuleCheck(pokemon: Pokemon, querytree: IPokeQuery|IPokeRule): boolean {\r\n    if ((querytree as IPokeRule).field && (querytree as IPokeRule).operator) {\r\n        return ruleCheck(pokemon, querytree as IPokeRule)\r\n    }\r\n    else if ((querytree as IPokeQuery).condition == 'and') {\r\n        return (querytree as IPokeQuery).rules.every((subquery => recursiveRuleCheck(pokemon, subquery)))\r\n    }\r\n    else if ((querytree as IPokeQuery).condition == 'or') {\r\n        return (querytree as IPokeQuery).rules.some((subquery => recursiveRuleCheck(pokemon, subquery)))\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction ruleCheck(pokemon: Pokemon, rule: IPokeRule) {\r\n    // const value_from_pokemon = getValueFromPokemon(rule.field, pokemon);\r\n\r\n//Start from 'scratch' zone\r\n    if(['hp', 'attack', 'sp_attack', 'defense', 'sp_defense', 'speed', 'stat_total'].includes(rule.field)) {\r\n        const stat_from_mon = pokemon.get_stat(rule.field);\r\n        if(!stat_from_mon) {\r\n            return false;\r\n        }\r\n        const stat_from_rule = Number.parseFloat(rule.value as string);\r\n        switch (rule.operator) {\r\n            case NumberOperators.eq: {\r\n                return stat_from_mon == stat_from_rule\r\n            } break;\r\n            case NumberOperators.neq: {\r\n                return stat_from_mon != stat_from_rule\r\n\r\n            } break;\r\n            case NumberOperators.geq: {\r\n                return stat_from_mon >= stat_from_rule\r\n\r\n            } break;\r\n            case NumberOperators.leq: {\r\n                return stat_from_mon <= stat_from_rule\r\n\r\n            } break;\r\n            case NumberOperators.gt: {\r\n                return stat_from_mon > stat_from_rule\r\n\r\n            } break;\r\n            case NumberOperators.lt: {\r\n                return stat_from_mon < stat_from_rule\r\n\r\n            } break;\r\n            default:\r\n                break;\r\n        }\r\n    } else if (rule.field == 'type') {\r\n        if (!pokemon.checkTypeRevealed()) {\r\n            return false;\r\n        }\r\n        switch (rule.operator) {\r\n            case EqualityOperators.eq: {\r\n                return [pokemon.get_type1(), pokemon.get_type2()].includes(rule.value)\r\n            } break;\r\n            case EqualityOperators.neq: {\r\n                return !([pokemon.get_type1(), pokemon.get_type2()].includes(rule.value))\r\n    \r\n            } break;\r\n            case CategoryOperators.in: {\r\n                return rule.value.includes(pokemon.get_type1()) ||\r\n                       rule.value.includes(pokemon.get_type2())\r\n\r\n            } break;\r\n            case CategoryOperators.notin: {\r\n                return !(rule.value.includes(pokemon.get_type1()) ||\r\n                         rule.value.includes(pokemon.get_type2()))\r\n    \r\n            } break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    } else if (rule.field == 'ability') {\r\n        if (!pokemon.checkAbilityRevealed()) {\r\n            return false;\r\n        }\r\n        switch (rule.operator) {\r\n            case EqualityOperators.eq: {\r\n\r\n                return pokemon.getAbilitiesIfRevealed().some(ab => ab.toLowerCase() === rule.value.toLowerCase());\r\n                // return pokemon.getAbilitiesIfRevealed().map(a => a.toLowerCase()).includes(rule.value.toLowerCase())\r\n            } break;\r\n            case EqualityOperators.neq: {\r\n                return !(pokemon.getAbilitiesIfRevealed().map(a => a.toLowerCase()).includes(rule.value.toLowerCase()))\r\n            } break;\r\n            default:\r\n                break;\r\n        }        \r\n    } else if (rule.field == 'move') {\r\n        switch (rule.operator) {\r\n            case ContainsOperators.has: {\r\n                return (pokemon.getMovesIfRevealed().some(mv => mv.toLowerCase() === rule.value.toLowerCase()));\r\n            } break;\r\n            case ContainsOperators.nhas: {\r\n                return !(pokemon.getMovesIfRevealed().some(mv => mv.toLowerCase() === rule.value.toLowerCase()));\r\n            } break;\r\n            default:\r\n                break;\r\n        }\r\n    } else if (rule.field == 'evolution') {\r\n        switch (rule.operator) {\r\n            case CategoryOperators.is_yes: {\r\n                if(rule.value == 'fullyevolved')\r\n                    return pokemon.next_evos.length == 0;\r\n                else if (rule.value == 'baseevo')\r\n                    return pokemon.prev_evos.length == 0;\r\n                else if (rule.value == 'megaevo')\r\n                    return pokemon.name.includes('-Mega');\r\n                else if (rule.value == 'megaable')\r\n                    return pokemon.forms.length > 0 && !pokemon.name.includes('-Mega') &&  pokemon.forms.some(name => name.includes('-Mega'));\r\n            } break;\r\n            case CategoryOperators.is_not: {\r\n                if(rule.value == 'fullyevolved')\r\n                    return pokemon.next_evos.length !== 0;\r\n                else if (rule.value == 'baseevo')\r\n                    return pokemon.prev_evos.length !== 0;\r\n                else if (rule.value == 'megaevo')\r\n                    return !pokemon.name.includes('-Mega');\r\n                else if (rule.value == 'megaable')\r\n                    return pokemon.forms.length == 0 || pokemon.name.includes('-Mega') || !pokemon.forms.some(name => name.includes('-Mega'));\r\n            }break;\r\n            default:\r\n                break;\r\n        }\r\n     } else {\r\n        return true;\r\n    }\r\n    return true;\r\n//\r\n\r\n    // switch (rule.operator) {\r\n    //     case CategoryOperators.in: {\r\n    //         return (value_from_pokemon as string[]).some((t) => (rule.value as string[]).includes(t))\r\n    //     } break;\r\n    //     case CategoryOperators.notin: {\r\n    //         return (value_from_pokemon as string[]).every((t) => !(rule.value as string[]).includes(t))\r\n    //     } break;\r\n    //     case NumberOperators.eq: {\r\n    //         if (typeof value_from_pokemon == 'number') {\r\n    //             return Number.parseFloat(rule.value) == value_from_pokemon\r\n    //         } else if(rule.field == 'type') {\r\n    //             return (value_from_pokemon as string[]).includes(rule.value)\r\n    //         } else {\r\n    //             return rule.value == value_from_pokemon\r\n    //         }\r\n    //     } break;\r\n    //     case NumberOperators.neq: {\r\n    //         if (typeof value_from_pokemon == 'number') {\r\n    //             return Number.parseFloat(rule.value) != value_from_pokemon\r\n    //         }  else if(rule.field == 'type') {\r\n    //             return !(value_from_pokemon as string[]).includes(rule.value)\r\n    //         } else {\r\n    //             return rule.value != value_from_pokemon\r\n    //         }\r\n    //     } break;\r\n    //     case NumberOperators.geq: {\r\n    //         return value_from_pokemon >= Number.parseFloat(rule.value)\r\n    //     } break;\r\n    //     case NumberOperators.gt: {\r\n    //         return value_from_pokemon > Number.parseFloat(rule.value)\r\n    //     } break;\r\n    //     case NumberOperators.lt: {\r\n    //         return value_from_pokemon < Number.parseFloat(rule.value)\r\n    //     } break;\r\n    //     case NumberOperators.leq: {\r\n    //         return value_from_pokemon <= Number.parseFloat(rule.value)\r\n    //     } break;\r\n\r\n    //     default:\r\n    //         return true;\r\n    //         break;\r\n    // }\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef, AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef } from '@angular/core';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FilterDialogContentComponent } from './filter-dialog-content/filter-dialog-content.component';\r\nimport { PokedexService,  } from '../../pokedex.service';\r\nimport { Pokemon, PokeType } from \"../../Pokemon\";\r\n\r\nimport { Columns, Config, DefaultConfig } from 'ngx-easy-table';\r\nimport { API, APIDefinition, Event} from 'ngx-easy-table';\r\nimport { CategoryOperators, filterDataByQueryTree, IPokeQuery, NumberOperators } from './queryUtility';\r\n// import { stringify } from 'querystring';\r\n\r\nenum SortableColumn {\r\n  hp = 'hp',\r\n  attack = 'attack',\r\n  defense = 'defense',\r\n  sp_attack = 'sp_attack',\r\n  sp_defense = 'sp_defense',\r\n  speed = 'speed',\r\n  stat_total = 'stat_total',\r\n  name = 'name',\r\n  uid = 'uid',\r\n  type1 = 'type1',\r\n  type2 = 'type2',\r\n  none = 'none'\r\n}\r\n\r\n@Component({\r\n  selector: 'app-table-view',\r\n  templateUrl: './table-view.component.html',\r\n  styleUrls: ['./table-view.component.scss'],\r\n  // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TableViewComponent implements OnInit, AfterViewInit{\r\n\r\n  @ViewChild('tableTemplate', { static: true }) tableTemplate: APIDefinition | undefined;\r\n  @ViewChild('filterButton') filterButton!: ElementRef<HTMLButtonElement>;\r\n\r\n  public configuration: Config;\r\n  public columns: Columns[];\r\n  public dialogOpen = false;\r\n\r\n  public filteredData: Pokemon[] = [];\r\n  private _pokedexService: PokedexService;\r\n  private sortedColumn: SortableColumn;\r\n\r\n  private lastSortedKey = '';\r\n  private lastSortedOrder = '';\r\n  \r\n  public _query: IPokeQuery = {\r\n    condition: 'and',\r\n    rules: [\r\n      // { field: 'hp', operator: NumberOperators.leq, value: '32' },\r\n      // {\r\n      //   condition: 'or',\r\n      //   rules: [\r\n      //     {field: 'type', operator: NumberOperators.eq, value: PokeType.Fire},\r\n      //     {field: 'type', operator: CategoryOperators.in, value: [PokeType.Grass, PokeType.Bug]},\r\n      //   ]\r\n      // }\r\n    ]\r\n  };\r\n\r\n  constructor(public pokedexService: PokedexService, public dialog : MatDialog, private cdr: ChangeDetectorRef) { \r\n    this.configuration = { ...DefaultConfig };\r\n    // this.configuration.threeWaySort = true;\r\n    this.configuration.orderEventOnly = true;\r\n    this.configuration.orderEnabled = true;\r\n    // this.configuration.searchEnabled = true;\r\n    // this.hpTemplate \r\n    // ... etc.\r\n    this.columns = [\r\n      { key: 'name', title: 'Name' },\r\n      { key: 'uid', title: 'Id'},\r\n      { key: 'type1', title: 'Type 1' },\r\n      { key: 'type2', title: 'Type 2'},\r\n      { key: 'stat_total', title: 'Total' },\r\n      { key: 'hp', title: 'HP'},\r\n      { key: 'attack', title: 'Attack'},\r\n      { key: 'defense', title: 'Defense'},\r\n      { key: 'sp_attack', title: 'Special Attack'},\r\n      { key: 'sp_defense', title: 'Special Defense'},\r\n      { key: 'speed', title: 'Speed'},\r\n    ];\r\n    this._pokedexService = pokedexService;\r\n    this.filteredData = this._pokedexService.pokedex;\r\n    this.sortedColumn = SortableColumn.none;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.refreshTable();\r\n  }\r\n\r\n  public openFilterTreeDialog(): void {\r\n    this.filterButton.nativeElement.blur();\r\n    if (!this.dialogOpen) { \r\n      this.dialogOpen = true;\r\n      let dialogRef = this.dialog.open(FilterDialogContentComponent, {\r\n        width: '550px',\r\n        data: this.query,\r\n        disableClose: false,\r\n        hasBackdrop: true,\r\n        autoFocus: false,\r\n      });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        this.dialogOpen = false;\r\n        this.query = result;\r\n        // console.log(\"after close\", this.query);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  private set query(result: IPokeQuery) {\r\n    // TODO any protection or adjustments needed?\r\n    if (result) {\r\n      this._query = result;\r\n      this.refreshTable();\r\n      // this.filteredData = filterDataByQueryTree(this._pokedexService.pokedex, this.query);\r\n    }\r\n    \r\n  }\r\n\r\n  private get query(): IPokeQuery {\r\n    return this._query;\r\n  }\r\n\r\n  \r\n  ngAfterViewInit(): void {\r\n    //TODO: Subscribe to the dex service (specifically dex changed subject)\r\n    this.pokedexService.dexChanges.subscribe(\r\n      () => {\r\n        if(this.pokedexService.pokedex.length>0 && this.pokedexService.pokedex[0].special) {\r\n          this.columns = [\r\n            { key: 'name', title: 'Name' },\r\n            { key: 'uid', title: 'Id'},\r\n            { key: 'type1', title: 'Type 1' },\r\n            { key: 'type2', title: 'Type 2'},\r\n            { key: 'stat_total', title: 'Total' },\r\n            { key: 'hp', title: 'HP'},\r\n            { key: 'attack', title: 'Attack'},\r\n            { key: 'defense', title: 'Defense'},\r\n            { key: 'special', title: 'Special'},\r\n            { key: 'speed', title: 'Speed'},\r\n          ];\r\n        } else {\r\n          this.columns = [\r\n            { key: 'name', title: 'Name' },\r\n            { key: 'uid', title: 'Id'},\r\n            { key: 'type1', title: 'Type 1' },\r\n            { key: 'type2', title: 'Type 2'},\r\n            { key: 'stat_total', title: 'Total' },\r\n            { key: 'hp', title: 'HP'},\r\n            { key: 'attack', title: 'Attack'},\r\n            { key: 'defense', title: 'Defense'},\r\n            { key: 'sp_attack', title: 'Special Attack'},\r\n            { key: 'sp_defense', title: 'Special Defense'},\r\n            { key: 'speed', title: 'Speed'},\r\n          ];\r\n        }\r\n        this.refreshTable();\r\n      }\r\n    )\r\n    //TODO: Subscribe to individual revelation\r\n    this.pokedexService.individualChanges.subscribe(\r\n      () => {\r\n        this.refreshTable();\r\n      }\r\n    )\r\n\r\n    // if(this.pokedexService.validDexUploaded)\r\n    //   this.pokedexService.dexChanges.next();\r\n  }\r\n\r\n  refreshTable() {\r\n    // console.log('---------REFRESHED-------------')\r\n    let initialdata = this.filterDataInitialPass();\r\n    this.filteredData = filterDataByQueryTree(initialdata, this.query);\r\n    this.pokedexService.filterChanges.next(this.filteredData);\r\n    this.sortTable();\r\n  }\r\n\r\n  filterDataInitialPass() {\r\n    // If a Pokemon is revealed at all, show them in the table\r\n    let res = this.pokedexService.pokedex.filter(\r\n      mon => { return true;\r\n        // return  mon.fully_revealed\r\n        // ||      mon.abilities_revealed\r\n        // ||      mon.stats_revealed \r\n        // ||      mon.type_revealed\r\n        // ||      mon.bst_revealed;\r\n      }\r\n    );\r\n\r\n\r\n\r\n    return res;\r\n  }\r\n\r\n  rowClick(name: string|undefined) {\r\n    if(name){\r\n      this._pokedexService.selectPokemon(name);\r\n    }\r\n  }\r\n\r\n  eventEmitted($event: { event: string; value: any }) {\r\n    if ($event.event === Event.onOrder) {\r\n      // console.log($event)\r\n      const { key, order } = $event.value;\r\n      this.lastSortedKey = key;\r\n      this.lastSortedOrder = order;\r\n\r\n      this.sortTable();\r\n\r\n    }\r\n  }\r\n\r\n\r\n  private sortTable() {\r\n    if(!this.lastSortedKey)\r\n      this.lastSortedKey = 'uid';\r\n    if(!this.lastSortedOrder)\r\n      this.lastSortedOrder = 'asc';\r\n    this.filteredData = [...this.filteredData.sort((a, b) => {\r\n      const getValue = (row: any) => {\r\n        if (this.lastSortedKey === 'stat_total') {\r\n          return row.checkBSTRevealed() ? row.bst() : null;\r\n        }\r\n        if (['type1', 'type2'].includes(this.lastSortedKey)) {\r\n          return row.checkTypeRevealed() ? row[this.lastSortedKey] : null;\r\n        }\r\n        if (['name', 'uid'].includes(this.lastSortedKey)) {\r\n          return row[this.lastSortedKey] ?? null;\r\n        }\r\n        if (row.get_stat) {\r\n          return row.get_stat(this.lastSortedKey) ?? null;\r\n        }\r\n        return row[this.lastSortedKey] ?? null;\r\n      };\r\n\r\n      const valA = getValue(a);\r\n      const valB = getValue(b);\r\n\r\n      const isHiddenA = valA === null || valA === '???' || valA === 0;\r\n      const isHiddenB = valB === null || valB === '???' || valB === 0;\r\n\r\n      // Push hidden values to bottom\r\n      if (isHiddenA && !isHiddenB) return 1;\r\n      if (!isHiddenA && isHiddenB) return -1;\r\n      if (isHiddenA && isHiddenB) return a.uid.localeCompare(b.uid) || a.name.localeCompare(b.name);\r\n\r\n      // Normal sort\r\n      if (typeof valA === 'string') {\r\n        return this.lastSortedOrder === 'asc'\r\n          ? valA.localeCompare(valB) || a.uid.localeCompare(b.uid) || a.name.localeCompare(b.name)\r\n          : valB.localeCompare(valA) || a.uid.localeCompare(b.uid) || a.name.localeCompare(b.name);\r\n      }\r\n\r\n      return this.lastSortedOrder === 'asc'\r\n        ? valA - valB || a.uid.localeCompare(b.uid) || a.name.localeCompare(b.name)\r\n        : valB - valA || a.uid.localeCompare(b.uid) || a.name.localeCompare(b.name);\r\n    })];\r\n  }\r\n}\r\n","<div *ngIf=\"pokedexService.validDexUploaded\">\r\n    <div class=\"table-header\">\r\n        <button class='filterButton openDialogButton' (click)=\"openFilterTreeDialog()\" #filterButton><i class=\"material-icons\">filter_alt</i>Filter List</button>\r\n        Total: {{filteredData.length}}\r\n    </div>\r\n    <ngx-table [configuration]=\"configuration\" [data]=\"filteredData\" [columns]=\"columns\" (event)=\"eventEmitted($event)\" #tableTemplate>\r\n        <ng-template let-row let-index=\"index\">\r\n            <td (click)=\"rowClick(row.name)\">\r\n                <h2>{{ row.name }}</h2>\r\n            </td>\r\n            <td (click)=\"rowClick(row.name)\">\r\n                <h3>{{ row.uid }}</h3>\r\n            </td>\r\n            <td (click)=\"rowClick(row.name)\">\r\n                <span>{{row.checkTypeRevealed() ? row.type1 : \"???\"}}</span>\r\n            </td>\r\n            <td (click)=\"rowClick(row.name)\">\r\n                <span>{{row.checkTypeRevealed() ? row.type2 : \"???\"}}</span>\r\n            </td>\r\n            <td (click)=\"rowClick(row.name)\">\r\n                <span>Total: {{ row.checkBSTRevealed()?row.bst():\"???\" }}</span>\r\n            </td>\r\n            <td *ngFor=\"let stat of row.special?['hp', 'attack', 'defense', 'special', 'speed']\r\n                        : ['hp', 'attack', 'defense', 'sp_attack', 'sp_defense', 'speed']\" \r\n                        (click)=\"rowClick(row.name)\">\r\n                <div class=\"statsBar\">\r\n                    <span class=\"statsBarFill total\" [class]=\"[stat]\" [style.width]=\"row.get_stat(stat)/2.55+ '%'\" aria-valuenow=\"row.get_stat(stat)\"\r\n                    aria-valuemin=\"0\" aria-valuemax=\"255\">\r\n                    </span>\r\n                    <div class='overlayLabel'>\r\n                        <span>\r\n                            {{row.get_stat(stat)?row.get_stat(stat):\"???\"}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n\r\n        </ng-template>\r\n    </ngx-table>\r\n</div>\r\n<!-- <ng-template #hpTpl let-row let-rowIndex=\"rowIndex\" let-column=\"column\">\r\n    <div>rowIndex: {{ rowIndex }}</div>\r\n</ng-template> -->\r\n  \r\n  ","import { JsonPipe } from '@angular/common';\r\nimport { ElementRef, Injectable, ViewChild } from '@angular/core';\r\n// import { readFile, readFileSync } from 'fs';\r\nimport { Observable, Subject, ReplaySubject } from 'rxjs';\r\n// import SampleJson from '../assets/data/main_collection.json';\r\nimport { Pokemon, learned_move, tm_move, PokeType } from './Pokemon';\r\n// import * as gen7data from '../assets/data/gen7vantest.json';\r\n// import * as gen6data from '../assets/data/gen6vantest.json';\r\n// import * as gen5data from '../assets/data/gen5vantest.json';\r\n// import * as gen4data from '../assets/data/gen4vantest.json';\r\n// import * as gen3data from '../assets/data/gen3vantest.json';\r\n// import * as gen2data from '../assets/data/gen2vantest.json';\r\n// import * as gen1data from '../assets/data/gen1vantest.json';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PokedexService {\r\n\r\n  public pokedex: Pokemon[] = [];\r\n  public pokedexByName = new Map<string, Pokemon>();\r\n  public validDexUploaded = false;\r\n  public isLoaded = false;\r\n  public dexChanges = new Subject<any>();\r\n  public individualChanges = new Subject<Pokemon>();\r\n  public monSelection = new ReplaySubject<string>(1);\r\n  public filterChanges = new ReplaySubject<Pokemon[]>(1);\r\n  private v = 3;\r\n  loadedFile: string = '';\r\n  isFullyRevealed = false;\r\n  allBSTRevealed = false;\r\n  allTypesRevealed = false;\r\n  allAbilitiesRevealed = false;\r\n  allEvolutionsRevealed = false;\r\n  allMovesRevealed: boolean = false;\r\n  revealedTMs: number[] = [];\r\n  tmIds: number[] = [];\r\n  hmIds: number[] = [];\r\n  tmMoves: string[] = [];\r\n  hmMoves: string[] = [];\r\n  starters: string[] = [];\r\n  defaultPkdxName = './assets/data/Default.pkdx';\r\n  sampleRandomPkdxName = './assets/data/Random.pkdx';\r\n\r\n  constructor() {\r\n\r\n    //TODO: THIS MUST BE COMMENTED OUT BEFORE PRODUCTION\r\n    (window as any).dex = this;\r\n  }\r\n\r\n  public async readSelectedFile(inputFile: File) {\r\n    let reader = new FileReader();\r\n    this.v = 4;\r\n    reader.onload = (e) => {\r\n      this.parseFile(reader.result ? reader.result.toString() : '')\r\n      this.loadedFile = inputFile.name;\r\n    }\r\n    reader.onerror = (e) => {\r\n      alert('There was a problem reading the file you selected. You may need to refresh the page.')\r\n      console.log(reader.error)\r\n    }\r\n    reader.readAsText(inputFile)\r\n  }\r\n\r\n  private async parseFile(fileString: string) {\r\n    if (fileString.length) {\r\n      try {\r\n        if (fileString.startsWith('Randomizer Version:')) {\r\n          await this.parseLogFile(fileString)\r\n        } else {\r\n          this.parseSaveFile(fileString)\r\n        }\r\n      } catch (err) {\r\n        alert(\"There was a problem reading the file you uploaded:\" + err);\r\n      }\r\n    } else {\r\n      this.validDexUploaded = false;\r\n      alert(\"The file didn't load properly\")\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse a log file from the Universal Pokemon Randomizer.\r\n   * TODO: add location/move information and create a factory method in the \r\n   * Pokemon list\r\n   * @param log \r\n   * @returns \r\n   */\r\n  private async parseLogFile(log: string) {\r\n    const blocks = log.split('\\r\\n\\r\\n');\r\n\r\n    let pokeStrings: string[] = [];\r\n    let evoStrings: string[] = [];\r\n    let tmStrings: string[] = [];\r\n    let moveStrings: string[] = [];\r\n    let tmCompStrings: string[] = [];\r\n    let starterStrings: string[] = [];\r\n    let defaultData: Map<string, any>|undefined;\r\n\r\n    for (const block of blocks) {\r\n      const lines = block.trim().split('\\r\\n');\r\n      const firstLine = lines[0];\r\n      const label = firstLine.startsWith('-') ? firstLine.split('--')[1] : firstLine.split(':')[0];\r\n      switch (label) {\r\n        case 'Randomized Evolutions':\r\n          evoStrings = lines.slice(1);\r\n          break;\r\n        case 'Pokemon Base Stats & Types':\r\n          pokeStrings = lines.slice(1);\r\n          break;\r\n        case 'TM Moves':\r\n          tmStrings = lines.slice(1);\r\n          break;\r\n        case 'Pokemon Movesets': // Only the first Pokemon Moveset Block meets this description (Bulbasaur)\r\n          if(block.indexOf('\\r\\n')>=0)\r\n            moveStrings.push(block.slice(block.indexOf('\\r\\n') + 2));\r\n          break;\r\n        case 'TM Compatibility':\r\n          tmCompStrings = lines.slice(1);\r\n          break;\r\n        case 'Random Starters':\r\n          starterStrings = lines.slice(1);\r\n          break;\r\n        default: //All other Pokemon Movesets appear as their own independent blocks.\r\n          if (firstLine.match(/\\d{3} .* ->/) && !firstLine.startsWith('Set')) {\r\n            moveStrings.push(block)\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    if(pokeStrings.length == 0 || evoStrings.length == 0 || moveStrings.length == 0 || tmCompStrings.length == 0) { \r\n      defaultData = await this.getDefaultGenData(blocks)\r\n    }\r\n\r\n\r\n    //TODO: all of these things may need to occur after a quick file read.\r\n    this.buildDex(pokeStrings, evoStrings, tmCompStrings, moveStrings, tmStrings, starterStrings, defaultData);\r\n    this.resetSpoils();\r\n    this.validDexUploaded=true;\r\n    this.dexChanges.next();    \r\n    if(this.pokedex.length>0) {\r\n      this.selectPokemon(this.pokedex[0].name)\r\n    }\r\n    return;\r\n  }\r\n\r\n  private resetSpoils() {\r\n    this.allAbilitiesRevealed = false;\r\n    this.allBSTRevealed = false;\r\n    this.allTypesRevealed = false;\r\n    this.isFullyRevealed = false;\r\n    this.allMovesRevealed = false;\r\n    this.revealedTMs = [];\r\n    this.allEvolutionsRevealed = false;\r\n  }\r\n\r\n  // TODO: Potentially move to Pokemon.ts as a static method\r\n  buildDex(pokeStrings: string[], evoStrings: string[], tmCompStrings: string[], moveStrings: string[], tmStrings: string[], starterStrings: string[], defaultData: Map<string, any> | undefined) {\r\n    let res: Pokemon[] = [];\r\n    let labels = '';\r\n    if(pokeStrings) {\r\n      labels = pokeStrings[0];\r\n    } \r\n\r\n    //Create List and add Base Stats\r\n    for (const pokeString of pokeStrings.slice(1)) {\r\n      let new_mon = new Pokemon();\r\n      new_mon.setBasicStats(pokeString, labels);\r\n      //If this is an alt form, set UID to original mon\r\n      if (new_mon.name.indexOf('-') !== -1\r\n        && res.find(mon => new_mon.name.indexOf(mon.name) !== -1)\r\n        && !new_mon.name.toLowerCase().includes('porygon')) {\r\n        let base_forme = res.find(mon => new_mon.name.indexOf(mon.name) !== -1);\r\n        new_mon.uid = base_forme!.uid;\r\n        !(base_forme!.forms.includes(base_forme!.name)) && base_forme!.forms.push(base_forme!.name)\r\n        base_forme!.forms.push(new_mon.name);\r\n        new_mon.forms = base_forme!.forms;\r\n        new_mon.form_num = new_mon.forms.length - 1;\r\n      }\r\n      res.push(new_mon)\r\n    }\r\n    if (pokeStrings.length == 0 && defaultData) {\r\n      //TODO: add an entry to res for every pokemon in the default list\r\n      for(let [n, mon] of defaultData.entries()) {\r\n        let new_mon = new Pokemon();\r\n        new_mon.setBasicStatsFromObject(mon);\r\n        res.push(new_mon);\r\n      }\r\n    }\r\n    \r\n    //Add to Dictionary for access by name\r\n    this.pokedex = res;\r\n    for (let mon of res) {\r\n      this.pokedexByName.set(mon.name, mon);\r\n    }\r\n\r\n    //Evolutions\r\n    for (let evString of evoStrings) {\r\n      const names = evString.split(/->|,| and /).map(s => s.trim());\r\n      for (let name of names) {\r\n        this.pokedexByName.get(name)?.addEvolution(evString);\r\n      }\r\n    }\r\n    if(evoStrings.length == 0 && defaultData) {\r\n      for(let mon of this.pokedex) {\r\n        mon.setEvolutionsFromObject(defaultData.get(mon.name), this.pokedexByName);\r\n      }\r\n    }\r\n\r\n    //Level Up Moves\r\n    for (let moveString of moveStrings) {\r\n      let mon_name = moveString.substring(4, moveString.indexOf('->') - 1);\r\n      let mon = this.pokedexByName.get(mon_name);\r\n      if (mon) {\r\n        for (let level_line of moveString.split('\\r\\n')) {\r\n          if (level_line.match(/Level[ \\da-zA-Z:]*/)) {\r\n            let level = level_line.split(/[ :]/)[1].trim();\r\n            let move_name = level_line.split(':')[1].trim();\r\n            let move = { level: +level, move: move_name } as learned_move;\r\n            mon.learn_levels.push(move.level);\r\n            mon.learned_moves.push(move.move);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if(moveStrings.length==0 && defaultData) {\r\n      for(let mon of this.pokedex) {\r\n        mon.setMovesFromObject(defaultData.get(mon.name));\r\n      }\r\n    }\r\n\r\n    let parseMoveMachineString = (token: string): [number, string] => {\r\n      let match = token.match(/\\d+/);\r\n      let machineId = parseInt(match?match[0]:'0');\r\n      let move = token.slice(token.indexOf(' ')).trim();\r\n      return [machineId, move];\r\n    }\r\n\r\n    //TMS and Compatibility\r\n    let dexHmTokens: string[] = [];\r\n    for (let tmCompString of tmCompStrings) {\r\n      let mon_name = tmCompString.slice(0,tmCompString.indexOf('|')).trim()\r\n      mon_name=mon_name.slice(mon_name.indexOf(' ')).trim();\r\n      let mon = this.pokedexByName.get(mon_name)\r\n      let tmHmTokens = tmCompString.split('|').map(s => s.trim()).filter(s=>s.startsWith('TM') || s.startsWith('HM'));\r\n      let tmTokens = tmHmTokens.filter(s=>s.startsWith('TM'));\r\n      let hmTokens = tmHmTokens.filter(s=>s.startsWith('HM'));\r\n      if(mon) {\r\n        for(let tmString of tmTokens) {\r\n          let [tm, move] = parseMoveMachineString(tmString);\r\n          mon.tms.push(tm)\r\n          mon.tm_moves.push(move)\r\n        }\r\n        for(let hmString of hmTokens) {\r\n          let [hm, move] = parseMoveMachineString(hmString);\r\n          mon.hms.push(hm)\r\n          mon.hm_moves.push(move)\r\n          !(dexHmTokens.includes(hmString)) && dexHmTokens.push(hmString)\r\n        }\r\n      }\r\n    }\r\n    if(tmCompStrings.length == 0 && defaultData) {\r\n      if(tmStrings.length > 0) {\r\n        let tm_moves = ['']\r\n        tm_moves = tm_moves.concat(tmStrings.map(line => line.match(/TM\\d+ (.*)/) ? line.match(/TM\\d+ (.*)/)![1]: ''))\r\n        for(let mon of this.pokedex) {\r\n          mon.setTMMovesFromObject(defaultData.get(mon.name), tm_moves);\r\n        }\r\n      } else {\r\n        for(let mon of this.pokedex) {\r\n          mon.setTMMovesFromObject(defaultData.get(mon.name))\r\n        }\r\n      }\r\n    }\r\n\r\n    //Add TMs and HMs to the world dex\r\n    this.tmIds = [];\r\n    this.tmMoves = [];\r\n    this.hmIds = [];\r\n    this.hmMoves = [];\r\n    for(let tmString of tmStrings) {\r\n      let [tm, move] = parseMoveMachineString(tmString);\r\n      this.tmIds.push(tm);\r\n      this.tmMoves.push(move);\r\n    }\r\n    dexHmTokens.sort()\r\n    for(let hmString of dexHmTokens) {\r\n      let [hm, move] = parseMoveMachineString(hmString);\r\n      this.hmIds.push(hm);\r\n      this.hmMoves.push(move);\r\n    }\r\n\r\n    //Grab Starters (if present) and add to the world dex\r\n    this.starters = [];\r\n    for(let starterString of starterStrings) {\r\n      let starter = starterString.trim().split(' ').pop()\r\n      if(starter)\r\n        this.starters.push(starter);\r\n    }\r\n  }\r\n\r\n  private parseSaveFile(save_data: string) {\r\n    try {\r\n      const save_obj = JSON.parse(save_data);\r\n      this.pokedex = save_obj.pokedex.map(\r\n        (mon_data: any) => Pokemon.loadFromJson(mon_data)\r\n      )\r\n      this.isFullyRevealed = save_obj.full;\r\n      this.allBSTRevealed = save_obj.bsts;\r\n      this.allTypesRevealed = save_obj.types;\r\n      this.allAbilitiesRevealed = save_obj.full;\r\n      this.allEvolutionsRevealed = save_obj.evolutions;\r\n      this.revealedTMs = save_obj.tms;\r\n      this.tmIds = save_obj.tmIds ?? [];\r\n      this.hmIds = save_obj.hmIds ?? [];\r\n      this.tmMoves = save_obj.tmMoves ?? [];\r\n      this.hmMoves = save_obj.hmMoves ?? [];\r\n      this.starters = save_obj.starters ?? [];\r\n      this.allMovesRevealed = save_obj.moves;    \r\n      this.validDexUploaded=true;\r\n      this.dexChanges.next();\r\n      if(this.pokedex.length>0) {\r\n        this.selectPokemon(this.pokedex[0].name)\r\n      }\r\n    } catch {\r\n      alert(\"Bad File Uploaded (have you checked your .pkdx?)\")\r\n    }\r\n  }\r\n\r\n  public loadDefaultData(): Promise<any> {\r\n    // console.log(\"Loading Default\")\r\n    return fetch(this.defaultPkdxName)\r\n      .then(res => res.text())\r\n      .then(text => {\r\n        this.parseFile(text);\r\n        this.loadedFile = this.defaultPkdxName;\r\n      });\r\n  }\r\n\r\n  public loadSampleRandomData(): Promise<any> {\r\n    return fetch(this.sampleRandomPkdxName)\r\n      .then(res => res.text())\r\n      .then(text => {\r\n        this.parseFile(text);\r\n        this.loadedFile = this.sampleRandomPkdxName;\r\n      })\r\n  }\r\n\r\n  private async getDefaultGenData(logBlocks: string[]): Promise<Map<string, any>> {\r\n    //TODO: Get gen from logBlocks[-2]\r\n    let gen = this.getGenerationFromLog(logBlocks);\r\n    try {\r\n      const saveObj = await fetch(`./assets/data/gen${gen}vantest.json`)\r\n        .then(res => {\r\n          if (!res.ok) throw new Error(`Failed to load: ${res.status}`);\r\n          return res.json();\r\n        });\r\n      let defaultDexList: any[] = saveObj.pokedex;\r\n      let res = new Map<string, any>();\r\n      for (let mon of defaultDexList) {\r\n        res.set(mon.name, mon);\r\n      }\r\n      return res;\r\n    } catch (err) {\r\n      console.error('Error loading JSON:', err);\r\n      return new Map<string, any>();\r\n    }\r\n  }\r\n\r\n  private getGenerationFromLog(logBlocks: string[]): string {\r\n    let completion = logBlocks.find(s=>s.trim().startsWith('----------------'))\r\n    if(completion) {\r\n      let match = completion.match(/of (.*?) completed/);\r\n      if(match) {\r\n        let title = match[1].toLowerCase();\r\n        if(    (title.includes('red') && !title.includes('fire'))\r\n            || (title.includes('green') && !title.includes('leaf'))\r\n            || (title.includes('blue'))\r\n            || (title.includes('yellow'))\r\n          ) {\r\n          return '1';\r\n        } else if(    \r\n               (title.includes('gold') && !title.includes('heart'))\r\n            || (title.includes('silver') && !title.includes('soul'))\r\n            || (title.includes('crystal'))\r\n          ) {\r\n          return '2';\r\n        } else if(    \r\n               (title.includes('ruby') && !title.includes('omega'))\r\n            || (title.includes('sapphire') && !title.includes('alpha'))\r\n            || (title.includes('emerald'))\r\n            || (title.includes('red'))\r\n            || (title.includes('green'))\r\n          ) {\r\n          return '3';\r\n        } else if(    \r\n               (title.includes('diamond') && !title.includes('brilliant'))\r\n            || (title.includes('pearl') && !title.includes('shining'))\r\n            || (title.includes('platinum'))\r\n            || (title.includes('silver'))\r\n            || (title.includes('gold'))\r\n          ) {\r\n          return '4';\r\n        } else if(    \r\n               (title.includes('black'))\r\n            || (title.includes('white'))\r\n          ) {\r\n          return '5';\r\n        } else if(    \r\n               (title.includes('pokemon x'))\r\n            || (title.includes('pokemon y'))\r\n            || (title.includes('ruby'))\r\n            || (title.includes('sapphire'))\r\n          ) {\r\n          return '6';\r\n        } else if(    \r\n               (title.includes('sun'))\r\n            || (title.includes('moon'))\r\n          ) {\r\n          return '7';\r\n        } else {\r\n          return '7';\r\n        }\r\n      }\r\n    }\r\n    return '7';\r\n  }\r\n\r\n  // This may be useful when integrating all the views w/ this service\r\n  private updatePokemonList(newList: Pokemon[]) {\r\n    if (newList.length) {\r\n      this.pokedex = newList;\r\n      //Inform our subscribers that the dex has changed\r\n      this.dexChanges.next();\r\n    }\r\n  }\r\n\r\n  public revealAll() {\r\n    for (let mon of this.pokedex) {\r\n      mon.fully_revealed = true;\r\n    }\r\n    this.isFullyRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  public hideAll() {\r\n    for (let mon of this.pokedex) {\r\n      mon.fully_revealed = false;\r\n    }\r\n    this.isFullyRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealAbilities() {\r\n    for (let mon of this.pokedex) {\r\n      mon.abilities_revealed = true;\r\n    }\r\n    this.allAbilitiesRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  hideAbilities() {\r\n    for (let mon of this.pokedex) {\r\n      mon.abilities_revealed = false;\r\n    }\r\n    this.allAbilitiesRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealTypes() {\r\n    for (let mon of this.pokedex) {\r\n      mon.type_revealed = true;\r\n    }\r\n    this.allTypesRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  hideTypes() {\r\n    for (let mon of this.pokedex) {\r\n      mon.type_revealed = false;\r\n    }\r\n    this.allTypesRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealBSTs() {\r\n    for (let mon of this.pokedex) {\r\n      mon.bst_revealed = true;\r\n    }\r\n    this.allBSTRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  hideBSTs() {\r\n    for (let mon of this.pokedex) {\r\n      mon.bst_revealed = false;\r\n    }\r\n    this.allBSTRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  hideEvolutions() {\r\n    for (let mon of this.pokedex) {\r\n      mon.next_evos_revealed = [];\r\n      mon.prev_evos_revealed = [];\r\n    }\r\n    this.allEvolutionsRevealed = false;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealEvolutions() {\r\n    for (let mon of this.pokedex) {\r\n      mon.next_evos.forEach((e, i) => mon.next_evos_revealed.push(i));\r\n      mon.prev_evos.forEach((e, i) => mon.prev_evos_revealed.push(i));\r\n    }\r\n    this.allEvolutionsRevealed = true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealMoves() {\r\n    for (let mon of this.pokedex) {\r\n      mon.learned_moves_revealed_idx = 100;\r\n      mon.tms.forEach((tm, i) => {\r\n        if(!this.revealedTMs.includes(tm))\r\n          this.revealedTMs.push(tm);\r\n        if(!mon.tm_indexes_learned.includes(i))\r\n          mon.tm_indexes_learned.push(i);\r\n      })\r\n    }\r\n    this.allMovesRevealed=true;\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  hideMoves() {\r\n    for(let mon of this.pokedex) {\r\n      mon.learned_moves_revealed_idx = 0;\r\n      mon.tm_indexes_learned = [];\r\n    }\r\n    this.revealedTMs = []\r\n    this.allMovesRevealed=false;\r\n    this.dexChanges.next();\r\n  }\r\n  \r\n  hideTMForAll(tm: number) {\r\n    for(let mon of this.pokedex) {\r\n      mon.hideTM(tm);\r\n    }\r\n    if(this.revealedTMs.includes(tm)) {\r\n      this.revealedTMs.splice(this.revealedTMs.indexOf(tm), 1);\r\n    }\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  revealTMForAll(tm: number) {\r\n    for(let mon of this.pokedex) {\r\n      mon.revealTM(tm);\r\n    }\r\n    if(!this.revealedTMs.includes(tm)) {\r\n      this.revealedTMs.push(tm);\r\n    }\r\n    this.dexChanges.next();\r\n  }\r\n\r\n  public updatePokemon(mon: Pokemon) {\r\n    this.individualChanges.next(mon);\r\n  }\r\n\r\n  public selectPokemon(name: string) {\r\n    this.monSelection.next(name);\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}